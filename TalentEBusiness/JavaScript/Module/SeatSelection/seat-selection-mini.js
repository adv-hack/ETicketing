var box, selections, mat, seatAvailableFill, seatAvailableStroke, seatBasketFill, seatBasketStroke, seatRestrictedFill, seatRestrictedStroke, seatUnavailableFill, seatUnavailableStroke, seatUnavailable2Stroke, seatUnAvailable2Fill, seatDisabledStroke, seatDisabledFill, seatReservedStroke, seatReservedFill, seatTransferableFill, seatTransferableStroke, seatExceptionFill, seatExceptionStroke, seatTicketExchangeFill, seatTicketExchangeStroke, seatPartialSeasonTicketFill, seatPartialSeasonTicketStroke, seatingAreaCanvas, seatingAreaXML, multiSelectRectWidth = 0, multiSelectRectHeight = 0; function dragstart(e, t, a) { if (!0 === multiSelectOn) { zoomScaleFactor = zoomHeight / originalZoom; seatingAreaCanvas._viewBox[0]; zoomScaleFactor > 0 && (e += seatingAreaCanvas._viewBox[0] / zoomScaleFactor, t += seatingAreaCanvas._viewBox[1] / zoomScaleFactor), box = seatingAreaCanvas.rect((e - $("#select").offset().left) * zoomScaleFactor, (t - $("#select").offset().top) * zoomScaleFactor, 0, 0) } } function multiSelectOnClick() { !0 === multiSelectOn ? (multiSelectOn = !1, document.getElementById("btnMultiSelect").value = multiSelectOffText, $(".ebiz-svg-container").removeClass("ebiz-multiselect-on"), $(".ebiz-svg-container").addClass("ebiz-multiselect-off"), mat && mat.remove()) : (seatingAreaCanvasWidth > seatingAreaCanvasHeight ? (multiSelectRectHeight = zoomHeight, multiSelectRectWidth = zoomHeight / seatingAreaCanvasHeight * seatingAreaCanvasWidth) : (multiSelectRectWidth = zoomWidth, multiSelectRectHeight = zoomWidth / seatingAreaCanvasWidth * seatingAreaCanvasHeight), (mat = seatingAreaCanvas.rect(xPOSVIEW, yPOSVIEW, multiSelectRectWidth, multiSelectRectHeight).attr("fill", "#FFF").attr("stroke-width", 0)).toBack(), mat.drag(dragmove, dragstart, dragend), zoomScaleFactor = zoomHeight / prevCanvasHeight, multiSelectOn = !0, $(".ebiz-svg-container").removeClass("ebiz-multiselect-off"), $(".ebiz-svg-container").addClass("ebiz-multiselect-on"), document.getElementById("btnMultiSelect").value = multiSelectOnText) } function dragmove(e, t, a, i, r) { if (!0 === multiSelectOn) { var n = 0, s = 0; (e *= zoomScaleFactor) < 0 && (n = e, e *= -1), (t *= zoomScaleFactor) < 0 && (s = t, t *= -1), box.transform("T" + n + "," + s), box.attr("width", e), box.attr("height", t) } } function dragend(e) { if (!0 === multiSelectOn) { var t = box.getBBox(); for (var a in box.remove(), $("#loading-image").show(), set.items) { if (basket.length >= basketMax) { alert(ExceededBasketLimitText); break } if (set[a]) { var i = set[a].node.getBBox(); if ((i.y >= t.y && i.y <= t.y2 || i.y2 >= t.y && i.y2 <= t.y2) && (i.x >= t.x && i.x <= t.x2 || i.x2 >= t.x && i.x2 <= t.x2)) { var r = set[a].data("avail"), n = set[a].data("seatCode"), s = set[a].data("priceBreakId"); if (!existsInBasket(n) && "." != r && ".2" != r && "B" != r && "T" != r) { set[a].attr("fill", seatSelectedFill), set[a].attr("stroke", seatSelectedStroke); var o = stand.split("-"), l = n.split("/"), d = { SeatInfo: n, Price: "", PriceBreakId: s, Stand: o[0], Area: o[1], Row: l[1], Seat: l[2], PriceBand: defaultPriceBand }; basket.push(d), basket.length <= 10 && addHTMLRowItemToMiniBasketTable(d), $("#btnBuy").show(), $("#btnClearSeats").show(), $("#detailed-seat-list-panel").show() } } } } sortResults("SeatInfo", !0), displayedStandAndAreaBasket = [], updateNumberOfSelectedSeats(), $("#loading-image").hide() } } var seatInfo, SeatTipAreaCode, SeatTipStandCode, SeatTipSeatRow, SeatTipNumber, SeatTipPrice, miniSeatingAreaCanvas, start, end, seatingAreaStandDesc, seatingAreaAreaDesc, restrictionCode, restrictionDesc, reservationCode, reservationDesc, seatingEndTime, seatingStartTime, stadiumCanvas, stand, tipText = "", basket = [], multiSelect = new Array, multiSelectNo = 0, multiSelectOn = !1, gTransfer = !1, displayedStandAndAreaBasket = [], priceBreaks = [], ticketExchangeAndSilding = !1; function createSeatSelection(e, t) { var a, i, r, n, s = document.getElementById("hdfDescriptionsXML").value, o = GetParameterByName("packageId"), l = GetParameterByName("componentId"), d = GetParameterByName("changeallseats"); seatingAreaCanvas && seatingAreaCanvas.remove(), stand = e, a = e.split("-"), seatingAreaCanvas = Raphael("select", seatingAreaCanvasWidth, seatingAreaCanvasHeight); s = document.getElementById("hdfDescriptionsXML").value; $(s).find("saa").each(function () { var e = $(this), t = e.attr("sc"), i = e.attr("sd"), r = e.attr("ac"), n = e.attr("ad"); t == a[0] && (seatingAreaStandDesc = i), r == a[1] && (seatingAreaAreaDesc = n) }), 1 == isSeatSelectionOnly ? (i = "seatSelection.aspx/GetSeating", t = { SelectedMinimumPrice: GetParameterByName("selectedMinimumPrice"), SelectedMaximumPrice: GetParameterByName("selectedMaximumPrice"), SelectedPriceBreak: GetParameterByName("priceBreakId"), SelectedStand: a[0], SelectedArea: a[1], RefreshMinimumPriceList: !0, RefreshMaximumPriceList: !0, RefreshAreaList: !0, RefreshStandList: !0, RefreshPriceBreakList: !0, IncludeTicketExchangeSeats: !1, NewAreaForSeats: !0 }) : (i = "VisualSeatSelection.aspx/GetSeating", null == t && (t = GetAPISettingsFromStandAndAreaOptions(!1, !1, !1, !1, !1, !0, !1))), 1 == t.IncludeTicketExchangeSeats && (r = $("#slider-handle-ticket-exchange-min").val(), n = $("#slider-handle-ticket-exchange-max").val(), ticketExchangeAndSilding && (seatingStartTime = (new Date).getTime())), $("#loading-image").show(), $.ajax({ type: "POST", url: i, data: '{data: "' + e + '","productCode":"' + productCode + '","stadiumCode":"' + stadiumCode + '","campaignCode":"' + campaignCode + '","callId":"' + callId + '","currentExceptionSeat":"' + currentExceptionSeat + '","priceBreakId":"' + t.SelectedPriceBreak + '","includeTicketExchangeSeats":"' + t.IncludeTicketExchangeSeats + '","selectedMinimumPrice":"' + t.SelectedMinimumPrice + '","selectedMaximumPrice":"' + t.SelectedMaximumPrice + '","ticketExchangeMin":"' + r + '","ticketExchangeMax":"' + n + '","packageId":"' + o + '","componentId":"' + l + '","changeAllSeats":"' + d + '"}', contentType: "application/json; charset=utf-8", dataType: "json", cache: !1, success: function (e) { if (createSeatingArea(e.d), createMiniSeatingArea(e.d), $("#loading-image").hide(), 1 == t.IncludeTicketExchangeSeats) if (ticketExchangeAndSilding) { seatingEndTime = (new Date).getTime(); setTimeout(function () { $(".slider").removeClass("disabled") }, 1e3) } else $(".slider").removeClass("disabled"); var a = []; $(seatingAreaXML).find("pbreak").each(function () { var e = $(this); a.push({ PriceBreakId: e.attr("id"), PriceBreakDescription: e.attr("d"), PriceBreakDefaultPriceBandPrice: e.attr("p"), DisplayPrice: e.attr("f") }) }), a.sort(function (e, t) { return parseFloat(e.PriceBreakDefaultPriceBandPrice) - parseFloat(t.PriceBreakDefaultPriceBandPrice) }), SetupDynamicStandAndAreaOptions(void 0, t, !1, !1, !1, a, !1, isStadiumExpaned) }, error: function (e, t) { $("#loading-image").hide(), $(".slider").removeClass("disabled"), alert(t + "  " + e.responseText) } }), seatingAreaCanvas.setViewBox(0, 0, seatingAreaCanvas.width, seatingAreaCanvas.height), viewBoxWidth = seatingAreaCanvas.width, viewBoxHeight = seatingAreaCanvas.height, mousedown = !1, oX = 0, oY = 0, oWidth = viewBoxWidth, oHeight = viewBoxHeight, (viewBox = seatingAreaCanvas.setViewBox(oX, oY, viewBoxWidth, viewBoxHeight)).X = oX, viewBox.Y = oY, endSeatSelection(e), $(".ebiz-priceband").each(function () { $(this).hide() }) } function createMiniSeatingArea(e) { var t; $("#display").show(), miniSeatingAreaCanvas && miniSeatingAreaCanvas.remove(), miniSeatingAreaCanvas = Raphael("display", seatingAreaCanvasWidth, seatingAreaCanvasHeight), window.DOMParser ? (parser = new DOMParser, t = parser.parseFromString(e, "text/xml")) : ((t = new ActiveXObject("Microsoft.XMLDOM")).async = "false", t.loadXML(e)), seatingAreaXML = t, $(t).find("s").each(function () { var e = $(this), t = e.attr("a"), a = e.attr("x"), i = e.attr("y"); if (existsInBasket(stand + "/" + e.attr("r") + "/" + e.attr("n"))) miniSeatingAreaCanvas.circle(a, i, 8).attr({ fill: seatSelectedStroke }); else switch (t) { case "A": miniSeatingAreaCanvas.circle(a, i, 8).attr({ fill: seatAvailableFill, stroke: seatAvailableStroke }); break; case ".": miniSeatingAreaCanvas.circle(a, i, 8).attr({ fill: seatUnavailableFill, stroke: seatUnavailableStroke }); break; case "B": miniSeatingAreaCanvas.circle(a, i, 8).attr({ fill: seatBasketFill, stroke: seatBasketStroke }); break; case "X": miniSeatingAreaCanvas.circle(a, i, 8).attr({ fill: seatRestrictedFill, stroke: seatRestrictedStroke }); break; case ".2": miniSeatingAreaCanvas.circle(a, i, 8).attr({ fill: seatUnAvailable2Fill, stroke: seatUnavailable2Stroke }); break; case "D": miniSeatingAreaCanvas.circle(a, i, 8).attr({ fill: seatDisabledFill, stroke: seatDisabledStroke }); break; case "R": miniSeatingAreaCanvas.circle(a, i, 8).attr({ fill: seatReservedFill, stroke: seatReservedStroke }); break; case "C": miniSeatingAreaCanvas.circle(a, i, 8).attr({ fill: seatCustomerReservedFill, stroke: seatCustomerReservedStroke }); break; case "S": miniSeatingAreaCanvas.circle(a, i, 8).attr({ fill: seatPartialSeasonTicketFill, stroke: seatPartialSeasonTicketStroke }) } }), miniSeatingAreaCanvas.setViewBox(0, 0, document.getElementById("maxX").value, document.getElementById("maxY").value, !1), miniSeatingAreaCanvas.setSize(.35 * stadiumCanvasHeight, .35 * stadiumCanvasWidth), zoomScaleFactor = zoomHeight / prevCanvasHeight, (miniMat = miniSeatingAreaCanvas.rect(0, 0, 400 * zoomScaleFactor, 300 * zoomScaleFactor).attr("stroke-width", 1).attr("stroke", "#ff0000").attr("fill-opacity", .5).attr("fill", "#ff0000")).drag(minidragmove, minidragstart, minidragend) } function endSeatSelection(e) { 0 == isSeatSelectionOnly && (stadiumCanvas.setViewBox(0, 0, stadiumCanvasWidth, stadiumCanvasHeight, !1), stadiumCanvas.setSize(stadiumCanvasWidthResized, stadiumCanvasHeightResized), 1 == isStadiumExpaned && $("#backButton").show()), isStadiumExpaned = !1, $("#pitchStands").hide(), $(".ebiz-match-text").hide(), $(".ebiz-teams-wrapper").hide(), $("#select").show(), $(".ebiz-zoom-options").show(), $(".ebiz-seating-key").show(), $("#btnViewFromArea").show(), $("#btnChangeStandView").hide(), $("#navigation-options").show(), $("#quick-buy-option").hide(), $("#btnResetSeating").show(), $(".c-ticket-exchange").hide(), selectedStandAreaTEAllowed && $(".c-ticket-exchange").show(), $(".c-price-band-best-available").hide(), $(".c-price-band-concession").hide(), isAgent && ($("#btnMultiSelect").show(), isRowSeatOnSVG && $("#btnRowSeatCodes").show()), viewFromAreaUrl = ""; var t = e.split("-"); viewFromAreaUrl = viewFromAreaUrlPrefix + t[0] + t[1] + ".jpg", $(".ebiz-stand-availability").hide(), $(".ebiz-stand-pricing").hide(), $(".ebiz-svg-container").addClass("ebiz-seat-view"), $(".ebiz-svg-container").removeClass("ebiz-area-view"), $("#svg-controls").removeClass("large-12 columns"), $("#svg-controls").addClass("medium-3 columns"), $("#svg-wrapper").addClass("medium-9 columns"), $("#svg-wrapper").show(), multiSelectOn = !1, document.getElementById("btnMultiSelect").value = multiSelectOffText, document.getElementById("quick-buy-quantity").innerHTML = basketMin, 1 == use3DSeatView && ($("#ticketing3DSeatView").show(), tk3d.fixedAspectRatio(!0), tk3d.size(700, 300), tk3d.load("S_" + t[1])) } function ViewFromAreaClick() { Shadowbox.open({ player: "img", content: viewFromAreaUrl }) } function addTip(e, t, a, i, r, n, s) { var o = t.split("/"), l = o[0].split("-"); $(e).on("mouseover", function () { SeatTipAreaCode = l[0], SeatTipStandCode = l[1], SeatTipSeatRow = o[1], SeatTipNumber = o[2], SeatTipPrice = s, restrictionCode = a, restrictionDesc = i, reservationCode = r, reservationDesc = n, $("#tip").show(), over = !0 }), $(e).on("mouseout", function () { $("#tip").hide(), over = !1 }) } function doesPriceBreakExistInPriceBreakList(e) { for (t = 0; t < priceBreaks.length; t++)if (e == priceBreaks[t].PriceBreakId) return !0; return !1 } function createSeatingArea(e) { var t; set = seatingAreaCanvas.set(), window.DOMParser ? (parser = new DOMParser, t = parser.parseFromString(e, "text/xml")) : ((t = new ActiveXObject("Microsoft.XMLDOM")).async = "false", t.loadXML(e)), seatingAreaXML = t; var a, i, r = 0, n = []; for ($(t).find("pbreak").each(function () { var e = $(this), a = []; e.find("d").each(function () { var e, i = $(this); $(t).find("pband").children("d").each(function () { var t = $(this); if (t.attr("b") == i.attr("b")) return e = t.attr("desc"), !1 }), a.push({ Price: i.attr("p"), Description: e, PriceBand: i.attr("b"), DisplayPrice: i.attr("f") }) }), n.push({ PriceBreakId: e.attr("id"), PriceBreakPriceBandItems: a }) }), j = 0; j < n.length; j++)doesPriceBreakExistInPriceBreakList(n[j].PriceBreakId) || priceBreaks.push(n[j]); r = 0, isRowSeatOnSVG && $(t).find("t").each(function () { var e = $(this), t = e.attr("x"), a = e.attr("y"), i = e.attr("v"), r = e.attr("t"), n = seatingAreaCanvas.text(t, a, i); "s" == r && n.transform("r45") }), $(t).find("s").each(function () { var e, t = $(this), n = t.attr("a"), s = t.attr("pb"), o = t.attr("x"), l = t.attr("y"), d = (t.attr("r"), t.attr("n")), c = t.attr("p"), u = stand + "/" + t.attr("r") + "/" + t.attr("n"), m = t.attr("v"), S = t.attr("vDesc"), v = t.attr("rs"), p = t.attr("rsDesc"); 0 == r && (r = 1, a = t.attr("cn"), i = t.attr("rn"), seatUnavailableFill = t.attr("uo"), seatUnavailableStroke = t.attr("uc"), seatAvailableStroke = t.attr("ac"), null == (seatAvailableFill = t.attr("ao")) && null == seatAvailableStroke && (seatAvailableStroke = seatUnavailableStroke, seatAvailableFill = seatUnavailableFill), seatCustomerReservedStroke = t.attr("cc"), seatCustomerReservedFill = t.attr("co"), null == seatCustomerReservedFill && null == seatCustomerReservedStroke && (seatCustomerReservedStroke = seatUnavailableStroke, seatCustomerReservedFill = seatUnavailableFill), seatBasketFill = t.attr("bo"), seatBasketStroke = t.attr("bc"), null == seatBasketFill && null == seatBasketStroke && (seatBasketStroke = seatUnavailableStroke, seatBasketFill = seatUnavailableFill), seatRestrictedFill = t.attr("ro"), seatRestrictedStroke = t.attr("rc"), null == seatRestrictedFill && null == seatRestrictedStroke && (seatRestrictedStroke = seatUnavailableStroke, seatRestrictedFill = seatUnavailableFill), seatUnavailable2Stroke = t.attr("u2c"), null == (seatUnAvailable2Fill = t.attr("u2o")) && null == seatUnavailable2Stroke && (seatUnavailable2Stroke = seatUnavailableStroke, seatUnAvailable2Fill = seatUnavailableFill), seatDisabledStroke = t.attr("dc"), null == (seatDisabledFill = t.attr("do")) && null == seatDisabledStroke && (seatDisabledStroke = seatUnavailableStroke, seatDisabledFill = seatUnavailableFill), seatReservedStroke = t.attr("vc"), null == (seatReservedFill = t.attr("vo")) && null == seatReservedStroke && (seatReservedStroke = seatUnavailableStroke, seatReservedFill = seatUnavailableFill), seatHoverFill = t.attr("ho"), seatHoverStroke = t.attr("hc"), null == seatHoverFill && null == seatHoverStroke && (seatHoverStroke = seatUnavailableStroke, seatHoverFill = seatUnavailableFill), seatSelectedFill = t.attr("selo"), seatSelectedStroke = t.attr("selc"), null == seatSelectedFill && null == seatSelectedStroke && (seatSelectedStroke = seatUnavailableStroke, seatSelectedFill = seatUnavailableFill), seatTransferableFill = t.attr("to"), seatTransferableStroke = t.attr("tc"), null == seatTransferableFill && null == seatTransferableStroke && (seatTransferableStroke = seatUnavailableStroke, seatTransferableFill = seatUnavailableFill), seatExceptionFill = t.attr("eo"), seatExceptionStroke = t.attr("ec"), null == seatExceptionFill && null == seatExceptionStroke && (seatExceptionStroke = seatUnavailableStroke, seatExceptionFill = seatUnavailableFill), seatTicketExchangeFill = t.attr("txo"), seatTicketExchangeStroke = t.attr("txc"), null == seatTicketExchangeFill && null == seatTicketExchangeStroke && (seatTicketExchangeStroke = seatUnavailableStroke, seatTicketExchangeFill = seatUnavailableFill), seatPartialSeasonTicketFill = t.attr("pso"), seatPartialSeasonTicketStroke = t.attr("psc"), null == seatPartialSeasonTicketFill && null == seatPartialSeasonTicketStroke && (seatPartialSeasonTicketStroke = seatUnavailableStroke, seatPartialSeasonTicketFill = seatUnavailableFill)); var h = u.split("/"); h[0].split("-"); if (existsInBasket(u)) { if ("T" == n) e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatTransferableFill, stroke: seatTransferableStroke }).data("seatCode", u).data("priceBreakId", s).data("orginalFill", seatTransferableFill).data("orginalStroke", seatTransferableStroke).data("avail", n), $(e.node).on("mouseout", function () { existsInBasket(u) && e.attr({ fill: seatTransferableFill, stroke: seatTransferableStroke }) }), $(e.node).on("click", function (a) { $(".ebiz-seat-details").hide(), $(".ebiz-restriction-details").hide(), seatClick(t, e, u, seatTransferableFill, seatTransferableStroke, !0) }), addTip(e.node, u, void 0, void 0, void 0, void 0, c); else { if (e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatSelectedFill, stroke: seatSelectedStroke }).data("seatCode", u).data("priceBreakId", s).data("avail", n), $(e.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatAvailableFill, stroke: seatAvailableStroke }), $("#tip").hide(), over = !1 }), $(e.node).on("mouseover", function () { SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0 }), $(e.node).on("click", function () { $(".ebiz-seat-details").hide(), $(".ebiz-restriction-details").hide(), seatClick(t, e, u, seatAvailableFill, seatAvailableStroke, !1) }), isAgent && isRowSeatOnSVG) { var f = trimStartZerosfromSeat(d), g = seatingAreaCanvas.text(o, l, f); $(g.node).on("click", function () { seatClick(t, e, u, seatAvailableFill, seatAvailableStroke, !1) }), $(g.node).on("mouseover", function () { existsInBasket(u) || (e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }), g.node.style.cursor = "default") }), $(g.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatAvailableFill, stroke: seatAvailableStroke }) }), g.mouseover(function () { "ontouchstart" in document.documentElement || (SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0) }) } $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }) } $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }), $(e.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatAvailableFill, stroke: seatAvailableStroke }) }) } else switch (n) { case "A": var k = u.split("/"), b = h[0].split("-"); if (e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatAvailableFill, stroke: seatAvailableStroke }).data("seatCode", u).data("priceBreakId", s).data("orginalFill", seatAvailableFill).data("orginalStroke", seatAvailableStroke).data("avail", n), $(e.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatAvailableFill, stroke: seatAvailableStroke }), $("#tip").hide(), over = !1 }), $(e.node).on("mouseover", function () { SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0 }), $(e.node).on("click", function () { $(".ebiz-seat-details").hide(), $(".ebiz-restriction-details").hide(), seatClick(t, e, u, seatAvailableFill, seatAvailableStroke, !1) }), isAgent && isRowSeatOnSVG) { f = trimStartZerosfromSeat(d), g = seatingAreaCanvas.text(o, l, f); $(g.node).on("click", function () { seatClick(t, e, u, seatAvailableFill, seatAvailableStroke, !1) }), $(g.node).on("mouseover", function () { existsInBasket(u) || (e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }), g.node.style.cursor = "default") }), $(g.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatAvailableFill, stroke: seatAvailableStroke }) }), $(g.node).on("mouseover", function () { g.node.style.cursor = "default", SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0 }), g.mouseover(function () { "ontouchstart" in document.documentElement || (SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0) }) } $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }); break; case ".": k = u.split("/"), b = h[0].split("-"); if (e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatUnavailableFill, stroke: seatUnavailableStroke }).data("seatCode", u).data("priceBreakId", s).data("orginalFill", seatUnavailableFill).data("orginalStroke", seatUnavailableStroke).data("avail", n), $(e.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatUnavailableFill, stroke: seatUnavailableStroke }), $("#tip").hide(), over = !1 }), $(e.node).on("mouseover", function () { SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0 }), $(e.node).on("click", function (e) { 1 == showCustomerDetails && $.ajax({ type: "POST", url: "VisualSeatSelection.aspx/GetSeatInformation", cache: !1, data: '{data: "' + u + '","productCode":"' + productCode + '","stadiumCode":"' + stadiumCode + '","campaignCode":"' + campaignCode + '","changeAllSeats":"' + changeAllSeats + '"}', contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { getSeatingDetails(e.d) }, error: function (e, t) { alert(t + "  " + e.responseText) } }) }), isAgent && isRowSeatOnSVG) { f = trimStartZerosfromSeat(d), g = seatingAreaCanvas.text(o, l, f); $(g.node).on("click", function () { 1 == showCustomerDetails && $.ajax({ type: "POST", url: "VisualSeatSelection.aspx/GetSeatInformation", cache: !1, data: '{data: "' + u + '","productCode":"' + productCode + '","stadiumCode":"' + stadiumCode + '","campaignCode":"' + campaignCode + '","changeAllSeats":"' + changeAllSeats + '"}', contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { getSeatingDetails(e.d) }, error: function (e, t) { alert(t + "  " + e.responseText) } }) }), $(g.node).on("mouseover", function () { g.node.style.cursor = "default", SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0 }), g.mouseover(function () { "ontouchstart" in document.documentElement || (SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0) }) } break; case "B": e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatBasketFill, stroke: seatBasketStroke }).data("seatCode", u).data("avail", n), $(e.node).on("mouseout", function () { e.attr({ fill: seatBasketFill, stroke: seatBasketStroke }) }), addTip(e.node, u, void 0, void 0, void 0, void 0, c), $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }); break; case "X": if (e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatRestrictedFill, stroke: seatRestrictedStroke }).data("seatCode", u).data("priceBreakId", s).data("orginalFill", seatRestrictedFill).data("orginalStroke", seatRestrictedStroke).data("avail", n), $(e.node).on("click", function (a) { $(".ebiz-seat-details").hide(), $(".ebiz-restriction-details").hide(), seatClick(t, e, u, seatRestrictedFill, seatRestrictedStroke, !1) }), $(e.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatRestrictedFill, stroke: seatRestrictedStroke }) }), addTip(e.node, u, m, S, void 0, void 0, c), isAgent && isRowSeatOnSVG) { var x = seatingAreaCanvas.text(o, l, m); x.click(function (a) { seatClick(t, e, u, seatRestrictedFill, seatRestrictedStroke, !1) }), x.hover(function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }), x.mouseout(function () { existsInBasket(u) || e.attr({ fill: seatRestrictedFill, stroke: seatRestrictedStroke }) }), addTip(x, u, m, S, void 0, void 0, c) } $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }); break; case ".2": e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatUnAvailable2Fill, stroke: seatUnavailable2Stroke }).data("seatCode", u).data("orginalFill", seatUnAvailable2Fill).data("orginalStroke", seatUnavailable2Stroke).data("avail", n), $(e.node).on("mouseout", function () { e.attr({ fill: seatUnAvailable2Fill, stroke: seatUnavailable2Stroke }) }), $(e.node).on("click", function (e) { 1 == showCustomerDetails && $.ajax({ type: "POST", url: "VisualSeatSelection.aspx/GetSeatInformation", data: '{data: "' + u + '","productCode":"' + productCode + '","stadiumCode":"' + stadiumCode + '","campaignCode":"' + campaignCode + '","changeAllSeats":"' + changesAllSeats + '"}', contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { getSeatingDetails(e.d) }, error: function (e, t) { alert(t + "  " + e.responseText) } }) }), addTip(e.node, u, void 0, void 0, void 0, void 0, c), $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }); break; case "D": e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatDisabledFill, stroke: seatDisabledStroke }).data("seatCode", u).data("orginalFill", seatDisabledFill).data("orginalStroke", seatDisabledStroke).data("priceBreakId", s).data("avail", n), $(e.node).on("click", function (a) { $(".ebiz-seat-details").hide(), $(".ebiz-restriction-details").hide(), seatClick(t, e, u, seatDisabledFill, seatDisabledStroke, !1) }), $(e.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatDisabledFill, stroke: seatDisabledStroke }) }), addTip(e.node, u, m, S, void 0, void 0, c), $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }); break; case "R": if (e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatReservedFill, stroke: seatReservedStroke }).data("seatCode", u).data("priceBreakId", s).data("orginalFill", seatReservedFill).data("orginalStroke", seatReservedStroke).data("avail", n), $(e.node).on("click", function (a) { $(".ebiz-seat-details").hide(), $(".ebiz-restriction-details").hide(), 1 == isAgent && seatClick(t, e, u, seatReservedFill, seatReservedStroke, !1) }), $(e.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatReservedFill, stroke: seatReservedStroke }) }), addTip(e.node, u, void 0, void 0, v, p, c), isAgent && isRowSeatOnSVG) { var A = seatingAreaCanvas.text(o, l, v); A.click(function (a) { seatClick(t, e, u, seatReservedFill, seatReservedStroke, !1) }), A.hover(function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }), A.mouseout(function () { existsInBasket(u) || e.attr({ fill: seatReservedFill, stroke: seatReservedStroke }) }), addTip(A, u, void 0, void 0, v, p, c) } $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }); break; case "C": e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatCustomerReservedFill, stroke: seatCustomerReservedStroke }).data("seatCode", u).data("priceBreakId", s).data("orginalFill", seatCustomerReservedFill).data("orginalStroke", seatCustomerReservedStroke).data("avail", n), $(e.node).on("mouseout", function () { e.attr({ fill: seatCustomerReservedFill, stroke: seatCustomerReservedStroke }) }), $(e.node).on("click", function (a) { seatClick(t, e, u, seatAvailableFill, seatAvailableStroke, !1), 1 == showCustomerDetails && $.ajax({ type: "POST", url: "VisualSeatSelection.aspx/GetSeatInformation", data: '{data: "' + u + '","productCode":"' + productCode + '","stadiumCode":"' + stadiumCode + '","campaignCode":"' + campaignCode + '","changeAllSeats":"' + changeAllSeats + '"}', contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { getSeatingDetails(e.d) }, error: function (e, t) { alert(t + "  " + e.responseText) } }) }), addTip(e.node, u, void 0, void 0, void 0, void 0, c), $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }); break; case "T": e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatAvailableFill, stroke: seatAvailableStroke }).data("seatCode", u).data("priceBreakId", s).data("orginalFill", seatAvailableFill).data("orginalStroke", seatAvailableStroke).data("avail", n), $(e.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatAvailableFill, stroke: seatAvailableStroke }) }), $(e.node).on("click", function (a) { $(".ebiz-seat-details").hide(), $(".ebiz-restriction-details").hide(), seatClick(t, e, u, seatTransferableFill, seatTransferableStroke, !0) }), addTip(e.node, u, void 0, void 0, void 0, void 0, c), $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }); break; case "EX": e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatExceptionFill, stroke: seatExceptionStroke }).data("seatCode", u).data("priceBreakId", s).data("orginalFill", seatExceptionFill).data("orginalStroke", seatExceptionStroke).data("avail", n), $(e.node).on("mouseout", function () { e.attr({ fill: seatExceptionFill, stroke: seatExceptionStroke }) }), addTip(e.node, u, void 0, void 0, void 0, void 0, c), $(e.node).on("mouseover", function () { e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }); break; case "TX": k = u.split("/"), b = h[0].split("-"); if (e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatTicketExchangeFill, stroke: seatTicketExchangeStroke }).data("seatCode", u).data("priceBreakId", s).data("orginalFill", seatTicketExchangeFill).data("orginalStroke", seatTicketExchangeStroke).data("avail", n), isAgent && isRowSeatOnSVG) { f = trimStartZerosfromSeat(d), g = seatingAreaCanvas.text(o, l, f); $(g.node).on("click", function () { seatClick(t, e, u, seatTicketExchangeFill, seatTicketExchangeStroke, !1) }), $(g.node).on("mouseover", function () { existsInBasket(u) || (e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }), g.node.style.cursor = "default") }), $(g.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatTicketExchangeFill, stroke: seatTicketExchangeStroke }) }), $(g.node).on("mouseover", function () { g.node.style.cursor = "default", SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0 }), g.mouseover(function () { "ontouchstart" in document.documentElement || (SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0) }) } $(e.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatTicketExchangeFill, stroke: seatTicketExchangeStroke }) }), addTip(e.node, u, void 0, void 0, void 0, void 0, c), $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }), $(e.node).on("click", function () { $(".ebiz-seat-details").hide(), $(".ebiz-restriction-details").hide(), seatClick(t, e, u, seatTicketExchangeFill, seatTicketExchangeStroke, !1) }); break; case "S": k = u.split("/"), b = h[0].split("-"); if (e = seatingAreaCanvas.circle(o, l, 8).attr({ fill: seatPartialSeasonTicketFill, stroke: seatPartialSeasonTicketStroke }).data("seatCode", u).data("priceBreakId", s).data("orginalFill", seatPartialSeasonTicketFill).data("orginalStroke", seatPartialSeasonTicketStroke).data("avail", n), $(e.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatPartialSeasonTicketFill, stroke: seatPartialSeasonTicketStroke }), $("#tip").hide(), over = !1 }), $(e.node).on("mouseover", function () { SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0 }), $(e.node).on("click", function () { $(".ebiz-seat-details").hide(), $(".ebiz-restriction-details").hide(), seatClick(t, e, u, seatPartialSeasonTicketFill, seatPartialSeasonTicketStroke, !1) }), isAgent && isRowSeatOnSVG) { f = trimStartZerosfromSeat(d), g = seatingAreaCanvas.text(o, l, f); $(g.node).on("click", function () { seatClick(t, e, u, seatPartialSeasonTicketFill, seatPartialSeasonTicketStroke, !1) }), $(g.node).on("mouseover", function () { existsInBasket(u) || (e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }), g.node.style.cursor = "default") }), $(g.node).on("mouseout", function () { existsInBasket(u) || e.attr({ fill: seatPartialSeasonTicketFill, stroke: seatPartialSeasonTicketStroke }) }), $(g.node).on("mouseover", function () { g.node.style.cursor = "default", SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0 }), g.mouseover(function () { "ontouchstart" in document.documentElement || (SeatTipAreaCode = b[0], SeatTipStandCode = b[1], SeatTipSeatRow = k[1], SeatTipNumber = k[2], SeatTipPrice = c, restrictionCode = void 0, restrictionDesc = void 0, reservationCode = void 0, reservationDesc = void 0, $("#tip").show(), over = !0) }) } $(e.node).on("mouseover", function () { existsInBasket(u) || e.attr({ fill: seatHoverFill, stroke: seatHoverStroke }) }) }set.push(e) }), a = 8 * a + 25 * a, i = 8 * i + 25 * i, $("#maxX").val(a), $("#maxY").val(i), resetSlider(!1) } function selectionPersistence(e, t, a) { for (var i = 0; i < basket.length; i++)if (basket[i] == e) return t; return a } function deleteRow(e) { var t = e.parentNode.parentNode.id, a = basket.map(function (e) { return e.SeatInfo }).indexOf(t); basket.splice(a, 1); GetParameterByName("changeallseats"); updateNumberOfSelectedSeats(); var i = t.split("/"); if (stand === i[0]) for (var r in set.items) { var n = set.items[r]; if (n.data("seatCode") === t) { "Y" ? (n.attr("fill", seatAvailableFill), n.attr("stroke", seatAvailableStroke)) : (n.attr("fill", n.data("orginalFill")), n.attr("stroke", n.data("orginalStroke"))); break } } var s = $(".c-price-band-selection .row"); s.each(function () { $(this).remove() }), (s = $(".c-price-band-selection .c-price-band-selection__block")).each(function () { $(this).remove() }); for (r = 0; r < basket.length; r++)r < 10 && addHTMLRowItemToMiniBasketTable(basket[r]); displayedStandAndAreaBasket = [] } function sortResults(e, t) { basket = basket.sort(function (a, i) { return t ? a[e] > i[e] ? 1 : a[e] < i[e] ? -1 : 0 : i[e] > a[e] ? 1 : i[e] < a[e] ? -1 : 0 }) } function addRow(e) { sortResults("SeatInfo", !0); var t = $(".c-price-band-selection .row"); t.each(function () { $(this).remove() }), (t = $(".c-price-band-selection .c-price-band-selection__block")).each(function () { $(this).remove() }); for (var a = 0; a < basket.length; a++)a < 10 && addHTMLRowItemToMiniBasketTable(basket[a]); displayedStandAndAreaBasket = [] } function isStandAndAreaBasketDisplayed(e) { for (d = 0; d < displayedStandAndAreaBasket.length; d++)if (displayedStandAndAreaBasket[d] == e) return !0; return !1 } function addHTMLRowItemToMiniBasketTable(e) { document.getElementById("hdfRowText").value, document.getElementById("hdfSeatText").value; var t = "", a = ""; $(document.getElementById("hdfDescriptionsXML").value).find("saa").each(function () { var i = $(this); if (i.attr("sc") == e.Stand && (a = i.attr("sd")), i.attr("ac") == e.Area && (t = i.attr("ad")), "" != t && "" != a) return !1 }), displayedStandAndAreaBasket.length > 0 && isStandAndAreaBasketDisplayed(e.Stand + "-" + e.Area) || ($(".c-price-band-selection").append("<h3 class='c-price-band-selection__block'>" + a + "&ndash;" + t + "</h3>"), displayedStandAndAreaBasket.push(e.Stand + "-" + e.Area)); var i, r = [], n = [], s = []; for (j = 0; j < priceBreaks.length; j++)if (priceBreaks[j].PriceBreakId == e.PriceBreakId) for (l = 0; l < priceBreaks[j].PriceBreakPriceBandItems.length; l++)r.push(priceBreaks[j].PriceBreakPriceBandItems[l].PriceBand), n.push(priceBreaks[j].PriceBreakPriceBandItems[l].Description), s.push(priceBreaks[j].PriceBreakPriceBandItems[l].DisplayPrice); "" == e.PriceBand && (customerPriceBandIndex = r.indexOf(loggedInCustomerPriceBand), i = r.indexOf(defaultPriceBand), customerPriceBandIndex > -1 && "" != loggedInCustomerPriceBand ? e.PriceBand = loggedInCustomerPriceBand : i > -1 && "" != i ? e.PriceBand = defaultPriceBand : r.length > 0 && (e.PriceBand = r[0])); var o = defaultPriceBandDescription, d = r.indexOf(e.PriceBand); d > -1 && (o = n[d]); var c = "", u = e.SeatInfo.replace("/", ""); if (u = u.replace("/", ""), allowPriceBandSelection && "True" == allowPriceBandSelection && !isBulkMode && priceBreaks.length > 0 && "" != e.PriceBreakId && (!e.AvailabilityCode || "TX" != e.AvailabilityCode)) { for (c = '<div class="columns c-price-band-selection__band"><select class="' + u + '" onchange="updatePriceBandOnBasketItem(this,\'' + e.SeatInfo + "');\">", j = 0; j < r.length; j++)c = c + "<option value='" + r[j] + "'>" + n[j] + "  " + s[j] + "</option>"; c += "</select></div>" } else c = '<div class="columns c-price-band-selection__band--single-concession"><span>' + o + "</span></div>"; $(".c-price-band-selection").append("<div id='" + e.SeatInfo + '\' class="row c-price-band-selection__grid-row"><div class="columns c-price-band-selection__row-seat"><div class="c-price-band-selection__container"><span class="c-price-band-selection__row"><span data-tooltip aria-haspopup="true" class="has-tip right" data-disable-hover="false" title="Row">' + e.Row + '</span></span><span class="c-price-band-selection__seat2><span data-tooltip aria-haspopup="true" class="has-tip right" data-disable-hover="false" title="Seat">' + e.Seat + "</span></span></div></div>" + c + '<div class="columns c-price-band-selection__delete"><a onclick="deleteRow(this)"><i class="fa fa-times" aria-hidden="true"></i></a></div></div>'), $("div.c-price-band-selection__band ." + u).val(e.PriceBand) } function updatePriceBandOnBasketItem(e, t) { for (j = 0; j < basket.length; j++)basket[j].SeatInfo == t && (basket[j].PriceBand = e.value) } function updateSelectedSeatsHiddenField() { var e = ""; if (basket.length > 0) { document.getElementById("hdfSelectedSeats").defaultValue = ""; for (var t = 0; t < basket.length; t++)t > 0 && (e += ","), e = e + basket[t].SeatInfo + "#" + basket[t].PriceBand, document.getElementById("hdfSelectedSeats").defaultValue = e } else document.getElementById("hdfSelectedSeats").defaultValue = "" } function seatClick(e, t, a, i, r, n) { if (basket.length < basketMax || existsInBasket(a)) { if ("." != e.attr("a") || ".2" != e.attr("a")) { seatInfo = "", seatInfo = stand + "/" + e.attr("r") + "/" + e.attr("n"), tempstandAndArea = stand.split("-"), gTransfer = n; var s = ""; if (e.attr("p") && (s = e.attr("p")), n) if (existsInBasket(a)) { t.attr("fill", seatAvailableFill), t.attr("stroke", seatAvailableStroke); l = basket.map(function (e) { return e.SeatInfo }).indexOf(seatInfo); basket.splice(l, 1), updateSelectedSeatsHiddenField(), updateNumberOfSelectedSeats(), $(".c-price-band-selection .row").each(function () { $(this).remove() }), $(".c-price-band-selection .c-price-band-selection__block").each(function () { $(this).remove() }); for (d = 0; d < basket.length; d++)d < 10 && addRow(basket[d]) } else { t.attr("fill", i), t.attr("stroke", r); c = { SeatInfo: seatInfo, Price: s, PriceBreakId: e.attr("pb"), Stand: tempstandAndArea[0], Area: tempstandAndArea[1], Row: e.attr("r"), Seat: e.attr("n"), PriceBand: "", AvailabilityCode: e.attr("a") }; if (basket.push(c), updateNumberOfSelectedSeats(), basket.length > 10) { if (1 == use3DSeatView) { var o = "S_" + tempstandAndArea[1] + "-" + e.attr("r") + "-" + e.attr("n"); tk3d.hasVisual(o, function (e) { e && tk3d.load(o) }) } } else tempstandAndArea = stand.split("-"), addRow(c), 1 == use3DSeatView && tk3d.load("S_" + tempstandAndArea[1]) } else if (existsInBasket(a)) { t.attr("fill", i), t.attr("stroke", r); var l = basket.map(function (e) { return e.SeatInfo }).indexOf(seatInfo); basket.splice(l, 1), updateNumberOfSelectedSeats(), $(".c-price-band-selection .row").each(function () { $(this).remove() }), $(".c-price-band-selection .c-price-band-selection__block").each(function () { $(this).remove() }); for (var d = 0; d < basket.length; d++)d <= 10 && addHTMLRowItemToMiniBasketTable(basket[d]); displayedStandAndAreaBasket = [] } else { t.attr("fill", seatSelectedFill), t.attr("stroke", seatSelectedStroke); var c = { SeatInfo: seatInfo, Price: s, PriceBreakId: e.attr("pb"), Stand: tempstandAndArea[0], Area: tempstandAndArea[1], Row: e.attr("r"), Seat: e.attr("n"), PriceBand: "", AvailabilityCode: e.attr("a") }; basket.push(c), updateNumberOfSelectedSeats(), sortResults("SeatInfo", !0), addRow(c) } } } else basketRangeErrorText.length > 0 && alert(basketRangeErrorText) } function getSeatingDetails(e) { window.DOMParser ? (parser = new DOMParser, seatingDetailsXMLDoc = parser.parseFromString(e, "text/xml")) : (seatingDetailsXMLDoc = new ActiveXObject("Microsoft.XMLDOM"), seatingDetailsXMLDoc.async = "false", seatingDetailsXMLDoc.loadXML(e)), $(seatingDetailsXMLDoc).find("s").each(function () { var e = $(this); e.attr("c") ? ($(".ebiz-seat-details").show(), $(".ebiz-restriction-details").show(), document.getElementById("customer-number").innerHTML = e.attr("c"), document.getElementById("customer-forename").innerHTML = e.attr("fn"), document.getElementById("customer-surname").innerHTML = e.attr("sn"), document.getElementById("customer-address1").innerHTML = e.attr("ad1"), document.getElementById("customer-address2").innerHTML = e.attr("ad2"), document.getElementById("customer-address3").innerHTML = e.attr("ad3"), document.getElementById("season-ticket").innerHTML = e.attr("sts"), document.getElementById("book-number").innerHTML = e.attr("stn"), document.getElementById("restriction-details").innerHTML = e.attr("rd"), document.getElementById("restriction-code").innerHTML = e.attr("rc"), document.getElementById("restriction-description").innerHTML = e.attr("rds")) : ($(".ebiz-seat-details").hide(), $(".ebiz-restriction-details").show(), document.getElementById("restriction-details").innerHTML = e.attr("rd"), document.getElementById("restriction-code").innerHTML = e.attr("rc"), document.getElementById("restriction-description").innerHTML = e.attr("rds")), e.attr("resd") && ($(".ebiz-customer-reservation-time").show(), document.getElementById("reserved-date").innerHTML = e.attr("resd"), document.getElementById("reserved-time").innerHTML = e.attr("rest")) }) } function existsInBasket(e) { for (var t = 0; t < basket.length; t++)if (basket[t].SeatInfo == e) return !0; return !1 } function registerLoginRedirect() { window.location.href = loginLink } function buyOnClick() { if ("False" == document.getElementById("hdfIsBuyButtonClicked").defaultValue) { if (basket.length > basketMax || basket.length < basketMin) return alert(BasketRangeErrorText), !1; if (0 == basket.length) return alert(noSeatsSelected), !1; if (isSeasonTicket && isAnonymous) return $("#login-register-prompt").foundation("open"), !1; var e = !0; if (1 == orphanSeatFlag && 1 == standPassedOrphanBenchmark) { var t = 0; for (e = !0; t < basket.length;) { var a = basket[t].SeatInfo.split("/"); if ($(seatingAreaXML).find('s[n|="' + a[2] + '"][r|="' + a[1] + '"]:first').each(function () { var t = $(this); 0 == validate(seatingAreaXML, t) && (e = !1) }), 0 == e) break; t++ } } return e ? (updateSelectedSeatsHiddenField(), document.getElementById("hdfIsBuyButtonClicked").defaultValue = "True", !0) : (alert(orphanedSeatErrorText), !1) } } function validate(e, t) { seatValidationResult = { leftSeat1Status: !0, leftSeat2Status: !0, rightSeat1Status: !0, rightSeat2Status: !0, message: "" }; var a = t.index(), i = $(e).find("s").eq(a - 1); return isSeatAvailable(t, i, !1, !0) || (seatValidationResult.leftSeat1Status = !1), isSeatAvailable(t, i = $(e).find("s").eq(a - 2), !0, !0) || (seatValidationResult.leftSeat2Status = !1), (1 != seatValidationResult.leftSeat1Status || 0 != seatValidationResult.leftSeat2Status) && (isSeatAvailable(t, i = $(e).find("s").eq(a + 1), !1, !1) || (seatValidationResult.rightSeat1Status = !1), isSeatAvailable(t, i = $(e).find("s").eq(a + 2), !0, !1) || (seatValidationResult.rightSeat2Status = !1), 1 != seatValidationResult.rightSeat1Status || 0 != seatValidationResult.rightSeat2Status) } function isSeatAvailable(e, t, a, i) { if (t.attr("n")) { var r, n, s = 0, o = (t.attr("a"), stand + "/" + t.attr("r") + "/" + t.attr("n")), l = t.index(), d = e.index(), c = parseInt(e.attr("x")) - parseInt(t.attr("x")), u = 26; if (i ? (r = d - 1, n = d - 2) : (r = d + 1, n = d + 2), a && (u = 51), c < 0 && (c *= -1), c < u); else if (a) { if (n != l) return !1 } else if (r != l) return !1; return e.attr("r") == t.attr("r") && (existsInBasket(o) || s++ , "B" != t.attr("a") && s++ , "A" != t.attr("a") && "X" != t.attr("a") || s++ , 3 == s) } return !1 } function qBuyTicketQuant(e) { var t = document.getElementById("quick-buy-quantity").innerHTML; "add" === e ? t++ : t-- , t < 0 && (t = 0), t > basketMaxQuickBuy && (t = basketMax, basketRangeErrorText.length > 0 && alert(basketRangeErrorText)), t < basketMin && (t = basketMin, basketRangeErrorText.length > 0 && alert(basketRangeErrorText)), document.getElementById("quick-buy-quantity").innerHTML = t, document.getElementById("hdfQuickBuyQuantity").defaultValue = t } function ClearSeatsClick() { if (isQuickBuy) document.getElementById("quick-buy-quantity").innerHTML = basketMin, basket = []; else { document.getElementById("hdfSelectedSeats").defaultValue = "", document.getElementById("btnMultiSelect").value = multiSelectOnText; var e = $(".c-price-band-selection .row"); if (e.each(function () { $(this).remove() }), (e = $(".c-price-band-selection .c-price-band-selection__block")).each(function () { $(this).remove() }), isSeatSelectionOnly) basket = [], createSeatSelection(document.getElementById("hdfStandAndAreaCode").defaultValue, void 0); else { if (null != standAreaId) stadiumCanvas.getById(standAreaId).data("id"); else if (null != areaId) stadiumCanvas.getById(areaId).data("id"); else document.getElementById("hdfStandAndAreaCode").defaultValue; if (basket = [], !isStadiumExpaned) { var t = GetAPISettingsFromStandAndAreaOptions(!1, !1, !1, !1, !1, !1, !1); createSeatSelection(stand, t) } } updateNumberOfSelectedSeats() } } function createQuickBuy(e) { return $("#quick-buy-option").show(), document.getElementById("quick-buy-quantity").innerHTML = basketMin, document.getElementById("hdfQuickBuyStandAreaCode").defaultValue = e, stadiumExpand(), !0 } function clearQuickBuy() { $("#quick-buy-option").hide(), document.getElementById("quick-buy-quantity").innerHTML = basketMin, document.getElementById("hdfQuickBuyQuantity").defaultValue = 0 } function addTransferableBasketItemsToSeatList(e) { for (var t = e.split(">"), a = 0; a < t.length; a++) { var i = t[a].split("/"), r = i[0].split("-"), n = { SeatInfo: i[0] + "/" + i[1] + "/" + i[2], Price: "", PriceBand: "", PriceBreakId: "", Stand: r[0], Area: r[1], Row: i[1], Seat: i[2] }; basket.push(n), basket.length < 11 && addRow(n) } updateNumberOfSelectedSeats() } function updateNumberOfSelectedSeats() { basket.length > 0 ? $("#detailed-seat-list-panel").show() : $("#detailed-seat-list-panel").hide(), $(".c-price-band-selection__items-total").text(basket.length) } function rowSeatCodesOnClick() { isRowSeatOnSVG ? (isRowSeatOnSVG = !1, document.getElementById("btnRowSeatCodes").value = rowSeatRowOnSVGOnText) : (isRowSeatOnSVG = !0, document.getElementById("btnRowSeatCodes").value = rowSeatRowOnSVGOffText); var e = GetAPISettingsFromStandAndAreaOptions(!1, !1, !1, !1, !1, !1, !1); createSeatSelection(stand, e) } function trimStartZerosfromSeat(e) { for (var t = e, a = 0, i = e.length; a < i; a++) { if ("0" != (t = e.slice(a, e.length)).charAt(0)) break } return t } function ReDrawStandAndArea(e) { document.getElementById("hdfStandAndAreaCode").value = e, createSeatSelection(document.getElementById("hdfStandAndAreaCode").defaultValue, void 0) } $(function () { $("#select").on("mouseover", function (e) { if (over) { $("#tip #tip-area .ebiz-data").text(seatingAreaAreaDesc), $("#tip #tip-stand .ebiz-data").text(seatingAreaStandDesc), $("#tip #tip-row .ebiz-data").text(SeatTipSeatRow), $("#tip #tip-seat-number .ebiz-data").text(SeatTipNumber), SeatTipPrice ? ($("#tip #tip-seat-price").show(), $("#tip #tip-seat-price .ebiz-data").text(SeatTipPrice)) : $("#tip #tip-seat-price").hide(), restrictionCode ? ($("#tip-restriction-code").show(), $("#tip-restriction-desc").show(), isAgent ? $("#tip-restriction-desc").text(restrictionDesc + "(" + restrictionCode + ")") : $("#tip-restriction-desc").text(restrictionDesc)) : ($("#tip-restriction-code").hide(), $("#tip-restriction-desc").hide()), reservationCode ? ($("#tip-reservation-code").show(), $("#tip-reservation-desc").show(), isAgent ? $("#tip-reservation-desc").text(reservationDesc + "(" + reservationCode + ")") : $("#tip-reservation-desc").text(reservationDesc)) : ($("#tip-reservation-code").hide(), $("#tip-reservation-desc").hide()); var t = e.pageX, a = e.pageY, i = $("#select").width(), r = $("#select").height(), n = (i = $("#select").width(), r = $("#select").height(), $("#tip").width()), s = $("#tip").height(); t = t - $("#select").offset().left, a = a - $("#select").offset().top; return n + t > i && s + a > r ? $("#tip").css("left", t - 17 - n).css("top", a - 35 - s) : n + t > i ? $("#tip").css("left", t - 17 - n).css("top", a + 17) : s + a > r ? $("#tip").css("left", t + 17).css("top", a - 35 - s) : $("#tip").css("left", t + 17).css("top", a + 17), !0 } }) }), $(function () { $(".ebiz-toggle-legend").click(function () { var e = $(this).data("iteration") || 1; switch (e) { case 1: $(this).parent().animate({ right: "-9" }, { queue: !1, duration: 200 }), $(this).children("i").toggleClass("fa-chevron-left fa-chevron-right"), $(this).toggleClass("ebiz-open ebiz-closed"); break; case 2: $(this).parent().animate({ right: "-294" }, { queue: !1, duration: 200 }), $(this).children("i").toggleClass("fa-chevron-right fa-chevron-left"), $(this).toggleClass("ebiz-closed ebiz-open") }++e > 2 && (e = 1), $(this).data("iteration", e) }) }); var viewFromAreaUrl, standTipAreaDesc, standTipStandDesc, standTipAvailibilityDesc, standTipPriceDesc, areaId, textId, standAreaId, hoverColour, selectedColour, selectedTextColour, selectedStandAreaTEAllowed, selectedStandAreaTEMinPrice, selectedStandAreaTEMaxPrice, mArea, standTipText = "", over = !1, isAvailibilityView = !0, isStadiumExpaned = !0, standPassedOrphanBenchmark = !0, standPriceDesc = [], availableStandCodes = [], availableAreaCodes = [], selectedStandAndArea = { stand: "", area: "" }; function isStandQuickBuyOnly(e) { var t, a = document.getElementById("hdfStadiumXML").defaultValue, i = !1; return window.DOMParser ? (parser = new DOMParser, t = parser.parseFromString(a, "text/xml")) : ((t = new ActiveXObject("Microsoft.XMLDOM")).async = "false", t.loadXML(a)), $(t).find("A").each(function () { var t = $(this); t.attr("t"); t.attr("id") == e && (i = "N" == t.attr("ss")) }), i } function createStadiumCanvas() { stadiumCanvas = Raphael("stadium-canvas", stadiumCanvasWidth, stadiumCanvasHeight); var e, t = document.getElementById("hdfStadiumXML").defaultValue; $("#loading-image").show(), window.DOMParser ? (parser = new DOMParser, e = parser.parseFromString(t, "text/xml")) : ((e = new ActiveXObject("Microsoft.XMLDOM")).async = "false", e.loadXML(t)), $(e).find("AIn").each(function () { var e = $(this); hoverColour = e.attr("hvc"), selectedColour = e.attr("sel"), selectedTextColour = e.attr("selt") }), $(e).find("A").each(function () { var t, a = $(this), i = a.attr("t"); switch (null == (t = isAvailibilityView ? a.attr("afl") : a.attr("pfl")) && (t = a.attr("fl")), i) { case "rect": var r; a.attr("id") && (r = a[0].childNodes[0].data); var n = CreateRect(a.attr("id"), r, a.attr("x"), a.attr("y"), a.attr("w"), a.attr("h"), t, a.attr("str"), a.attr("sml"), a.attr("ss"), a.attr("flr"), a.attr("clr"), a.attr("a"), a.attr("sw"), a.attr("tr"), a.attr("ap"), a.attr("txf"), a.attr("isp"), a.attr("xsp")); if (a.attr("id") && ($(e).find('A[fid|="' + a.attr("id") + '"]:first').each(function () { var e = $(this), i = e[0].childNodes[0].data; CreateText(e.attr("fl"), e.attr("tr"), e.attr("ff"), e.attr("font"), e.attr("fs"), e.attr("tx"), i, n, t, a.attr("ss"), a.attr("a")) }), a.attr("ap"))) { var s = (v = a.attr("id").split("-"))[0], o = v[1]; "0" != a.attr("ap") && (availableStandCodes.push(s), availableAreaCodes.push(o)) } break; case "polygon": var l; a.attr("id") && (l = a[0].childNodes[0].data); var d = CreatePoly(a.attr("id"), l, a.attr("p"), t, a.attr("str"), a.attr("sml"), a.attr("ss"), a.attr("flr"), a.attr("clr"), a.attr("a"), a.attr("sw"), a.attr("tr"), a.attr("ap"), a.attr("txf"), a.attr("isp"), a.attr("xsp")); if (a.attr("id") && ($(e).find('A[fid|="' + a.attr("id") + '"]:first').each(function () { var e = $(this), i = e[0].childNodes[0].data; CreateText(e.attr("fl"), e.attr("tr"), e.attr("ff"), e.attr("font"), e.attr("fs"), e.attr("tx"), i, d, t, a.attr("ss"), a.attr("a")) }), a.attr("ap"))) { s = (v = a.attr("id").split("-"))[0], o = v[1]; "0" != a.attr("ap") && (availableStandCodes.push(s), availableAreaCodes.push(o)) } break; case "path": var c; a.attr("id") && (c = a[0].childNodes[0].data); var u = CreatePath(a.attr("id"), c, a.attr("d"), t, a.attr("str"), a.attr("sml"), a.attr("ss"), a.attr("flr"), a.attr("clr"), a.attr("a"), a.attr("sw"), a.attr("tr"), a.attr("ap"), a.attr("txf"), a.attr("isp"), a.attr("xsp")); if (a.attr("id") && ($(e).find('A[fid|="' + a.attr("id") + '"]:first').each(function () { var e = $(this), i = e[0].childNodes[0].data; CreateText(e.attr("fl"), e.attr("tr"), e.attr("ff"), e.attr("font"), e.attr("fs"), e.attr("tx"), i, u, t, a.attr("ss"), a.attr("a")) }), a.attr("ap"))) { s = (v = a.attr("id").split("-"))[0], o = v[1]; "0" != a.attr("ap") && (availableStandCodes.push(s), availableAreaCodes.push(o)) } break; case "circle": CreateCircle(a.attr("cx"), a.attr("cy"), a.attr("r"), a.attr("fl"), a.attr("str"), a.attr("sml"), a.attr("sw")); break; case "line": CreateLine(a.attr("x1"), a.attr("y1"), a.attr("x2"), a.attr("y2"), a.attr("fl"), a.attr("str"), a.attr("sml"), a.attr("sw")); break; case "text": var m; if (null == a.attr("fid")) a.attr("id") && (m = a[0].childNodes[0].data), CreateText(a.attr("fl"), a.attr("tr"), a.attr("ff"), a.attr("font"), a.attr("fs"), a.attr("tx"), m, void 0, void 0, void 0); break; case "polyline": a.attr("id") && a[0].childNodes[0].data; var S = CreatePolyline(a.attr("id"), l, a.attr("p"), t, a.attr("str"), a.attr("sml"), a.attr("ss"), a.attr("flr"), a.attr("clr"), a.attr("a"), a.attr("sw"), a.attr("tr"), a.attr("ap"), a.attr("txf"), a.attr("isp"), a.attr("xsp")); if (a.attr("id") && ($(e).find('A[fid|="' + a.attr("id") + '"]:first').each(function () { var e = $(this), i = e[0].childNodes[0].data; CreateText(e.attr("fl"), e.attr("tr"), e.attr("ff"), e.attr("font"), e.attr("fs"), e.attr("tx"), i, S, t, a.attr("ss"), a.attr("a")) }), a.attr("ap"))) { var v; s = (v = a.attr("id").split("-"))[0], o = v[1]; "0" != a.attr("ap") && (availableStandCodes.push(s), availableAreaCodes.push(o)) } } }), $("#loading-image").hide() } function CreateRect(e, t, a, i, r, n, s, o, l, d, c, u, m, S, v, p, h, f, g) { var k; return e ? (S || (S = 1), (k = stadiumCanvas.rect(a, i, r, n)).attr({ x: a, y: i, fill: s, "fill-rule": c, "clip-rule": u, "stroke-width": S }).data("id", e).data("originalFill", s).data("originalStroke", o).data("isTicketExchangeFlag", h).data("TEMinSliderPrice", f).data("TEMaxSliderPrice", g), k.transform(v), AddEventsToShapes(k, m, hoverColour, s, p, e, d)) : ((k = stadiumCanvas.rect(a, i, r, n)).attr({ x: a, y: i, fill: s, "stroke-miterlimit": l, stroke: o, "fill-rule": c, "clip-rule": u, "stroke-width": S, transform: v }), k.transform(v)), t && addStandTip(k.node, t), k } function CreatePoly(e, t, a, i, r, n, s, o, l, d, c, u, m, S, v, p) { var h; return e ? (c || (c = 1), (h = stadiumCanvas.path("M " + a + " z")).attr({ fill: i, "fill-rule": o, "clip-rule": l, "stroke-width": c, transform: u }).data("id", e).data("originalFill", i).data("originalStroke", r).data("isTicketExchangeFlag", S).data("TEMinSliderPrice", v).data("TEMaxSliderPrice", p), h.transform(u), AddEventsToShapes(h, d, hoverColour, i, m, e, s)) : ((h = stadiumCanvas.path("M " + a + " z")).attr({ fill: i, stroke: r, "stroke-miterlimit": n, "fill-rule": o, "clip-rule": l, "stroke-width": c, transform: u }), h.transform(u)), t && addStandTip(h.node, t), h } function CreatePath(e, t, a, i, r, n, s, o, l, d, c, u, m, S, v, p) { var h; return e ? (c || (c = 1), (h = stadiumCanvas.path(a)).attr({ fill: i, "fill-rule": o, "clip-rule": l, "stroke-width": c }).data("id", e).data("originalFill", i).data("originalStroke", r).data("isTicketExchangeFlag", S).data("TEMinSliderPrice", v).data("TEMaxSliderPrice", p), h.transform(u), AddEventsToShapes(h, d, hoverColour, i, m, e, s)) : ((h = stadiumCanvas.path(a)).attr({ fill: i, stroke: r, "stroke-miterlimit": n, "fill-rule": o, "clip-rule": l, "stroke-width": c, transform: u }), h.transform(u)), t && addStandTip(h.node, t), h } function CreatePolyline(e, t, a, i, r, n, s, o, l, d, c, u, m, S, v, p) { var h; return e ? (c || (polyStrokeWidth = 1), (h = stadiumCanvas.path("M " + a)).attr({ fill: i, "fill-rule": o, "clip-rule": l, "stroke-width": c }).data("id", e).data("originalFill", i).data("originalStroke", r).data("isTicketExchangeFlag", S).data("TEMinSliderPrice", v).data("TEMaxSliderPrice", p), h.transform(u), AddEventsToShapes(h, d, hoverColour, i, m, e, s)) : ((h = stadiumCanvas.path("M " + a)).transform(u), h.attr({ fill: i, stroke: r, "stroke-miterlimit": n, "fill-rule": o, "clip-rule": l, "stroke-width": c, transform: u })), t && addStandTip(h.node, t), h } function AddEventsToShapes(e, t, a, i, r, n, s) { $(e.node).on("mouseover", function () { e.node.style.cursor = "pointer", !0 === isStadiumExpaned && "na" != t && e.attr({ fill: a }) }), $(e.node).on("mouseout", function () { !0 === isStadiumExpaned && "na" != t && e.attr({ fill: i }) }), $(e.node).on("touchend click", function () { ("na" == t && isAgent || "na" != t) && (selectedStandAreaTEAllowed = "true" == e.data("isTicketExchangeFlag"), selectedStandAreaTEMinPrice = e.data("TEMinSliderPrice"), selectedStandAreaTEMaxPrice = e.data("TEMaxSliderPrice"), standPassedOrphanBenchmark = overOrphanSeatBenchmark(r), ClickStand(i, n, e, s), defaultToQuickBuy && (splitSelectedStandAndAreaObject(selectedStandAndArea, n), populateStandAndAreaDropDown(selectedStandAndArea.stand, selectedStandAndArea.area, !0), $("#txtQuantity").focus())) }) } function CreateCircle(e, t, a, i, r, n) { stadiumCanvas.circle(e, t, a).attr({ fill: i, stroke: r, "stroke-miterlimit": n }) } function CreateLine(e, t, a, i, r, n, s) { stadiumCanvas.path(["M", e, t, "L", a, i]).attr({ fill: r, stroke: n, "stroke-miterlimit": s }) } function CreateText(e, t, a, i, r, n, s, o, l, d, c) { var u = stadiumCanvas.text(0, 0, n); u.attr({ fill: e, "font-family": a, "font-size": r }), u.transform(t), u.attr({ "text-anchor": "start" }), o && ($(u.node).on("mouseover", function () { !0 === isStadiumExpaned && (u.attr({ fill: "#FFFFFF" }), u.node.style.cursor = "pointer", o.attr({ fill: hoverColour }), o.node.style.cursor = "pointer") }), $(u.node).on("mouseout", function () { !0 === isStadiumExpaned && (u.attr({ fill: e }), o.attr({ fill: l })) }), o.data("originalFill", l).data("originalTextFill", e), $(u.node).on("touchend click", function () { ("na" == c && isAgent || "na" != c) && ClickStand(l, o.data("id"), o, d) })), s && addStandTip(u.node, s) } function overOrphanSeatBenchmark(e) { return orphanBenchmark < e } function changeStandView() { $("#loading-image").show(), isAvailibilityView ? ($(".ebiz-stand-availability").hide(), $(".ebiz-stand-pricing").show(), $("#btnChangeStandView").removeClass("ebiz-view-price"), $("#btnChangeStandView").addClass("ebiz-view-availability"), stadiumCanvas && stadiumCanvas.remove(), isAvailibilityView = !1, createStadiumCanvas(), document.getElementById("btnChangeStandView").value = standAvailabilityText, $("#loading-image").hide()) : ($(".ebiz-stand-availability").show(), $(".ebiz-stand-pricing").hide(), $("#btnChangeStandView").removeClass("ebiz-view-availability"), $("#btnChangeStandView").addClass("ebiz-view-price"), stadiumCanvas && stadiumCanvas.remove(), isAvailibilityView = !0, createStadiumCanvas(), document.getElementById("btnChangeStandView").value = standPriceText, $("#loading-image").hide()) } function ClickStand(e, t, a, i) { GetSelectedValues(), GetDynamicOptionValuesAndText(), splitSelectedStandAndAreaObject(selectedStandAndArea, t), resetTicketExchangePanel(); var r = !0; if (!1 === isStadiumExpaned && 1 == orphanSeatFlag && 1 == standPassedOrphanBenchmark && !isQuickBuy) { seatValidationResult = { leftSeat1Status: !0, leftSeat2Status: !0, rightSeat1Status: !0, rightSeat2Status: !0, message: "" }; var n = 0; for (r = !0; n < basket.length;) { var s = basket[n].split("/"); if ($(seatingAreaXML).find('s[n|="' + s[2] + '"][r|="' + s[1] + '"]:first').each(function () { var e = $(this); 0 == validate(seatingAreaXML, e) && (r = !1) }), 0 == r) break; n++ } } if (r) { if (isQuickBuy ? (defaultToQuickBuy, createQuickBuy(t)) : "Y" == i || "" == i ? createSeatSelection(t, void 0) : createQuickBuy(t), null != (standAreaId = a.id)) { var o = stadiumCanvas.getById(standAreaId), l = o.data("originalFill"); o.attr({ fill: l }) } return !0 } return alert(orphanedSeatErrorText), !1 } function addStandTip(e, t) { if (!0 === isStadiumExpaned) { var a = t.split(";"); $(e).on("mouseover", function () { if (!0 === isStadiumExpaned) { standTipStandDesc = a[0], standTipAreaDesc = a[1], standTipAvailibilityDesc = a[2], standTipPriceDesc = a[3]; var e = a.length - 3; for (standPriceDesc = [], j = 0; j < e; j++)standPriceDesc[j] = a[3 + j]; $("#stand-tip").show(0), over = !0 } }), $(e).on("mouseout", function () { $("#stand-tip").hide(0), over = !1 }) } } function backToStadium() { if (!isQuickBuy) { if (basket.length > 0) { var e = !0; if (1 == orphanSeatFlag && 1 == standPassedOrphanBenchmark) { seatValidationResult = { leftSeat1Status: !0, leftSeat2Status: !0, rightSeat1Status: !0, rightSeat2Status: !0, message: "" }; var t = 0; for (e = !0; t < basket.length;) { var a = basket[t].SeatInfo.split("/"); if ($(seatingAreaXML).find('s[n|="' + a[2] + '"][r|="' + a[1] + '"]:first').each(function () { var t = $(this); 0 == validate(seatingAreaXML, t) && (e = !1) }), 0 == e) break; t++ } } return e ? (stadiumExpand(), SetDynamicOptionValuesAndText(), !0) : (alert(orphanedSeatErrorText), !1) } stadiumExpand(), SetDynamicOptionValuesAndText() } if (isQuickBuy || ReDrawStadium(!1, !1, !1, !1, !1, !1), null != standAreaId) { var i = stadiumCanvas.getById(standAreaId), r = i.data("originalFill"); i.attr({ fill: r }), standAreaId = void 0 } $(".ebiz-priceband").each(function () { $(this).show() }) } function stadiumExpand() { isStadiumExpaned || (isStadiumExpaned = !0, stadiumCanvas.setSize(stadiumCanvasWidth, stadiumCanvasHeight), $("#pitchStands").show(), $("#select").hide(), $(".ebiz-teams-wrapper").show(), $(".ebiz-match-text").show(), $(".ebiz-zoom-options").hide(), $("#backButton").hide(), $(".ebiz-seating-key").hide(), $("#btnViewFromArea").hide(), $("#btnChangeStandView").show(), $("#navigation-options").hide(), $(".ebiz-seat-details").hide(), $(".c-price-band-best-available").show(), $(".c-ticket-exchange").show(), $(".c-price-band-concession").show(), $(".ebiz-restriction-details").hide(), $("#btnResetSeating").hide(), isAgent && ($("#btnMultiSelect").hide(), $("#btnRowSeatCodes").hide()), $("#display").hide(), $(".ebiz-svg-container").addClass("ebiz-area-view"), $(".ebiz-svg-container").removeClass("ebiz-seat-view"), $(".ebiz-slider-wrap").hide(), $("#svg-controls").removeClass("medium-3 columns"), $("#svg-controls").addClass("large-12 columns"), $("#svg-wrapper").removeClass("medium-9 columns"), $("#svg-wrapper").hide(), seatingAreaCanvas && seatingAreaCanvas.remove(), miniSeatingAreaCanvas && miniSeatingAreaCanvas.remove(), set.clear(), set = null, seatingAreaCanvas = null, miniSeatingAreaCanvas && (miniSeatingAreaCanvas = null), isAvailibilityView ? ($(".ebiz-stand-pricing").hide(), $(".ebiz-stand-availability").show()) : ($(".ebiz-stand-availability").hide(), $(".ebiz-stand-pricing").show()), $("#ticketing3DSeatView").hide()) } function ResetStadium() { isStadiumExpaned || stadiumExpand(), ReDrawStadium(!1, !1, !1, !1, !1, !0) } function ReDrawStadium(e, t, a, i, r, n) { var s = document.getElementById("hdfProductType").defaultValue, o = document.getElementById("hdfCATMode").defaultValue, l = GetAPISettingsFromStandAndAreaOptions(e, t, a, i, r, !1, n); l.IncludeTicketExchangeSeats ? $(".slider").removeClass("disabled") : $(".slider").addClass("disabled"), $.ajax({ type: "POST", url: "VisualSeatSelection.aspx/GetStadiumXml", cache: !1, data: '{data: "' + l.SelectedPriceBreak + '","productCode":"' + productCode + '","stadiumCode":"' + stadiumCode + '","productType":"' + s + '","campaignCode":"' + campaignCode + '","catMode":"' + o + '","callId":"' + callId + '","includeTicketExchangeSeats":"' + l.IncludeTicketExchangeSeats + '","minimumPrice":"' + l.SelectedMinimumPrice + '","maximumPrice":"' + l.SelectedMaximumPrice + '","selectedStand":"' + l.SelectedStand + '","selectedArea":"' + l.SelectedArea + '"}', contentType: "application/json; charset=utf-8", dataType: "json", success: function (t) { var a = t.d, n = JSON.parse(a); "error" != a && (availableStandCodes = [], availableAreaCodes = [], document.getElementById("hdfStadiumXML").defaultValue = n.StadiumXml, isStadiumExpaned && (stadiumCanvas.remove(), createStadiumCanvas()), GetSelectedValues(), SetupDynamicStandAndAreaOptions(n, l, i, r, e, void 0, !1, isStadiumExpaned), GetDynamicOptionValuesAndText()) }, error: function (e, t) { alert(t + "  " + e.responseText) } }), isStadiumExpaned || createSeatSelection(stand, l) } function splitSelectedStandAndAreaObject(e, t) { var a = t.split("-"); e.stand = a[0], e.area = a[1] } function populateStandAndAreaDropDown(e, t, a) { isPriceAndAreaSelection ? $(".ebiz-combined-stand-area-drop-down").val(e + "-" + t) : ($("#standDropDown").val(e), $("#standDropDown").trigger("onchange"), a && ($("#areaDropDownList").val(t), $("#areaDropDownList").trigger("onchange"))) } window.onload = function () { $("#detailed-seat-list-panel").hide(), $(".ebiz-slider-wrap").hide(), $(".ebiz-svg-container").addClass(document.getElementById("hdfStadiumCode").defaultValue), $(".ebiz-svg-container").addClass(document.getElementById("hdfProductCode").defaultValue), $(".ebiz-svg-container").addClass("ebiz-product-type-" + document.getElementById("hdfProductType").defaultValue), null != document.getElementById("hdfSelectedSeats") && 0 == basket.length && (document.getElementById("hdfSelectedSeats").value = ""); var e = document.getElementById("hdfTransferableBasketItems").value; e && addTransferableBasketItemsToSeatList(e), 1 == isSeatSelectionOnly ? createSeatSelection(document.getElementById("hdfStandAndAreaCode").defaultValue, void 0) : ($(".ebiz-stand-availability").show(), $(".ebiz-stand-pricing").hide(), createStadiumCanvas()), isQuickBuy && singleArea.length > 0 && singleStand.length > 0 ? (defaultStandAndAreaClick = !0, populateStandAndAreaDropDown(singleStand, singleArea, !0)) : 1 == defaultToSeatSelection ? createSeatSelection(document.getElementById("hdfStandAndAreaCode").defaultValue, void 0) : 1 == defaultToQuickBuy && populateStandAndAreaDropDown(singleStand, singleArea, !1), $(".slider").addClass("disabled") }, $(function () { $("#stadium-canvas").mousemove(function (e) { var t; if (!0 === isStadiumExpaned && over) return $("#stand-tip").addClass("ebiz-stand-tip-position"), $("#stand-tip #stand .ebiz-data").text(standTipStandDesc), $("#stand-tip #area .ebiz-data").text(standTipAreaDesc), $("#stand-tip #stand-tip-availibility .ebiz-data").text(standTipAvailibilityDesc), $("#stand-tip #stand-tip-price1 .ebiz-label").text(""), $("#stand-tip #stand-tip-price1 .ebiz-data").text(""), $("#stand-tip #stand-tip-price .ebiz-label").text(""), $("#stand-tip #stand-tip-price .ebiz-data").text(""), standPriceDesc.length > 0 && (standPriceDesc[1] && (t = standPriceDesc[1].split("@"), $("#stand-tip #stand-tip-price1 .ebiz-label").text(t[0]), $("#stand-tip #stand-tip-price1 .ebiz-data").text(t[1])), standPriceDesc[0] && (t = standPriceDesc[0].split("@"), $("#stand-tip #stand-tip-price .ebiz-label").text(t[0]), $("#stand-tip #stand-tip-price .ebiz-data").text(t[1]))), !0 }) }); var intervalId, viewBoxHeight, viewBoxWidth, viewBox, oX, dX, dY, mousedown, startX, startY, vB, c, miniMat, prevCanvasWidth, prevCanvasHeight, zoomScaleFactor, moveTest = 0, yPOSVIEW = 0, xPOSVIEW = 0, zoomWidth = 0, zoomHeight = 0, seatingCanvasID = "#select"; function goReset() { var e = calcZoomFactor(); moveTest = 0, yPOSVIEW = 0, xPOSVIEW = 0, zoomWidth = e, zoomHeight = e, seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight, !1), !0 === multiSelectOn && mat.attr({ width: multiSelectRectWidth, height: multiSelectRectHeight, x: xPOSVIEW, y: yPOSVIEW }), zoomScaleFactor = zoomHeight / originalZoom, miniMat.attr({ width: 400 * zoomScaleFactor, height: 300 * zoomScaleFactor, x: xPOSVIEW, y: yPOSVIEW }), resetSlider(!0), disableDirectionArrows() } function zoom(e, t) { var a = e; !0 === multiSelectOn && (multiSelectOn = !1, document.getElementById("btnMultiSelect").value = multiSelectOnText), document.getElementById("sliderVal").value = e, zoomWidth = a, zoomHeight = a, t && a < sliderMax - 200 && a >= 200 && (seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight, !1), !0 === multiSelectOn && mat.attr({ width: multiSelectRectWidth, height: multiSelectRectHeight }), zoomScaleFactor = zoomHeight / prevCanvasHeight, miniMat.attr({ width: 400 * zoomScaleFactor, height: 300 * zoomScaleFactor })) } function goDown() { !1 === multiSelectOn && (zoomScaleFactor = zoomHeight / prevCanvasHeight, yPOSVIEW += 100 * maxZoomFactorY, disableDirectionArrows(), seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight, !1), miniMat.attr({ x: xPOSVIEW, y: yPOSVIEW })) } function goUp() { !1 === multiSelectOn && (zoomScaleFactor = zoomHeight / prevCanvasHeight, yPOSVIEW -= 100 * maxZoomFactorY, disableDirectionArrows(), seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight, !1), miniMat.attr({ x: xPOSVIEW, y: yPOSVIEW })) } function goLeft() { !1 === multiSelectOn && (zoomScaleFactor = zoomHeight / prevCanvasHeight, xPOSVIEW -= 100 * maxZoomFactorX, disableDirectionArrows(), seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight, !1), miniMat.attr({ x: xPOSVIEW, y: yPOSVIEW })) } function goRight() { !1 === multiSelectOn && (zoomScaleFactor = zoomHeight / prevCanvasHeight, xPOSVIEW += 100 * maxZoomFactorX, disableDirectionArrows(), seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight, !1), miniMat.attr({ x: xPOSVIEW, y: yPOSVIEW })) } function goZoomIn() { var e = zoomWidth + 100; zoom(e, !0), $("#zoomSlider").slider("value", sliderMax - e) } function goZoomOut() { var e = zoomWidth - 100; e < sliderMax && (zoom(e, !0), $("#zoomSlider").slider("value", sliderMax - e)) } $.ajaxSetup({ cache: !1 }), $(function () { $(document).scroll(function (e) { $(this).scrollLeft() > 1 && (e.preventDefault(), $(this).scrollLeft(0)) }) }); var sliderMax = 2500; $(function () { $("#zoomSlider").slider({ orientation: "horizontal", range: "max", min: 200, max: sliderMax - 200, value: sliderMax / 2, stop: function (e, t) { zoom(sliderMax - t.value, !0) } }) }), $(function () { if ("ontouchstart" in document.documentElement) { var e = document.getElementById("zoomSlider"); Hammer(e, { transform_always_block: !0, drag_block_horizontal: !0, drag_block_vertical: !0, drag_min_distance: 0 }); Hammer(e).on("drag dragend", function (e) { switch (e.preventDefault(), e.type) { case "drag": "left" === e.gesture.direction ? (zoomWidth *= .97, zoomHeight *= .97) : "right" === e.gesture.direction && (zoomWidth *= 1.03, zoomHeight *= 1.03), $("#zoomSlider").slider({ value: zoomHeight }), zoomScaleFactor = zoomHeight / prevCanvasHeight, miniMat.attr({ width: 400 * zoomScaleFactor, height: 300 * zoomScaleFactor, x: xPOSVIEW, y: yPOSVIEW }), !0 === multiSelectOn && mat.attr({ width: multiSelectRectWidth, height: multiSelectRectHeight, x: xPOSVIEW, y: yPOSVIEW }); break; case "dragend": seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight, !1) } }) } }), $(function () { if ("ontouchstart" in document.documentElement && !0 === multiSelectOn) { var e = document.getElementById("select"), t = calcZoomFactor(); Hammer(e, { transform_always_block: !0, transform_min_scale: 1, drag_block_horizontal: !0, drag_block_vertical: !0, drag_min_distance: 0 }), Hammer(e).on("transform dragstart drag dragend transformend transformstart", function (e) { manageMultitouch(e), $("#zoomSlider").slider("value", sliderMax - t) }) } }); var seatingAreaImage, gesturedImg, timerStart, timerEnd, maxMatWidth, maxMatHeight, originalZoom, posX = 0, posY = 0, last_scale = 0, scale = 1, dragon = !1, transbreak = !0, transCount = 0; function manageMultitouch(e) { switch (e.preventDefault(), e.type) { case "transformstart": timerStart = (new Date).getTime(), transCount = 0; break; case "dragstart": if (null != seatingAreaCanvas.getElementByPoint(e.gesture.deltaX, e.gesture.deltaY)) return; if (!0 === multiSelectOn) return; dragon = !0, startX = e.gesture.deltaX, startY = e.gesture.deltaY; break; case "drag": if (!1 === dragon) return; dX = startX - e.gesture.deltaX, dY = startY - e.gesture.deltaY; var t = viewBoxWidth / seatingAreaCanvas.width, a = viewBoxHeight / seatingAreaCanvas.height; dX *= t, dY *= a, xPOSVIEW = viewBox.X + dX, yPOSVIEW = viewBox.Y + dY; break; case "transform": e.gesture.scale > 1 ? (zoomWidth *= .97, zoomHeight *= .97, .99) : (zoomWidth *= 1.03, zoomHeight *= 1.03, 1.01); break; case "dragend": if (!1 === dragon) return; viewBox.X += dX, viewBox.Y += dY, (isNaN(parseFloat(viewBox.X)) || isNaN(parseFloat(viewBox.Y))) && (viewBox.X = xPOSVIEW, viewBox.Y = yPOSVIEW), seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight, !1), zoomScaleFactor = zoomHeight / prevCanvasHeight, miniMat.attr({ width: 400 * zoomScaleFactor, height: 300 * zoomScaleFactor, x: xPOSVIEW, y: yPOSVIEW }), dragon = !1; break; case "transformend": seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight, !1), zoomScaleFactor = zoomHeight / prevCanvasHeight, miniMat.attr({ width: 400 * zoomScaleFactor, height: 300 * zoomScaleFactor, x: xPOSVIEW, y: yPOSVIEW }), !0 === multiSelectOn && mat.attr({ width: multiSelectRectWidth, height: multiSelectRectHeight, x: xPOSVIEW, y: yPOSVIEW }) } } var maxZoomFactorX, maxZoomFactorY, xFactor, yFactor, callCount = 0; function resetSlider(e) { var t = calcZoomFactor(); zoomWidth = t, zoomHeight = t, yPOSVIEW = 0, xPOSVIEW = 0, prevCanvasWidth = seatingAreaCanvas._viewBox[2], prevCanvasHeight = seatingAreaCanvas._viewBox[3], e || 0 != callCount || (originalZoom = prevCanvasHeight, callCount++), seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight, !1), !0 === multiSelectOn && mat.attr({ width: multiSelectRectWidth, height: multiSelectRectHeight }), maxMatWidth = parseFloat(document.getElementById("maxX").value), maxMatHeight = parseFloat(document.getElementById("maxY").value), $("#zoomSlider").slider("value", sliderMax - t), zoomScaleFactor = zoomHeight / prevCanvasHeight, maxZoomFactorX = document.getElementById("maxX").value / prevCanvasHeight, maxZoomFactorY = document.getElementById("maxY").value / prevCanvasHeight } function calcZoomFactor() { var e = document.getElementById("maxX"), t = document.getElementById("maxY"); xFactor = seatingAreaCanvasWidth / e.value, yFactor = seatingAreaCanvasHeight / t.value; var a = sliderMax / 2; if (zoomOnLoad) { if (xFactor <= yFactor) var i = e.value; else i = t.value; var r = 1; isRowSeatOnSVG && (r = .5), i < 50 ? a = 200 * r : i >= 51 && i <= 100 ? a = 250 * r : i >= 101 && i <= 200 ? a = 300 * r : i >= 201 && i <= 300 ? a = 350 * r : i >= 301 && i <= 400 ? a = 400 * r : i >= 401 && i <= 500 ? a = 450 * r : i >= 501 && i <= 600 ? a = 570 * r : i >= 601 && i <= 700 ? a = 600 * r : i >= 701 && i <= 800 ? a = 700 * r : i >= 801 && (a = 900 * r) } return a } $(function () { $(seatingCanvasID).mousedown(function (e) { over || 0 == multiSelectOn && (mousedown = !0, startX = e.pageX, startY = e.pageY, e.stopPropagation()) }), $(seatingCanvasID).mousemove(function (e) { if (0 == multiSelectOn) { if (0 == mousedown) return; dX = (startX - e.pageX) * zoomScaleFactor, dY = (startY - e.pageY) * zoomScaleFactor, (isNaN(parseFloat(viewBox.X)) || isNaN(parseFloat(viewBox.Y))) && (viewBox.X = xPOSVIEW, viewBox.Y = yPOSVIEW), xPOSVIEW = viewBox.X + dX, yPOSVIEW = viewBox.Y + dY, disableDirectionArrows(), seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight), miniMat.attr({ x: xPOSVIEW, y: yPOSVIEW }) } }), $(document).mouseup(function (e) { if (0 == multiSelectOn && 0 == isStadiumExpaned) { if (0 == mousedown) return; viewBox.X += dX, viewBox.Y += dY, mousedown = !1 } }) }); var ox = 0, oy = 0; function minidragstart(e, t) { } function minidragmove(e, t, a, i) { var r; r = maxMatWidth > maxMatHeight ? maxMatWidth / 400 : maxMatHeight / 300, disableDirectionArrows(), xPOSVIEW += (e - ox) * zoomScaleFactor * r, yPOSVIEW += (t - oy) * zoomScaleFactor * r, miniMat.attr({ x: xPOSVIEW, y: yPOSVIEW }), ox = e, oy = t } function minidragend(e) { seatingAreaCanvas.setViewBox(xPOSVIEW, yPOSVIEW, zoomWidth, zoomHeight), !0 === multiSelectOn && mat.attr({ x: xPOSVIEW, y: yPOSVIEW }), ox = 0, oy = 0, viewBox.X = xPOSVIEW, viewBox.Y = yPOSVIEW } function disableDirectionArrows() { xPOSVIEW < 0 ? ($(".button.ebiz-left").removeClass("ebiz-direction-enabled"), $(".button.ebiz-left").addClass("ebiz-direction-disabled")) : ($(".button.ebiz-left").removeClass("ebiz-direction-disabled"), $(".button.ebiz-left").addClass("ebiz-direction-enabled")), yPOSVIEW < 0 ? ($(".button.ebiz-up").removeClass("ebiz-direction-enabled"), $(".button.ebiz-up").addClass("ebiz-direction-disabled")) : ($(".button.ebiz-up").removeClass("ebiz-direction-disabled"), $(".button.ebiz-up").addClass("ebiz-direction-enabled")), xPOSVIEW + seatingAreaCanvasWidth > maxMatWidth ? ($(".button.ebiz-right").removeClass("ebiz-direction-enabled"), $(".button.ebiz-right").addClass("ebiz-direction-disabled")) : ($(".button.ebiz-right").removeClass("ebiz-direction-disabled"), $(".button.ebiz-right").addClass("ebiz-direction-enabled")) } var selectedMinimumPrice, selectedMaximumPrice, selectedPriceBreak, selectedStand, selectedArea, standAndAreaCodeForFilters, selectedOptions = [], maxPricesDDLValues = [], minPricesDDLValues = [], priceBreakSelectionDDLValues = [], standDDLValues = [], areaDDLValues = [], priceBandValues = [], isPriceAndAreaSelection = !1; function RetrieveDynamicSeatSelectionOptions(e, t, a, i, r) { var n = document.getElementById("hdfCATMode").defaultValue, s = document.getElementById("hdfProductType").defaultValue, o = document.getElementById("hdfProductCode").defaultValue, l = document.getElementById("hdfStadiumCode").defaultValue, d = document.getElementById("hdfCampaignCode").defaultValue, c = document.getElementById("hdfCallId").defaultValue, u = GetAPISettingsFromStandAndAreaOptions(e, t, a, i, r, !1, !1); $.ajax({ type: "POST", url: "StandAndAreaSelection.aspx/RetrieveDynamicStandAndAreaOptions", cache: !1, data: '{data: "' + u.SelectedPriceBreak + '","productCode":"' + o + '","stadiumCode":"' + l + '","productType":"' + s + '","campaignCode":"' + d + '","catMode":"' + n + '","callId":"' + c + '","includeTicketExchangeSeats":"' + u.IncludeTicketExchangeSeats + '","minimumPrice":"' + u.SelectedMinimumPrice + '","maximumPrice":"' + u.SelectedMaximumPrice + '","selectedStand":"' + u.SelectedStand + '","selectedArea":"' + u.SelectedArea + '"}', contentType: "application/json; charset=utf-8", dataType: "json", success: function (t) { var a = t.d, n = JSON.parse(a); "error" != a && (GetSelectedValues(), SetupDynamicStandAndAreaOptions(n, u, i, r, e, void 0, !1, !0), GetDynamicOptionValuesAndText()) }, error: function (e, t) { alert(t + "  " + e.responseText) } }) } function GetAPISettingsFromStandAndAreaOptions(e, t, a, i, r, n, s) { var o, l, d, c, u, m = !0, S = !0, v = !0, p = !0, h = !0, f = !1, g = 0; if (isPriceAndAreaSelection) { var k = document.getElementById("ddlCombinedStandAndArea").value.split("-"); o = k[0], l = k[1], i && r && (h = !1), k.length <= 1 && (l = "") } else o = document.getElementById("standDropDown").value, l = document.getElementById("areaDropDownList").value; null != document.getElementById("ddlMinimumPrice") && (d = document.getElementById("ddlMinimumPrice").value), null != document.getElementById("ddlMaximumPrice") && (c = document.getElementById("ddlMaximumPrice").value), null != document.getElementById("ddlPriceBreakSelection") && (g = document.getElementById("ddlPriceBreakSelection").value), r ? u = "selectingArea" : i ? u = "selectedStand" : a ? u = "selectingMaxPrice" : t ? u = "selectingMinPrice" : e && (u = "selectingPriceBreakId"); for (var b = !1, x = 0; x < selectedOptions.length; x++)b && (selectedOptions[x] = ""), selectedOptions[x] == u && (b = !0); if (b || null == u || selectedOptions.push(u), n) v = !0, S = !0, m = !0; else if (s) m = !0, S = !0, v = !0, p = !0, h = !0, selectedOptions = [], d = "0", c = "0", g = "0", o = "", l = ""; else for (var A = 0; A < selectedOptions.length; A++)switch (selectedOptions[A]) { case "selectingArea": p = !1; break; case "selectedStand": h = !1; break; case "selectingMaxPrice": v = !1; break; case "selectingMinPrice": S = !1; break; case "selectingPriceBreakId": m = !1 }return null != document.getElementById("ticketExchangeOption") && document.getElementById("ticketExchangeOption").checked && (f = !0), S && v && (d = "0", c = "0"), { SelectedMinimumPrice: d, SelectedMaximumPrice: c, SelectedPriceBreak: g, SelectedStand: o, SelectedArea: l, RefreshMinimumPriceList: S, RefreshMaximumPriceList: v, RefreshAreaList: p, RefreshStandList: h, RefreshPriceBreakList: m, IncludeTicketExchangeSeats: f, NewAreaForSeats: n } } function SetupDynamicStandAndAreaOptions(e, t, a, i, r, n, s, o) { if (null == n) { setStandAreaOptions(t, e, s); var l = e.PriceBandPricesList; if ($(".ebiz-priceband").each(function () { $(this).hide() }), o && l.length > 0) for (band in e.PriceBandPricesList) { var d = ".ebiz-priceband-" + l[band].PriceBand; if ($(d + " .ebiz-price-band-quantity-box").val(""), null != $(d)) { $(d).show(); var c = d + " .ebiz-priceband-price"; if ("" == l[band].PriceBandPrice) $(c).hide(); else $(d + " .ebiz-priceband-price-label").text(DecodeHTMLString(l[band].PriceBandPrice)), $(c).show() } } if (t.RefreshPriceBreakList) { $("#ddlPriceBreakSelection > option").each(function () { "0" != $(this).val() ? $(this).remove() : $(this).context.selected = !0 }); for (var u = 0; u < e.PriceBreakAvailabilityList.length; u++) { (v = $("<option>")).attr("value", e.PriceBreakAvailabilityList[u].PriceBreakId), v.html(e.PriceBreakAvailabilityList[u].PriceBreakDescription), $("#ddlPriceBreakSelection").append(v) } (t.NewAreaForSeats || s) && $("#ddlPriceBreakSelection").val(t.SelectedPriceBreak) } if (t.RefreshMinimumPriceList) { $("#ddlMinimumPrice > option").each(function () { $(this).remove() }); for (u = 0; u < e.PriceBreakPrices.length; u++) { (p = $("<option>")).attr("value", e.PriceBreakPrices[u].Price), p.html(DecodeHTMLString(e.PriceBreakPrices[u].DisplayPrice)), r && 0 == u ? p.attr("selected", "selected") : t.SelectedMinimumPrice == e.PriceBreakPrices[u].Price && p.attr("selected", "selected"), ("0" == t.SelectedMaximumPrice || parseFloat(e.PriceBreakPrices[u].Price) <= parseFloat(t.SelectedMaximumPrice)) && $("#ddlMinimumPrice").append(p) } } if (t.RefreshMaximumPriceList) { var m = []; m = s ? maxPricesDDLValues : e.PriceBreakPrices, $("#ddlMaximumPrice > option").each(function () { $(this).remove() }); var S = !1; for (u = 0; u < m.length; u++) { (f = $("<option>")).attr("value", m[u].Price), f.html(DecodeHTMLString(m[u].DisplayPrice)), t.SelectedMaximumPrice == m[u] && (f.attr("selected", "selected"), S = !0), parseFloat(m[u].Price) >= parseFloat(t.SelectedMinimumPrice) && $("#ddlMaximumPrice").append(f) } S || $("#ddlMaximumPrice option:last").attr("selected", "selected") } } else { $("#ddlPriceBreakSelection > option").each(function () { "0" != $(this).val() ? $(this).remove() : $(this).context.selected = !0 }); for (u = 0; u < n.length; u++) { var v; (v = $("<option>")).attr("value", n[u].PriceBreakId), v.html(n[u].PriceBreakDescription), $("#ddlPriceBreakSelection").append(v) } $("#ddlPriceBreakSelection").val(t.SelectedPriceBreak), $("#ddlMinimumPrice > option").each(function () { $(this).remove() }); for (u = 0; u < n.length; u++) { var p, h = !1; if (u > 0 && (h = $("#ddlMinimumPrice option[value='" + n[u].PriceBreakDefaultPriceBandPrice + "']").length > 0), !h) (p = $("<option>")).attr("value", n[u].PriceBreakDefaultPriceBandPrice), p.html(DecodeHTMLString(n[u].DisplayPrice)), t.SelectedMinimumPrice == n[u].PriceBreakDefaultPriceBandPrice && p.attr("selected", "selected"), ("0" == t.SelectedMaximumPrice || parseFloat(n[u].PriceBreakDefaultPriceBandPrice) <= parseFloat(t.SelectedMaximumPrice)) && $("#ddlMinimumPrice").append(p) } $("#ddlMaximumPrice > option").each(function () { $(this).remove() }); for (S = !1, u = 0; u < n.length; u++) { var f; h = !1; if (u > 0 && (h = $("#ddlMaximumPrice option[value='" + n[u].PriceBreakDefaultPriceBandPrice + "']").length > 0), !h) (f = $("<option>")).attr("value", n[u].PriceBreakDefaultPriceBandPrice), f.html(DecodeHTMLString(n[u].DisplayPrice)), t.SelectedMaximumPrice == n[u].PriceBreakDefaultPriceBandPrice && (f.attr("selected", "selected"), S = !0), parseFloat(n[u].PriceBreakDefaultPriceBandPrice) >= parseFloat(t.SelectedMinimumPrice) && $("#ddlMaximumPrice").append(f) } S || $("#ddlMaximumPrice option:last").attr("selected", "selected") } } function GetSelectedValues() { if (selectedMaximumPrice = $("#ddlMaximumPrice :selected").val(), selectedMinimumPrice = $("#ddlMinimumPrice :selected").val(), selectedPriceBreak = $("#ddlPriceBreakSelection :selected").val(), selectedStand = "", selectedArea = "", isPriceAndAreaSelection) { if ("" != $(".ebiz-combined-stand-area-drop-down :selected").val()) { var e = $(".ebiz-combined-stand-area-drop-down :selected").val().split("-"); selectedStand = e[0], e.length > 1 && (selectedArea = e[1]) } } else selectedStand = $("#standDropDown :selected").val(), selectedArea = $("#areaDropDownList :selected").val() } function GetDynamicOptionValuesAndText() { priceBreakSelectionDDLValues = [], standDDLValues = [], areaDDLValues = [], priceBandValues = [], minPricesDDLValues = [], maxPricesDDLValues = [], $("#ddlMinimumPrice > option").each(function () { var e = $(this); "" != e.val() && minPricesDDLValues.push({ Price: e.val(), DisplayPrice: e.text() }) }), $("#ddlMaximumPrice > option").each(function () { var e = $(this); "" != e.val() && maxPricesDDLValues.push({ Price: e.val(), DisplayPrice: e.text() }) }), $("#ddlPriceBreakSelection > option").each(function () { var e = $(this); "0" != e.val() && priceBreakSelectionDDLValues.push({ PriceBreakId: e.val(), PriceBreakDescription: e.text() }) }), isPriceAndAreaSelection ? $(".ebiz-combined-stand-area-drop-down > option").each(function () { var e = $(this); if ("" != e.val()) { for (var t = e.val().split("-"), a = !0, i = !0, r = 0; r < standDDLValues.length > 0; r++)if (standDDLValues[r].StandCode == t[0]) { a = !1; break } for (var n = 0; n < areaDDLValues.length > 0; n++)if (areaDDLValues[n].AreaCode == t[1]) { i = !1; break } if (a) { var s = { StandCode: t[0] }; standDDLValues.push(s) } if (i) { var o = { AreaCode: t[1] }; areaDDLValues.push(o) } } }) : ($("#standDropDown > option").each(function () { var e = $(this); "" != e.val() && standDDLValues.push({ StandCode: e.val() }) }), $("#areaDropDownList > option").each(function () { var e = $(this); "" != e.val() && areaDDLValues.push({ AreaCode: e.val() }) })) } function SetDynamicOptionValuesAndText() { defaultToSeatSelection && (ResetStadium(), defaultToSeatSelection = !1), SetupDynamicStandAndAreaOptions({ AvailableStands: standDDLValues, AvailableAreas: areaDDLValues, PriceBreakAvailabilityList: priceBreakSelectionDDLValues, PriceBandPricesList: priceBandValues, PriceBreakPrices: minPricesDDLValues }, { SelectedMinimumPrice: selectedMinimumPrice, SelectedMaximumPrice: selectedMaximumPrice, SelectedPriceBreak: selectedPriceBreak, SelectedStand: selectedStand, SelectedArea: selectedArea, RefreshMinimumPriceList: !0, RefreshMaximumPriceList: !0, RefreshAreaList: !1, RefreshStandList: !1, RefreshPriceBreakList: !0, IncludeTicketExchangeSeats: !1, NewAreaForSeats: !1 }, !1, !1, !1, void 0, !0, !1) } function setStandAreaOptions(e, t, a) { if (isPriceAndAreaSelection) { if (e.RefreshStandList && ($(".ebiz-combined-stand-area-drop-down > option").each(function () { "" != $(this).val() ? $(this).hide() : $(this).context.selected = !0 }), t.AvailableStands.length > 0)) for (var i = 0; i < t.AvailableStands.length; i++)for (var r = 0; r < t.AvailableAreas.length; r++)$(".ebiz-combined-stand-area-drop-down > option").each(function () { $(this).val() == t.AvailableStands[i].StandCode + "-" + t.AvailableAreas[r].AreaCode && $(this).show() }); t.AvailableStands.length > 0 && a && ("" == e.SelectedStand && "" == e.SelectedArea ? $(".ebiz-combined-stand-area-drop-down").val("") : $(".ebiz-combined-stand-area-drop-down").val(e.SelectedStand + "-" + e.SelectedArea)), a && ("" == e.SelectedStand && "" == e.SelectedArea ? $(".ebiz-combined-stand-area-drop-down").val("") : $(".ebiz-combined-stand-area-drop-down").val(e.SelectedStand + "-" + e.SelectedArea)) } else { if (e.RefreshStandList && ($(".ebiz-stand-drop-down > option").each(function () { "" != $(this).val() ? $(this).hide() : $(this).context.selected = !0 }), t.AvailableStands.length > 0)) for (var n = 0; n < t.AvailableStands.length; n++)$(".ebiz-stand-drop-down > option").each(function () { $(this).val() == t.AvailableStands[n].StandCode && $(this).show() }); if (t.AvailableStands.length > 0 && a && $("#standDropDown").val(e.SelectedStand), a && $("#areaDropDownList").val(e.SelectedArea), availableAreaCodes = t.AvailableAreas, $(".ebiz-area-drop-down > option").each(function () { $(this).hide() }), "" != e.SelectedStand) { if (availableAreaCodes.length > 0) for (n = 0; n < availableAreaCodes.length; n++)$(".ebiz-area-drop-down > option").each(function () { "" != $(this).val() ? $(this).val() == availableAreaCodes[n].AreaCode && $(this).show() : $(this).show() }) } else $(".ebiz-area-drop-down > option").each(function () { "" == $(this).val() && ($(this).show(), $(this).context.selected = !0) }) } } function filterAreaDDL() { if ($(".ebiz-area-drop-down > option").each(function () { $(this).hide() }), availableAreaCodes.length > 0) for (var e = 0; e < availableAreaCodes.length; e++)$(".ebiz-area-drop-down > option").each(function () { "" != $(this).val() ? $(this).val() == availableAreaCodes[e] && $(this).show() : $(this).show() }) } function GetParameterByName(e) { e = e.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"); var t = location.search.toUpperCase(); e = e.toUpperCase(); var a = new RegExp("[\\?&]" + e + "=([^&#]*)").exec(t); return null === a ? "" : decodeURIComponent(a[1].replace(/\+/g, " ")) } function resetTicketExchangePanel() { if ($(".c-ticket-exchange").hide(), $(".slider").addClass("disabled"), selectedStandAreaTEAllowed && ($(".c-ticket-exchange").show(), selectedStandAreaTEMinPrice && selectedStandAreaTEMaxPrice && $.isNumeric(selectedStandAreaTEMinPrice) && $.isNumeric(selectedStandAreaTEMaxPrice))) { $(".ebiz-slider-wrap").show(); var e = $(".slider")[0].id; $("#" + e).foundation("destroy"), $("#slider-handle-min").css("left", "0%"), $("#slider-handle-max").css("left", "100%"), $options = { start: Math.floor(selectedStandAreaTEMinPrice), end: Math.ceil(selectedStandAreaTEMaxPrice), initialStart: Math.floor(selectedStandAreaTEMinPrice), initialEnd: Math.ceil(selectedStandAreaTEMaxPrice), decimal: 2 }; new Foundation.Slider($("#" + e), $options); var t = !1; $(document).mouseup(function (e) { if (t) { if (t = !1, $(".slider").hasClass("disabled")) return !1; $(".slider").addClass("disabled"), ticketExchangeAndSilding = !0, createSeatSelection(stand, void 0), e.preventDefault() } }), $("[data-slider]").on("mousedown.zf.slider", function () { t = !0 }) } } function DecodeHTMLString(e) { return $("<textarea />").html(e).text() } $(document).ready(function () { if (renderStandAreaDDLOptions) { var e = !0, t = !0, a = !0, i = !0; if (null != document.getElementById("hdfShowPricingOptionsAsDropDown") && (e = "true" === document.getElementById("hdfShowPricingOptionsAsDropDown").value), null != document.getElementById("hdfShowStandAreaOptionsAsDropDown") && (t = "true" === document.getElementById("hdfShowStandAreaOptionsAsDropDown").value), null != document.getElementById("hdfShowPriceBandListAsDropDown") && (a = "true" === document.getElementById("hdfShowPriceBandListAsDropDown").value), null != document.getElementById("hdfShowTicketExchangeAsDropDown") && (i = "true" === document.getElementById("hdfShowTicketExchangeAsDropDown").value), e) { $("[data-toggle='js-price-band-filter']").show(), $("#js-price-band-filter").addClass("large dropdown-pane left dropdown-pane--no-triangle"); new Foundation.Dropdown($("#js-price-band-filter"), { hover: !0, hoverPane: !0 }) } if (t) { $("[data-toggle='js-price-band-best-available']").show(), $("#js-price-band-best-available").addClass("large dropdown-pane left dropdown-pane--no-triangle"); new Foundation.Dropdown($("#js-price-band-best-available"), { hover: !0, hoverPane: !0 }) } if (a) { $("[data-toggle='js-price-band-concession']").show(), $("#js-price-band-concession").addClass("large dropdown-pane left dropdown-pane--no-triangle"); new Foundation.Dropdown($("#js-price-band-concession"), { hover: !0, hoverPane: !0 }) } if (i) { $("[data-toggle='js-ticket-exchange']").show(), $("#js-ticket-exchange").addClass("large dropdown-pane left dropdown-pane--no-triangle"); new Foundation.Dropdown($("#js-ticket-exchange"), { hover: !0, hoverPane: !0 }) } } null != document.getElementById("hdfPriceAndAreaSelection") && (isPriceAndAreaSelection = "true" === document.getElementById("hdfPriceAndAreaSelection").value) });
Imports Talent.Common
Imports Talent.eCommerce
Imports Talent.eCommerce.CATHelper
Imports TEBUtilities = Talent.eCommerce.Utilities
Imports TCUtilities = Talent.Common.Utilities
Imports System.Web.Script.Serialization
Imports System.Collections.Generic
Imports System.Linq

Partial Class PagesPublic_ProductBrowse_VisualSeatSelection
    Inherits TalentBase01

    Private _commonWfrPage As WebFormResource = Nothing

#Region "Protected Methods"

    Protected Sub Page_Init(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Init
        _commonWfrPage = New WebFormResource
        With _commonWfrPage
            .BusinessUnit = TalentCache.GetBusinessUnit()
            .PartnerCode = TalentCache.GetPartner(HttpContext.Current.Profile, .BusinessUnit)
            .FrontEndConnectionString = ConfigurationManager.ConnectionStrings("TalentEBusinessDBConnectionString").ToString
            .KeyCode = TEBUtilities.GetCurrentPageName()
            .PageCode = TEBUtilities.GetCurrentPageName()
        End With
    End Sub

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        ProcessCATSeatValidation()
        If Request.QueryString("product") IsNot Nothing AndAlso Request.QueryString("product").ToString().Length > 0 Then
            If Request.QueryString("type") IsNot Nothing AndAlso Request.QueryString("type").ToString().Length > 0 Then
                If Request.QueryString("stadium") IsNot Nothing AndAlso Request.QueryString("stadium").ToString().Length > 0 Then
                    uscSeatSelection.ProductCode = Request.QueryString("product")
                    uscSeatSelection.ProductType = Request.QueryString("type")
                    uscSeatSelection.StadiumCode = Request.QueryString("stadium")
                    If Request.QueryString("productsubtype") IsNot Nothing AndAlso Request.QueryString("productsubtype").ToString().Length > 0 Then
                        uscSeatSelection.ProductSubType = Request.QueryString("productsubtype")
                    Else
                        uscSeatSelection.ProductSubType = String.Empty
                    End If
                    If Request.QueryString("campaign") IsNot Nothing AndAlso Request.QueryString("campaign").ToString().Length > 0 Then
                        uscSeatSelection.CampaignCode = Request.QueryString("campaign")
                    Else
                        uscSeatSelection.CampaignCode = String.Empty
                    End If
                    If Request.QueryString("productIsHomeAsAway") IsNot Nothing AndAlso Request.QueryString("productIsHomeAsAway").ToString().Length > 0 Then
                        uscSeatSelection.ProductIsHomeAsAway = Request.QueryString("productIsHomeAsAway")
                    Else
                        uscSeatSelection.ProductIsHomeAsAway = String.Empty
                    End If
                    If (Not String.IsNullOrWhiteSpace(TEBUtilities.DecodeString(Request.QueryString("catmode")))) Then
                        uscSeatSelection.IsCatMode = True
                        uscSeatSelection.CATMode = TEBUtilities.DecodeString(Request.QueryString("catmode"))
                    Else
                        uscSeatSelection.IsCatMode = False
                        uscSeatSelection.CATMode = String.Empty
                    End If
                    hdfPriceAndAreaSelection.Value = ModuleDefaults.PriceAndAreaSelection.ToString().ToLower()
                Else
                    Response.Redirect(TEBUtilities.GetSiteHomePage())
                End If
            Else
                Response.Redirect(TEBUtilities.GetSiteHomePage())
            End If
        Else
            Response.Redirect(TEBUtilities.GetSiteHomePage())
        End If
    End Sub

    Protected Sub Page_PreRender(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.PreRender
        If TEBUtilities.CheckForDBNull_Boolean_DefaultTrue(_commonWfrPage.Attribute("SeatSelectionMiniAutoGenerated")) Then
            ScriptManager.RegisterStartupScript(Me.Page, GetType(Page), "seat-selection-mini.js", Talent.eCommerce.Utilities.FormatJavaScriptFileReference("seat-selection-mini.js", "/Module/SeatSelection/"), False)
        Else
            ScriptManager.RegisterStartupScript(Me.Page, GetType(Page), "RaphaelSeatSelectionSeating.js", Talent.eCommerce.Utilities.FormatJavaScriptFileReference("RaphaelSeatSelectionSeating.js", "/Module/SeatSelection/"), False)
            ScriptManager.RegisterStartupScript(Me.Page, GetType(Page), "RaphaelSeatSelectionStadium.js", Talent.eCommerce.Utilities.FormatJavaScriptFileReference("RaphaelSeatSelectionStadium.js", "/Module/SeatSelection/"), False)
            ScriptManager.RegisterStartupScript(Me.Page, GetType(Page), "RaphaelSeatSelectionZoom.js", Talent.eCommerce.Utilities.FormatJavaScriptFileReference("RaphaelSeatSelectionZoom.js", "/Module/SeatSelection/"), False)
            ScriptManager.RegisterStartupScript(Me.Page, GetType(Page), "RaphaelSeatSelectionDragSelect.js", Talent.eCommerce.Utilities.FormatJavaScriptFileReference("RaphaelSeatSelectionDragSelect.js", "/Module/SeatSelection/"), False)
            ScriptManager.RegisterStartupScript(Me.Page, GetType(Page), "stand-and-area-selection.js", Talent.eCommerce.Utilities.FormatJavaScriptFileReference("stand-and-area-selection.js", "/Module/SeatSelection/"), False)
        End If
        plhTicketing3DSeatView.Visible = uscSeatSelection.Ticketing3DSeatView
    End Sub

#End Region

#Region "Public Functions"

    ''' <summary>
    ''' Get the seats for the given stand and area
    ''' </summary>
    ''' <param name="data">The stand and area code</param>
    ''' <param name="productCode">The product being added</param>
    ''' <param name="stadiumCode">The Stadium code of the product</param>
    ''' <param name="campaignCode">The Campaign code of the product</param>
    ''' <param name="callId">CallId</param>
    ''' <param name="currentExceptionSeat">curentExceptionSeat</param>
    ''' <param name="priceBreakId">PriceBreakId for the particular product's seat</param>
    ''' <param name="includeTicketExchangeSeats">Including Ticket Exchange Seats</param>
    ''' <param name="selectedMinimumPrice">Minimum price which is selected</param>
    ''' <param name="selectedMaximumPrice">Maximum price which is selected</param>
    ''' <param name="ticketExchangeMin">Minimum of ticket Exchnage</param>
    ''' <param name="ticketExchangeMax">Maximum of Ticket Exchange</param>
    ''' <param name="packageId">packageId of particular package being added</param>
    ''' <param name="componentId">ComponentId of particular component</param>
    ''' <param name="changeAllSeats">changeAllSeats flag is determined whether user can change all seats or not</param>
    ''' <returns>The seats as an XML string</returns>
    ''' <remarks></remarks>
    <System.Web.Services.WebMethod()>
    Public Shared Function GetSeating(ByVal data As String, ByVal productCode As String, ByVal stadiumCode As String, ByVal campaignCode As String, ByVal callId As String, ByVal currentExceptionSeat As String, ByVal priceBreakId As String, ByVal includeTicketExchangeSeats As String, ByVal selectedMinimumPrice As String, ByVal selectedMaximumPrice As String, ByVal ticketExchangeMin As String, ByVal ticketExchangeMax As String, ByVal packageId As String, ByVal componentId As String, ByVal changeAllSeats As String) As String
        Dim wfrPage As WebFormResource = New WebFormResource
        With wfrPage
            .BusinessUnit = TalentCache.GetBusinessUnit()
            .PartnerCode = TalentCache.GetPartner(HttpContext.Current.Profile, .BusinessUnit)
            .FrontEndConnectionString = ConfigurationManager.ConnectionStrings("TalentEBusinessDBConnectionString").ToString
            .KeyCode = "VisualSeatSelection.aspx" 'Use of TEBUtilities.GetCurrentPageName() here gives "GetSeating" as the page code
        End With
        Dim tempString() As String = data.Split("-")
        Dim seatingArea As New Seating(productCode, stadiumCode, tempString(0), tempString(1), campaignCode, callId, currentExceptionSeat, priceBreakId, includeTicketExchangeSeats, selectedMinimumPrice, selectedMaximumPrice, ticketExchangeMin, ticketExchangeMax, packageId, componentId, TCUtilities.convertToBool(changeAllSeats))
        seatingArea.AvailabilityCaching = TEBUtilities.CheckForDBNull_Boolean_DefaultTrue(wfrPage.Attribute("AvailabilityCacheing"))
        seatingArea.AvailabilityCacheTime = TEBUtilities.CheckForDBNull_Int(wfrPage.Attribute("AvailabilityCacheTimeSeconds"))
        seatingArea.SeatNumberCaching = TEBUtilities.CheckForDBNull_Boolean_DefaultTrue(wfrPage.Attribute("SeatNumberCacheing"))
        seatingArea.SeatNumberCacheTime = TEBUtilities.CheckForDBNull_Int(wfrPage.Attribute("SeatNumberCacheTimeMinutes"))
        seatingArea.SeatRestrictionsCaching = TEBUtilities.CheckForDBNull_Boolean_DefaultTrue(wfrPage.Attribute("RestrictionCacheing"))
        seatingArea.SeatRestrictionsCacheTime = TEBUtilities.CheckForDBNull_Int(wfrPage.Attribute("RestrictionCacheTimeMinutes"))
        seatingArea.ReservedAndSoldSeatsCaching = TEBUtilities.CheckForDBNull_Boolean_DefaultTrue(wfrPage.Attribute("ReservedAndSoldSeatsCacheing"))
        seatingArea.ReservedAndSoldSeatsCacheTime = TEBUtilities.CheckForDBNull_Int(wfrPage.Attribute("ReservedAndSoldSeatsCacheTimeMinutes"))
        seatingArea.ReservationCodesCaching = TEBUtilities.CheckForDBNull_Boolean_DefaultTrue(wfrPage.Attribute("ReservationCodesCacheing"))
        seatingArea.ReservationCodesCacheTime = TEBUtilities.CheckForDBNull_Int(wfrPage.Attribute("ReservationCodesCacheTimeMinutes"))
        Return seatingArea.GetSeating()
    End Function

    ''' <summary>
    ''' Retrieve seat information for the given seat data
    ''' </summary>
    ''' <param name="data">The current seat we are retrieving data for</param>
    ''' <param name="productCode">The product being added</param>
    ''' <param name="campaignCode">The Campaign code of the product</param>
    ''' <param name="stadiumCode">The Stadium code of the product</param>
    ''' <param name="changeAllSeats">changeAllSeats flag is determined whether user can change all seats or not</param>
    ''' <returns></returns>
    ''' <remarks></remarks>
    <System.Web.Services.WebMethod()>
    Public Shared Function GetSeatInformation(ByVal data As String, ByVal productCode As String, ByVal stadiumCode As String, ByVal campaignCode As String, ByVal changeAllSeats As String) As String
        Dim wfrPage As WebFormResource = New WebFormResource
        With wfrPage
            .BusinessUnit = TalentCache.GetBusinessUnit()
            .PartnerCode = TalentCache.GetPartner(HttpContext.Current.Profile, .BusinessUnit)
            .FrontEndConnectionString = ConfigurationManager.ConnectionStrings("TalentEBusinessDBConnectionString").ToString
            .KeyCode = "VisualSeatSelection.aspx" 'Use of TEBUtilities.GetCurrentPageName() here gives "GetSeating" as the page code
        End With
        data = Replace(data, "-", "/")
        Dim seatString() As String = data.Split("/")
        Dim seatingDetails As New Seating(productCode, stadiumCode, seatString(0), seatString(1), campaignCode, String.Empty, String.Empty, String.Empty, String.Empty, String.Empty, String.Empty, String.Empty, String.Empty, String.Empty, String.Empty, TCUtilities.convertToBool(changeAllSeats))
        seatingDetails.SeatDetailsCaching = TEBUtilities.CheckForDBNullOrBlank_Boolean_DefaultTrue(wfrPage.Attribute("SeatDetailsCaching"))
        seatingDetails.SeatDetailsCacheTime = TEBUtilities.CheckForDBNull_Int(wfrPage.Attribute("SeatDetailsCacheTime"))
        Return seatingDetails.GetSeatingDetails(seatString(2), seatString(3))
    End Function

    ''' <summary>
    ''' Get the stadium XML string based on the given price break ID in order to re draw the stadium canvas
    ''' </summary>
    ''' <param name="data">Selected Price Break Id</param>
    ''' <param name="productCode">The Current Product Code</param>
    ''' <param name="stadiumCode">The Current Stadium Code</param>
    ''' <param name="productType">The Current Product Type</param>
    ''' <param name="campaignCode">The Current Campaign Code</param>
    ''' <param name="catMode">The CAT Mode setting</param>
    ''' <param name="callId">The Corporate Sale Call Id</param>
    ''' <returns>Formatted Stadium XML string used to draw the stadium SVG graphic</returns>
    ''' <remarks></remarks>
    <System.Web.Services.WebMethod()> _
    Public Shared Function GetStadiumXml(ByVal data As String, ByVal productCode As String, ByVal stadiumCode As String, ByVal productType As String, ByVal campaignCode As String, ByVal catMode As String, ByVal callId As String, ByVal includeTicketExchangeSeats As String, ByVal minimumPrice As String, ByVal maximumPrice As String, ByVal selectedStand As String, ByVal selectedArea As String) As String
        Dim hasError As Boolean = False
        Dim uscSeatSelection As New UserControls_SeatSelection
        Dim priceBreakIdValue As Long = TEBUtilities.CheckForDBNull_Long(data)
        Dim returnValue As String = String.Empty
        uscSeatSelection.ProductCode = productCode
        uscSeatSelection.StadiumCode = stadiumCode
        uscSeatSelection.ProductType = productType
        uscSeatSelection.CampaignCode = campaignCode
        uscSeatSelection.SelectedMaximumPrice = TEBUtilities.CheckForDBNull_Decimal(maximumPrice)
        uscSeatSelection.SelectedMinimumPrice = TEBUtilities.CheckForDBNull_Decimal(minimumPrice)
        uscSeatSelection.SelectedStand = selectedStand
        uscSeatSelection.SelectedArea = selectedArea
        uscSeatSelection.CATMode = catMode
        uscSeatSelection.CallId = callId
        uscSeatSelection.IncludeTicketExchangeChecked = TEBUtilities.CheckForDBNull_Boolean_DefaultFalse(includeTicketExchangeSeats)
        hasError = uscSeatSelection.ReBuildStadiumXml(priceBreakIdValue)
        If hasError Then
            returnValue = "error"
        Else
            returnValue = uscSeatSelection.StadiumAvailabilityJSON
        End If
        Return returnValue
    End Function

#End Region

End Class
using System.Collections.Generic;
namespace TalentSystemDefaults
{
	namespace TalentModules
	{
		public class DMRegistration : DMBase
		{
			static private bool _EnableAsModule = true;
			public static bool EnableAsModule
			{
				get
				{
					return _EnableAsModule;
				}
				set
				{
					_EnableAsModule = value;
				}
			}
			static private string _ModuleTitle = "Registration Details";
			public static string ModuleTitle
			{
				get
				{
					return _ModuleTitle;
				}
				set
				{
					_ModuleTitle = value;
				}
			}
			public const string AddressExpression = "BjS6aVxZ-g8e42CoB-arWvead-arWTew";
			public const string CompanyNameExpression = "BjS6aVxZ-BPxL5Dcf-arWveah-arWTem";
			public const string CompanyNameMaxLength = "BjS6aVxZ-BPxFmkxQ-arWve2u-arWTe6";
			public const string CompanyNameRowVisible = "BjS6aVxZ-BPxtUDcf-arWve9r-arcvCQ";
			public const string countryEnableRFV = "BjS6aVxZ-BPCkWio6-arWve2q-arWTef";
			public const string txtCompanyNameEnableRFV = "BjS6aVxZ-45weGnU0-arWve2a-arWTe2";
			public const string addressInfoLabel = "BjS4aVLZ-g8phOCxv-arWve9d-arWTe9";
			public const string buildingLabel = "BjS4aVLZ-50C4WOgQ-arWve9q-arWTea";
			public const string buildingRequiredFieldValidator = "BjS4aVLZ-507XUOzY-arWvRQy-arWTe0";
			public const string buildingErrorText = "BjS4aVLZ-50eu6dzX-arWvRQr-arWTRQ";
			public const string changePasswordButton = "BjS4aVLZ-JwtuWO0B-arWve9r-arWTRw";
			public const string changePasswordFailure = "BjS4aVLZ-JwtuOqxQ-arWvRmq-arWTRm";
			public const string changePasswordTitle = "BjS4aVLZ-Jwtugv04-arWve2a-arWTR6";
			public const string cityLabel = "BjS4aVLZ-tnj66YgZ-arWve2O-arWTRp";
			public const string cityErrorText = "BjS4aVLZ-tvxoO7LG-arWve03-arWTRf";
			public const string confirmNewPasswordLabel = "BjS4aVLZ-Bl3eQV49-arWveah-arWTR2";
			public const string confirmPasswordCompareErrorText = "BjS4aVLZ-BlbcQZoY-arWvRQu-arWTR9";
			public const string confirmPasswordRequiredErrorMessage = "BjS4aVLZ-Blbc6hka-arWvRmy-arWTRa";
			public const string countryLabel = "BjS4aVLZ-BPxkJILv-arWve2q-arWTR0";
			public const string countryErrorText = "BjS4aVLZ-BPpQWiSB-arWvea3-arWTMQ";
			public const string countyLabel = "BjS4aVLZ-BZSdaLTX-arWve2O-arWTMw";
			public const string countyRequiredFieldValidator = "BjS4aVLZ-B3jQ#dK9-arWve0d-arWTMm";
			public const string countyErrorText = "BjS4aVLZ-BdeldxpZ-arWve0y-arWTM6";
			public const string credentialsLabel = "BjS4aVLZ-Wjbh2gxv-arWve2a-arWTMp";
			public const string credentialsLabel2 = "BjS4aVLZ-WjbhGvTM-arWve9a-arWTMf";
			public const string dobDayErrorText = "BjS4aVLZ-BdelQxpY-arWvea8-arWTM2";
			public const string dobLabel = "BjS4aVLZ-BOChJIxv-arWve2u-arWTM9";
			public const string dobMonthErrorText = "BjS4aVLZ-BjeuavzX-arWve03-arWTMa";
			public const string dobYearErrorText = "BjS4aVLZ-BvpQlxSB-arWveaa-arWTM0";
			public const string emailLabel = "BjS4aVLZ-qWx7UOoM-arWvefr-arWTEQ";
			public const string emailRequiredFieldValidator = "BjS4aVLZ-qOe4QhU0-arWvRQq-arWTEw";
			public const string emailErrorText = "BjS4aVLZ-qvq4KDoL-arWve0y-arWTEm";
			public const string faxLabel = "BjS4aVLZ-rOIhJIxv-arWve2O-arWTE6";
			public const string faxErrorText = "BjS4aVLZ-rAI6OA4B-arWvear-arWTEp";
			public const string findAddressBtn = "BjS4aVLZ-tLb52IiY-arWve2r-arWTEf";
			public const string forenameLabel = "BjS4aVLZ-BlC4SO4V-arWve2u-arWTE2";
			public const string forenameRequiredFieldValidator = "BjS4aVLZ-Bl7XUOzY-arWve08-arWTE9";
			public const string forenameErrorText = "BjS4aVLZ-BleuOOzX-arWvRQr-arWTEa";
			public const string initialsLabel = "BjS4aVLZ-C7C4UOg9-arWve2d-arWTE0";
			public const string initialsErrorText = "BjS4aVLZ-C7eu6OzX-arWvRQh-arWTAQ";
			public const string instruction = "BjS4aVLZ-CEaE6dKQ-arWvRfh-arWTAw";
			public const string loginIDLabel = "BjS4aVLZ-BXxkJIev-arWve2q-arWTAm";
			public const string mobileLabel = "BjS4aVLZ-BZS7akTX-arWve2h-arWTA6";
			public const string mobileErrorText = "BjS4aVLZ-BdelUxpV-arWve0u-arWTAp";
			public const string newPasswordErrorMessage = "BjS4aVLZ-Q8KLnI0B-arWvRQa-arWTAf";
			public const string newPasswordLabel = "BjS4aVLZ-Q8KhtCxv-arWve93-arWTA2";
			public const string newPasswordRequiredErrorMessage = "BjS4aVLZ-Q8KtKDxy-arWvRQy-arWTA9";
			public const string otherLabel = "BjS4aVLZ-cWp6UqoM-arWvef8-arWTAa";
			public const string otherErrorText = "BjS4aVLZ-cvq4KDzB-arWve03-arWTA0";
			public const string password1Label = "BjS4aVLZ-rvv05w1a-arWve2y-arWT1Q";
			public const string password1RequiredFieldValidator = "BjS4aVLZ-rvxSGnLG-arWve0r-arWT1w";
			public const string password1ErrorText = "BjS4aVLZ-rveQQE4h-arWvR6r-arWT1m";
			public const string password2CompareValidator = "BjS4aVLZ-rvp76g0Y-arWvRQ3-arWT16";
			public const string password2Label = "BjS4aVLZ-rvv05m1a-arWve9d-arWT1p";
			public const string password2RequiredFieldValidator = "BjS4aVLZ-rvxSGnLG-arWvRwa-arWT1f";
			public const string passwordInstructionsLabel = "BjS4aVLZ-rvb6nr0M-arWvRp8-arWT12";
			public const string passwordLabel = "BjS4aVLZ-rvC4OO0G-arWve2u-arWT19";
			public const string passwordRequiredErrorMessage = "BjS4aVLZ-rv7X5I1G-arWvRQh-arWT1a";
			public const string personalDetailsLabel = "BjS4aVLZ-QWEeUxNQ-arWve9r-arWT10";
			public const string phoneLabel = "BjS4aVLZ-JWDMUDoM-arWve2u-arWTZQ";
			public const string phoneRequiredFieldValidator = "BjS4aVLZ-JOe4Qhl0-arWvRQd-arWTZw";
			public const string phoneErrorText = "BjS4aVLZ-Jvq4KD1Q-arWve0q-arWTZm";
			public const string positionLabel = "BjS4aVLZ-BAC45O0X-arWve2d-arWTZ6";
			public const string positionErrorText = "BjS4aVLZ-BAeundzX-arWvRQr-arWTZp";
			public const string postcodeLabel = "BjS4aVLZ-BLC42O0Y-arWve2u-arWTZf";
			public const string postcodeRequiredFieldValidator = "BjS4aVLZ-BL7XUOzY-arWve08-arWTZ2";
			public const string postcodeErrorText = "BjS4aVLZ-BLeunDzX-arWveaq-arWTZ9";
			public const string referenceLabel = "BjS4aVLZ-Q0v0GI4B-arWve9d-arWTZa";
			public const string referenceErrorText = "BjS4aVLZ-Q0eQGx4h-arWvRQy-arWTZ0";
			public const string registerBtn = "BjS4aVLZ-QOaQDxoB-arWve9h-arWTsQ";
			public const string registrationHeaderLabel1 = "BjS4aVLZ-QvprQV0B-arWve2r-arWTsw";
			public const string registrationHeaderLabel2 = "BjS4aVLZ-QvprQV0B-arWvRmy-arWTsm";
			public const string registrationInstructionsLabel1 = "BjS4aVLZ-QvprdvsK-arWvRmr-arWTs6";
			public const string registrationInstructionsLabel2 = "BjS4aVLZ-QvprdvsK-arWvRfr-arWTsp";
			public const string salutationLabel = "BjS4aVLZ-rj2eddoa-arWve28-arWTsf";
			public const string salutationErrorText = "BjS4aVLZ-rjgQn1eL-arWvRwq-arWTs2";
			public const string sequenceLabel = "BjS4aVLZ-QEC4gOVZ-arWve2d-arWTs9";
			public const string sequenceErrorText = "BjS4aVLZ-QEeukvzX-arWve03-arWTsa";
			public const string streetLabel = "BjS4aVLZ-cZS#aCTK-arWve23-arWTs0";
			public const string streetRequiredFieldValidator = "BjS4aVLZ-c3jQ#d09-arWve0r-arWT0Q";
			public const string streetErrorText = "BjS4aVLZ-cdelGxpa-arWve0y-arWT0w";
			public const string success = "BjS4aVLZ-5864n10Z-arWvea8-arWT0m";
			public const string successTitle = "BjS4aVLZ-58S4FVoK-arWvea3-arWT06";
			public const string surnameLabel = "BjS4aVLZ-5OxkJIxv-arWve2q-arWT0p";
			public const string surnameRequiredFieldValidator = "BjS4aVLZ-5OzE2V4L-arWve0y-arWT0f";
			public const string surnameErrorText = "BjS4aVLZ-5OpQWISB-arWvRQh-arWT02";
			public const string titleLabel = "BjS4aVLZ-tWEEUgoM-arWvefr-arWT09";
			public const string titleErrorText = "BjS4aVLZ-tvq4KDL9-arWve98-arWT0a";
			public const string townLabel = "BjS4aVLZ-Bnpc5YzK-arWvef8-arWT00";
			public const string townErrorText = "BjS4aVLZ-BvxoO76G-arWve03-arWTCQ";
			public const string typeLabel = "BjS4aVLZ-NnRz3YtK-arWvefy-arWTCw";
			public const string typeErrorText = "BjS4aVLZ-NvxoO71G-arWve0y-arWTCm";
			public const string updateBtn = "BjS4aVLZ-upDZXg1y-arWvef8-arWTC6";
			public const string userNameRequiredErrorMessage = "BjS4aVLZ-9l7X5IfG-arWve0r-arWTCp";
			public const string workLabel = "BjS4aVLZ-BnpQ5Yzd-arWve2q-arWTCf";
			public const string workErrorText = "BjS4aVLZ-BvxoO74G-arWve0O-arWTC2";
			public const string countryValidationExpression2 = "BjS4aVLZ-BPjZXCKh-arWve9h-arWTC9";
			public const string titleValidationExpression2 = "BjS4aVLZ-tWv6GdLB-arWve9u-arWTCa";
			public const string ComparePasswordsErrorText = "BjS4aVLZ-BObc5I1G-arWvRQ3-arWTC0";
			public const string crmExternalKeyName = "BjS4aVLZ-WOSJOAs4-arWve2a-arWjeQ";
			public const string UserAlreadyExistsErrorText = "BjS4aVLZ-9vRLO7oG-arWvM0q-arWjew";
			public const string HTMLNewsletterText = "BjS4aVLZ-MiE6FtLB-arWve2u-arWjem";
			public const string PlainTextNewsletterText = "BjS4aVLZ-FOxcFgSK-arWve9u-arWje6";
			public const string AcceptTandCsText = "BjS4aVLZ-jmr#G7SB-arWvMwO-arWjep";
			public const string SubscribeToNewsletterText = "BjS4aVLZ-5cp3GI0G-arWvRwO-arWjef";
			public const string InvalidDOBErrorText = "BjS4aVLZ-CLgQuOXP-arWvRwh-arWje2";
			public const string TandCNotTickedErrorText = "BjS4aVLZ-rA69FgcK-arWvR2u-arWje9";
			public const string CompareEmailErrorText = "BjS4aVLZ-BOjkBD2f-arWvRm8-arWjea";
			public const string ConfirmEmailLabel = "BjS4aVLZ-BljkWxs9-arWve9d-arWje0";
			public const string ConfirmationEmailBody = "BjS4aVLZ-Blpr2Dxt-arWvCpO-arWjRQ";
			public const string ConfirmationEmailSubject = "BjS4aVLZ-BlpraLgB-arWve0h-arWjRw";
			public const string InvalidUsernameError = "BjS4aVLZ-CLerOG0L-arWvMQ3-arWjRm";
			public const string SexLabel = "BjS4aVLZ-QOIhJIxv-arWvef8-arWjR6";
			public const string SexSelectText = "BjS4aVLZ-QOxoG7pB-arWvef8-arWjRp";
			public const string MaleText = "BjS4aVLZ-rGS4GASB-arWvefu-arWjRf";
			public const string FemaleText = "BjS4aVLZ-Qmk4dkpB-arWvefr-arWjR2";
			public const string SexErrorText = "BjS4aVLZ-QAI6OA4B-arWve9r-arWjR9";
			public const string DefaultErrorCode = "BjS4aVLZ-QjpQQgQX-arWvRw3-arWjRa";
			public const string ErrorCode99 = "BjS4aVLZ-WA#LGZzG-arWvRm8-arWjR0";
			public const string ErrorCodeDB = "BjS4aVLZ-WAuLGZzG-arWveaa-arWjMQ";
			public const string ErrorCodeEM = "BjS4aVLZ-WAlLGZzG-arWveaa-arWjMw";
			public const string ErrorCodeEU = "BjS4aVLZ-WA9LGZzG-arWvRQO-arWjMm";
			public const string ErrorCodeMC = "BjS4aVLZ-WArLGZzG-arWvRQr-arWjM6";
			public const string ErrorCodeMF = "BjS4aVLZ-WAkLGZzG-arWvRQO-arWjMp";
			public const string ErrorCodeNE = "BjS4aVLZ-WAgLGZzG-arWveau-arWjMf";
			public const string ErrorCodeXP = "BjS4aVLZ-WA3LGZzG-arWvRQd-arWjM2";
			public const string ErrorCodeXX = "BjS4aVLZ-WAfLGZzG-arWvRmh-arWjM9";
			public const string TicketingDefaultError = "BjS4aVLZ-tcxR5den-arWvRwh-arWjMa";
			public const string initialsRequiredFieldValidator = "BjS4aVLZ-C77XUOzY-arWvRQO-arWjM0";
			public const string salutationRequiredFieldValidator = "BjS4aVLZ-rji46hxy-arWvRQu-arWjEQ";
			public const string positionRequiredFieldValidator = "BjS4aVLZ-BA7XUOzY-arWvRQO-arWjEw";
			public const string workRequiredFieldValidator = "BjS4aVLZ-BFxZUO49-arWve0a-arWjEm";
			public const string mobileRequiredFieldValidator = "BjS4aVLZ-B3jQ#dU9-arWvRQd-arWjE6";
			public const string faxRequiredFieldValidator = "BjS4aVLZ-rDKU6gEY-arWve08-arWjEp";
			public const string otherRequiredFieldValidator = "BjS4aVLZ-cOe4QhL0-arWvRQr-arWjEf";
			public const string typeRequiredFieldValidator = "BjS4aVLZ-NFxZUO19-arWve0y-arWjE2";
			public const string referenceRequiredFieldValidator = "BjS4aVLZ-Q0xSGnLG-arWvRQy-arWjE9";
			public const string sequenceRequiredFieldValidator = "BjS4aVLZ-QE7XUOzY-arWvRQd-arWjEa";
			public const string townRequiredFieldValidator = "BjS4aVLZ-BFxZUO69-arWve0y-arWjE0";
			public const string cityRequiredFieldValidator = "BjS4aVLZ-tFxZUOL9-arWve0y-arWjAQ";
			public const string addressingLinkButtonText = "BjS4aVLZ-g82EWAoB-arWve9r-arWjAw";
			public const string Subscribe2Text = "BjS4aVLZ-5cq4OIba-arWvRmy-arWjAm";
			public const string Subscribe3Text = "BjS4aVLZ-5cq4OIba-arWvead-arWjA6";
			public const string opt1Text = "BjS4aVLZ-uGEPRASB-arWve03-arWjAp";
			public const string opt2Text = "BjS4aVLZ-uGETMASB-arWve28-arWjAf";
			public const string opt3Text = "BjS4aVLZ-uGEjEASB-arWve28-arWjA2";
			public const string opt4Text = "BjS4aVLZ-uGEBAASB-arWve0O-arWjA9";
			public const string opt5Text = "BjS4aVLZ-uGEH1ASB-arWve2h-arWjAa";
			public const string mailOptionText = "BjS4aVLZ-rjq4XDU9-arWvRQ3-arWjA0";
			public const string AddMembership_CheckboxLabel = "BjS4aVLZ-gnTEaYJn-arWvRQh-arWj1Q";
			public const string supporterSelectLabel1_Text = "BjS4aVLZ-5jxkU719-arWveaO-arWj1w";
			public const string supporterSelectLabel2_Text = "BjS4aVLZ-5jxkU719-arWve9a-arWj1m";
			public const string supporterSelectLabel3_Text = "BjS4aVLZ-5jxkU719-arWve9a-arWj16";
			public const string supporterSelectButton1_Text = "BjS4aVLZ-5jxk5NfK-arWve93-arWj1p";
			public const string supporterSelectButton2_Text = "BjS4aVLZ-5jxk5NfK-arWve93-arWj1f";
			public const string favouritesLabel_Text = "BjS4aVLZ-rc2edGoG-arWvead-arWj12";
			public const string contactMethodLabel_Text = "BjS4aVLZ-BjTuFgKK-arWve0q-arWj19";
			public const string supporterSelectDDL1_PleaseSelect_Text = "BjS4aVLZ-5jxkyIsG-arWve0q-arWj1a";
			public const string supporterSelectDDL2_PleaseSelect_Text = "BjS4aVLZ-5jxkyIsG-arWve0q-arWj10";
			public const string supporterSelectDDL3_PleaseSelect_Text = "BjS4aVLZ-5jxkyIsG-arWve0q-arWjZQ";
			public const string favouritesDDL_PleaseSelect_Text = "BjS4aVLZ-rcH1GVoE-arWveah-arWjZw";
			public const string MailFlagsTeam_Header_Text = "BjS4aVLZ-rWxeOIsR-arWveaq-arWjZm";
			public const string passportLabel = "BjS4aVLZ-rvC4OO0G-arWve2u-arWjZ6";
			public const string greenCardLabel = "BjS4aVLZ-WWv0vhYB-arWve28-arWjZp";
			public const string pinLabel = "BjS4aVLZ-tOahJIxv-arWvefu-arWjZf";
			public const string MailFlagsTeam_SelectAll_Text = "BjS4aVLZ-rWxedVkB-arWve9d-arWjZ2";
			public const string MailFlagsTeam_SelectNone_Text = "BjS4aVLZ-rWxedvL9-arWveau-arWjZ9";
			public const string RegAddress1Label = "BjS4aVLZ-QvNhzxxv-arWve28-arWjZa";
			public const string RegAddress2Label = "BjS4aVLZ-QvYhzxxv-arWve28-arWjZ0";
			public const string RegAddress3Label = "BjS4aVLZ-Qvchzxxv-arWve28-arWjsQ";
			public const string RegAddress4Label = "BjS4aVLZ-Qvohzxxv-arWve28-arWjsw";
			public const string RegAddress5Label = "BjS4aVLZ-QvXhzxxv-arWve28-arWjsm";
			public const string RegCountryLabel = "BjS4aVLZ-Q02e5go6-arWve2u-arWjs6";
			public const string RegPostcodeLabel = "BjS4aVLZ-Qjxhtgxv-arWve2h-arWjsp";
			public const string RegAddressHeaderLabel = "BjS4aVLZ-Qvy4GIo1-arWvea3-arWjsf";
			public const string RegAddressSameAsDeliveryCheckbox = "BjS4aVLZ-QvVe6x#B-arWve0u-arWjs2";
			public const string txtRegAddress1RequiredFieldValidator = "BjS4aVLZ-4ux#OsxG-arWvRwa-arWjs9";
			public const string txtRegAddress2RequiredFieldValidator = "BjS4aVLZ-4ux#OsxG-arWvRwa-arWjsa";
			public const string txtRegAddress3RequiredFieldValidator = "BjS4aVLZ-4ux#OsxG-arWvRwa-arWjs0";
			public const string txtRegAddress4RequiredFieldValidator = "BjS4aVLZ-4ux#OsxG-arWvRwu-arWj0Q";
			public const string txtRegAddress5RequiredFieldValidator = "BjS4aVLZ-4ux#OsxG-arWvRwh-arWj0w";
			public const string txtRegPostcodeRequiredFieldValidator = "BjS4aVLZ-4w6uOsxK-arWvRwr-arWj0m";
			public const string txtRegAddress1ErrorText = "BjS4aVLZ-4ux#FgYK-arWvRwy-arWj06";
			public const string txtRegAddress2ErrorText = "BjS4aVLZ-4ux#FgYK-arWvRwy-arWj0p";
			public const string txtRegAddress3ErrorText = "BjS4aVLZ-4ux#FgYK-arWvRwy-arWj0f";
			public const string txtRegAddress4ErrorText = "BjS4aVLZ-4ux#FgYK-arWvRwy-arWj02";
			public const string txtRegAddress5ErrorText = "BjS4aVLZ-4ux#FgYK-arWvRwy-arWj09";
			public const string txtRegPostcodeErrorText = "BjS4aVLZ-4w6uFgYK-arWvRwy-arWj0a";
			public const string mothersnameLabel = "BjS4aVLZ-B8xhmCxv-arWve93-arWj00";
			public const string fathersnameLabel = "BjS4aVLZ-r8xhmCxv-arWve93-arWjCQ";
			public const string lblUserIDsHeaderLabelText = "BjS4aVLZ-#vy4GIn9-arWvear-arWjCw";
			public const string lblUserID1Text = "BjS4aVLZ-#vq4GysC-arWve2u-arWjCm";
			public const string lblUserID2Text = "BjS4aVLZ-#vq4GysC-arWve28-arWjC6";
			public const string lblUserID3Text = "BjS4aVLZ-#vq4GysC-arWve2y-arWjCp";
			public const string lblUserID4Text = "BjS4aVLZ-#vq4GysC-arWve2y-arWjCf";
			public const string lblUserID5Text = "BjS4aVLZ-#vq4GysC-arWve2y-arWjC2";
			public const string lblUserID6Text = "BjS4aVLZ-#vq4GysC-arWve2y-arWjC9";
			public const string lblUserID7Text = "BjS4aVLZ-#vq4GysC-arWve2y-arWjCa";
			public const string lblUserID8Text = "BjS4aVLZ-#vq4GysC-arWve2y-arWjC0";
			public const string lblUserID9Text = "BjS4aVLZ-#vq4GysC-arWve2y-arWBeQ";
			public const string IDRequiredFieldValidator = "BjS4aVLZ-zckE2DVK-arWve0a-arWBew";
			public const string userID4Label = "BjS4aVLZ-9IxkJIDv-arWve0h-arWBem";
			public const string userID5Label = "BjS4aVLZ-9zxkJIDv-arWve0h-arWBe6";
			public const string userID6Label = "BjS4aVLZ-9gxkJIDv-arWve0h-arWBep";
			public const string userID7Label = "BjS4aVLZ-9kxkJIDv-arWve0h-arWBef";
			public const string userID8Label = "BjS4aVLZ-9#xkJIDv-arWve0h-arWBe2";
			public const string userID9Label = "BjS4aVLZ-9bxkJIDv-arWve0h-arWBe9";
			public const string InvalidRegistrationForMinor = "BjS4aVLZ-CLj#VSeQ-arWvRfq-arWBea";
			public const string CompanyNameLabelText = "BjS4aVLZ-BPxhdkxQ-arWve2a-arWBe0";
			public const string txtCompanyNameRequiredFieldValidator = "BjS4aVLZ-45weOsxc-arWvRQr-arWBRQ";
			public const string txtCompanyNameErrorText = "BjS4aVLZ-45weFgUK-arWvRwO-arWBRw";
			public const string registrationTypeHeaderLabel = "BjS4aVLZ-Qvpr2Yo4-arWveah-arWBRm";
			public const string registrationTypeLabel = "BjS4aVLZ-QvprGIxL-arWveaO-arWBR6";
			public const string ConfirmationEmailBodyHTML = "BjS4aVLZ-Blpr27ic-arWjMQd-arWBRp";
			public const string pleaseSelectDropdown = "BjS4aVLZ-FU66WIsB-arWve9a-arWBRf";
			public const string addressFormat1Errors = "BjS4aVLZ-g8Fenhza-arWvRwu-arWBR2";
			public const string btnGetAreas = "BjS4aVLZ-cub0GrHK-arWve2q-arWBR9";
			public const string IDRequiredOneValidator = "BjS4aVLZ-zcGrd5gP-arWvRm8-arWBRa";
			public const string lblUserID2MSG = "BjS4aVLZ-#vlsOmsG-arWve9r-arWBR0";
			public const string lblUserID3MSG = "BjS4aVLZ-#vlsO6sG-arWve98-arWBMQ";
			public const string ContactPreferencesH2 = "BjS4aVLZ-BjP4Mv4Z-arWvea3-arWBMw";
			public const string ContactbyPostLabel = "BjS4aVLZ-Bjp#5OzE-arWve9r-arWBMm";
			public const string stopcodelabel = "BjS4aVLZ-cLC42OzY-arWve2u-arWBM6";
			public const string priceBandLabel = "BjS4aVLZ-WWv0Dh1Z-arWve2h-arWBMp";
			public const string UsetocontactmeLabel = "BjS4aVLZ-9A66bgxQ-arWveaq-arWBMf";
			public const string ltlCustomerTextBoxHeading = "BjS4aVLZ-cjelGdQ4-arWveaO-arWBM2";
			public const string DefaultAddressStringForAddresslessRegistration = "BjS4aVLZ-Qje4hx0Q-arWvear-arLPMw";
			public const string customersuffixLabel = "BjS4aVLZ-5OPRggfG-arWve98-arWBM0";
			public const string customersuffixRequiredFieldValidator = "BjS4aVLZ-5OPROsxy-arWvRwO-arWBEQ";
			public const string customersuffixErrorText = "BjS4aVLZ-5OPRFgUK-arWvRm3-arWBEw";
			public const string nicknameLabel = "BjS4aVLZ-tlC4SOKV-arWve2u-arWBEm";
			public const string nicknameRequiredFieldValidator = "BjS4aVLZ-tl7XUOzY-arWve08-arWBE6";
			public const string nicknameErrorText = "BjS4aVLZ-tleugOzX-arWvRQr-arWBEp";
			public const string usernameLabel = "BjS4aVLZ-9lC4SOoV-arWve2u-arWBEf";
			public const string altusernameRequiredFieldValidator = "BjS4aVLZ-FvxtVVJB-arWvRQO-arWBE2";
			public const string altusernameErrorText = "BjS4aVLZ-FvxLdgxB-arWvRw3-arWBE9";
			public const string altusernameLabel = "BjS4aVLZ-FvxhHxxv-arWve28-arWBEa";
			public const string SalesLedgerLabel = "BjS4aVLZ-rOehGIxv-arWve93-arWBE0";
			public const string contactSLLabel = "BjS4aVLZ-Bjv0gYKK-arWve2h-arWBAQ";
			public const string contactslRequiredFieldValidator = "BjS4aVLZ-BjxSGnLG-arWvRQ3-arWBAw";
			public const string contactSLErrorText = "BjS4aVLZ-BjeQ5O4h-arWvRw3-arWBAm";
            public const string IsConfirmationEmailCheckboxVisible = "BjS6aVxZ-9cEEvLgL-arWvea3-arLvM6";
            public const string IsConfirmationEmailSend = "BjS6aVxZ-9cEE9hiY-arWve2a-arLvMp";
            public const string IsConfirmationEmailLabel = "BjS4aVLZ-9cEEJIev-arWvRQh-arLvMa";          
            public const string FLG64 = "0rrveQOP-KSLBJ2he-arWvewq-arLPAf";
            public const string FLG65 = "0rrveQOP-KSLHJ2he-arWvewq-arLPA2";
            public const string FLG67 = "0rrveQOP-KSLVJ2he-arWvewq-arLPA9";
            public const string FLG68 = "0rrveQOP-KSLCJ2he-arWvewq-arLPAa";
            public const string FL670A = "0rrveQOP-KSWDJQOb-arWvewq-arLPA0";
            public const string XF380A = "0rrveQOP-71WDVQOW-arWvewq-arLP1Q";
            public const string XF410A = "0rrveQOP-71WDVQOi-arWvewq-arLP1w";
            public const string XF690A = "0rrveQOP-71WDVQOr-arWvewq-arLP1m";

			public DMRegistration(DESettings settings, bool initialiseData)
				: base(ref settings, initialiseData)
			{
			}
			public override void SetModuleConfiguration()
			{
				//General Defaults
				DefaultTabType = DisplayTabsType.HORIZONTAL.ToString();
				//Expression Tab
				MConfigs.Add(AddressExpression, DataType.TEXT, DisplayTabs.TabHeaderExpressions);
				MConfigs.Add(CompanyNameExpression, DataType.TEXT, DisplayTabs.TabHeaderExpressions);
				MConfigs.Add(countryValidationExpression2, DataType.TEXT, DisplayTabs.TabHeaderExpressions);
				MConfigs.Add(titleValidationExpression2, DataType.TEXT, DisplayTabs.TabHeaderExpressions);
				//Attributes Tab
				MConfigs.Add(CompanyNameMaxLength, DataType.TEXT, DisplayTabs.TabHeaderAttributes, FieldValidation.Add(new List<VG> {VG.Numeric}));
				MConfigs.Add(CompanyNameRowVisible, DataType.BOOL, DisplayTabs.TabHeaderAttributes);
				MConfigs.Add(countryEnableRFV, DataType.BOOL, DisplayTabs.TabHeaderAttributes);
				MConfigs.Add(txtCompanyNameEnableRFV, DataType.BOOL, DisplayTabs.TabHeaderAttributes);
                MConfigs.Add(IsConfirmationEmailCheckboxVisible, DataType.BOOL, DisplayTabs.TabHeaderAttributes);
                MConfigs.Add(IsConfirmationEmailSend, DataType.BOOL, DisplayTabs.TabHeaderAttributes);
                //Labels Tab
                MConfigs.Add(addressInfoLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(buildingLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(cityLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(confirmNewPasswordLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(countryLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(countyLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(credentialsLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(credentialsLabel2, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(dobLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(emailLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(faxLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(password2Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(passwordInstructionsLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(passwordLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(personalDetailsLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(phoneLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.PhoneNumber);
				MConfigs.Add(positionLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(postcodeLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(referenceLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(registrationHeaderLabel2, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.General);
				MConfigs.Add(registrationInstructionsLabel1, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.General);
				MConfigs.Add(registrationInstructionsLabel2, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.General);
				MConfigs.Add(salutationLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(forenameLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(initialsLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(loginIDLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(mobileLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.PhoneNumber);
				MConfigs.Add(newPasswordLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(otherLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.PhoneNumber);
				MConfigs.Add(password1Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(sequenceLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(streetLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(surnameLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(surnameErrorText, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(titleLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(townLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(typeLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(workLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.PhoneNumber);
				MConfigs.Add(ConfirmationEmailBody, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Email);
				MConfigs.Add(SexLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(passportLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(greenCardLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.CustomerIDs);
				MConfigs.Add(pinLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.CustomerIDs);
				MConfigs.Add(RegAddress1Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(RegAddress2Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(RegAddress3Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(RegAddress4Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(RegAddress5Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(RegCountryLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(RegPostcodeLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(RegAddressHeaderLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(mothersnameLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(fathersnameLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(userID4Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.CustomerIDs);
				MConfigs.Add(userID5Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.CustomerIDs);
				MConfigs.Add(userID6Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.CustomerIDs);
				MConfigs.Add(userID7Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.CustomerIDs);
				MConfigs.Add(userID8Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.CustomerIDs);
				MConfigs.Add(userID9Label, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.CustomerIDs);
				MConfigs.Add(CompanyNameLabelText, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Address);
				MConfigs.Add(registrationTypeHeaderLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.General);
				MConfigs.Add(registrationTypeLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.General);
				MConfigs.Add(ContactbyPostLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(stopcodelabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(priceBandLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(UsetocontactmeLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(lblUserID2MSG, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.CustomerIDs);
				MConfigs.Add(lblUserID3MSG, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.CustomerIDs);
				MConfigs.Add(altusernameLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(SalesLedgerLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(contactSLLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.General);
				MConfigs.Add(customersuffixLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(nicknameLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(usernameLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.Customer);
				MConfigs.Add(buildingRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation, null, AccordionGroup.Address);
				MConfigs.Add(buildingErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
                MConfigs.Add(changePasswordButton, DataType.TEXT, DisplayTabs.TabHeaderButtons, FieldValidation.Add(new List<VG> {VG.Mandatory | VG.MinLength | VG.MaxLength}, minLength: 5, maxLength: 10));
				MConfigs.Add(changePasswordFailure, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(changePasswordTitle, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(cityErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(confirmPasswordCompareErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(confirmPasswordRequiredErrorMessage, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(countryErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(countyRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation, null, AccordionGroup.Address);
				MConfigs.Add(countyErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(dobDayErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(dobMonthErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(dobYearErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(emailRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(emailErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(faxErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(findAddressBtn, DataType.TEXT, DisplayTabs.TabHeaderButtons);
				MConfigs.Add(forenameRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(forenameErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(initialsErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(instruction, DataType.TEXTAREA, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(mobileErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(newPasswordErrorMessage, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(newPasswordRequiredErrorMessage, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(otherErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(password1RequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation, null, AccordionGroup.Login);
				MConfigs.Add(password1ErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(password2CompareValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(password2RequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation, null, AccordionGroup.Login);
				MConfigs.Add(passwordRequiredErrorMessage, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(phoneRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation, null, AccordionGroup.PhoneNumber);
				MConfigs.Add(phoneErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(positionErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(postcodeRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation, null, AccordionGroup.Address);
				MConfigs.Add(postcodeErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(referenceErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(registerBtn, DataType.DROPDOWN, DisplayTabs.TabHeaderButtons, FieldValidation.Add(new List<VG> {VG.Mandatory}));
                MConfigs.Add(registrationHeaderLabel1, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(salutationErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(sequenceErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(streetRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation, null, AccordionGroup.Address);
				MConfigs.Add(streetErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(success, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(successTitle, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(surnameRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation, null, AccordionGroup.Personal);
				MConfigs.Add(titleErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(townErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(typeErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(updateBtn, DataType.TEXT, DisplayTabs.TabHeaderButtons);
				MConfigs.Add(userNameRequiredErrorMessage, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(workErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ComparePasswordsErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(crmExternalKeyName, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(UserAlreadyExistsErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(HTMLNewsletterText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(PlainTextNewsletterText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
                MConfigs.Add(AcceptTandCsText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(SubscribeToNewsletterText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(InvalidDOBErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(TandCNotTickedErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(CompareEmailErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ConfirmEmailLabel, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ConfirmationEmailSubject, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(InvalidUsernameError, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(SexSelectText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(MaleText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(FemaleText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(SexErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(DefaultErrorCode, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ErrorCode99, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ErrorCodeDB, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ErrorCodeEM, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ErrorCodeEU, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ErrorCodeMC, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ErrorCodeMF, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ErrorCodeNE, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ErrorCodeXP, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ErrorCodeXX, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(TicketingDefaultError, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(initialsRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(salutationRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(positionRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(workRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(mobileRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(faxRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(otherRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(typeRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(referenceRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(sequenceRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(townRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(cityRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(addressingLinkButtonText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(Subscribe2Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(Subscribe3Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(opt1Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(opt2Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(opt3Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(opt4Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(opt5Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(mailOptionText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(AddMembership_CheckboxLabel, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(supporterSelectLabel1_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(supporterSelectLabel2_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(supporterSelectLabel3_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(supporterSelectButton1_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(supporterSelectButton2_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(favouritesLabel_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(contactMethodLabel_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(supporterSelectDDL1_PleaseSelect_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(supporterSelectDDL2_PleaseSelect_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(supporterSelectDDL3_PleaseSelect_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(favouritesDDL_PleaseSelect_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(MailFlagsTeam_Header_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(MailFlagsTeam_SelectAll_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(MailFlagsTeam_SelectNone_Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(RegAddressSameAsDeliveryCheckbox, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(txtRegAddress1RequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(txtRegAddress2RequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(txtRegAddress3RequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(txtRegAddress4RequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(txtRegAddress5RequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(txtRegPostcodeRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(txtRegAddress1ErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(txtRegAddress2ErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(txtRegAddress3ErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(txtRegAddress4ErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(txtRegAddress5ErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(txtRegPostcodeErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
                MConfigs.Add(lblUserIDsHeaderLabelText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(lblUserID1Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(lblUserID2Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(lblUserID3Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(lblUserID4Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(lblUserID5Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(lblUserID6Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(lblUserID7Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(lblUserID8Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(lblUserID9Text, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(IDRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(InvalidRegistrationForMinor, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(txtCompanyNameRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(txtCompanyNameErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(ConfirmationEmailBodyHTML, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(pleaseSelectDropdown, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(addressFormat1Errors, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(btnGetAreas, DataType.TEXT, DisplayTabs.TabHeaderButtons);
				MConfigs.Add(IDRequiredOneValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(ContactPreferencesH2, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(ltlCustomerTextBoxHeading, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(DefaultAddressStringForAddresslessRegistration, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(customersuffixRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(customersuffixErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(nicknameRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(nicknameErrorText, DataType.TEXT, DisplayTabs.TabHeaderTexts);
				MConfigs.Add(altusernameRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(altusernameErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
				MConfigs.Add(contactslRequiredFieldValidator, DataType.TEXT, DisplayTabs.TabHeaderValidation);
				MConfigs.Add(contactSLErrorText, DataType.TEXT, DisplayTabs.TabHeaderErrors);
                MConfigs.Add(IsConfirmationEmailLabel, DataType.TEXT, DisplayTabs.TabHeaderLabels, null, AccordionGroup.General);
                
                MConfigs.Add(FLG64, DataType.BOOL_10, DisplayTabs.TabHeaderGeneral);
                MConfigs.Add(FLG65, DataType.BOOL_10, DisplayTabs.TabHeaderGeneral);
                MConfigs.Add(FLG67, DataType.BOOL_10, DisplayTabs.TabHeaderGeneral);
                MConfigs.Add(FLG68, DataType.BOOL_10, DisplayTabs.TabHeaderGeneral);
                MConfigs.Add(FL670A, DataType.BOOL_10, DisplayTabs.TabHeaderGeneral);
                MConfigs.Add(XF380A, DataType.BOOL_YN, DisplayTabs.TabHeaderGeneral);
                MConfigs.Add(XF410A, DataType.BOOL_YN, DisplayTabs.TabHeaderGeneral);
                MConfigs.Add(XF690A, DataType.BOOL_YN, DisplayTabs.TabHeaderGeneral);
				Populate();
			}
			public override bool Validate()
			{
				bool result = base.Validate();
				ModuleConfiguration cityConfig = MConfigs.Find(c => c.ConfigID == cityLabel);
				ModuleConfiguration countryConfig = MConfigs.Find(c => c.ConfigID == countryLabel);
				if (countryConfig.ConfigurationItem.UpdatedValue != string.Empty)
				{
					if (cityConfig.ConfigurationItem.UpdatedValue == string.Empty)
					{
						countryConfig.ErrorMessage = "Country label is dependent on the city label";
						result = false;
					}
				}
				return result;
			}
		}
	}
}

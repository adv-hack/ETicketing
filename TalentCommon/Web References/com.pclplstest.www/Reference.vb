'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
'
Namespace com.pclplstest.www
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="XMLTransferEngineSoap", [Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Object()))>  _
    Partial Public Class XMLTransferEngine
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetQuoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerateCreditAgreementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateNewBusinessOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateRenewalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateMidTermAdjustmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateCancellationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateMidTermTransferOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateChangeOfClientReferenceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateChangeOfAdditionalCoverOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateChangeOfAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateReinstatementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateChangeOfBankDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateChangeOfContractInceptionDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateChangeOfCollectionDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNextTransactionIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetVersionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetStatementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBlankCreditAgreementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidateBankDetailsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindTransactionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Talent.Common.My.MySettings.Default.Talent_Common_com_pclplstest_www_XMLTransferEngine
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetQuoteCompleted As GetQuoteCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveTransactionCompleted As SaveTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteTransactionCompleted As DeleteTransactionCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerateCreditAgreementCompleted As GenerateCreditAgreementCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateNewBusinessCompleted As CreateNewBusinessCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateRenewalCompleted As CreateRenewalCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateMidTermAdjustmentCompleted As CreateMidTermAdjustmentCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateCancellationCompleted As CreateCancellationCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateMidTermTransferCompleted As CreateMidTermTransferCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateChangeOfClientReferenceCompleted As CreateChangeOfClientReferenceCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateChangeOfAdditionalCoverCompleted As CreateChangeOfAdditionalCoverCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateChangeOfAddressCompleted As CreateChangeOfAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateReinstatementCompleted As CreateReinstatementCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateChangeOfBankDetailsCompleted As CreateChangeOfBankDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateChangeOfContractInceptionDateCompleted As CreateChangeOfContractInceptionDateCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateChangeOfCollectionDateCompleted As CreateChangeOfCollectionDateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNextTransactionIDCompleted As GetNextTransactionIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetVersionCompleted As GetVersionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetStatementCompleted As GetStatementCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBlankCreditAgreementCompleted As GetBlankCreditAgreementCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidateBankDetailsCompleted As ValidateBankDetailsCompletedEventHandler
        
        '''<remarks/>
        Public Event FindTransactionCompleted As FindTransactionCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/GetQuote", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetQuote(ByVal UserName As String, ByVal Password As String, ByVal TransactionType As eTransactionType, ByVal Premium As Decimal, ByVal PPICode As String, ByVal RequiredRate As Decimal, ByVal OverrideRate As Boolean) As Quotation
            Dim results() As Object = Me.Invoke("GetQuote", New Object() {UserName, Password, TransactionType, Premium, PPICode, RequiredRate, OverrideRate})
            Return CType(results(0),Quotation)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetQuoteAsync(ByVal UserName As String, ByVal Password As String, ByVal TransactionType As eTransactionType, ByVal Premium As Decimal, ByVal PPICode As String, ByVal RequiredRate As Decimal, ByVal OverrideRate As Boolean)
            Me.GetQuoteAsync(UserName, Password, TransactionType, Premium, PPICode, RequiredRate, OverrideRate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetQuoteAsync(ByVal UserName As String, ByVal Password As String, ByVal TransactionType As eTransactionType, ByVal Premium As Decimal, ByVal PPICode As String, ByVal RequiredRate As Decimal, ByVal OverrideRate As Boolean, ByVal userState As Object)
            If (Me.GetQuoteOperationCompleted Is Nothing) Then
                Me.GetQuoteOperationCompleted = AddressOf Me.OnGetQuoteOperationCompleted
            End If
            Me.InvokeAsync("GetQuote", New Object() {UserName, Password, TransactionType, Premium, PPICode, RequiredRate, OverrideRate}, Me.GetQuoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetQuoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetQuoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetQuoteCompleted(Me, New GetQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/SaveTransaction", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveTransaction(ByVal UserName As String, ByVal Password As String, ByVal Transaction As Transaction, ByVal SaveState As eTransactionState) As TransactionResult
            Dim results() As Object = Me.Invoke("SaveTransaction", New Object() {UserName, Password, Transaction, SaveState})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveTransactionAsync(ByVal UserName As String, ByVal Password As String, ByVal Transaction As Transaction, ByVal SaveState As eTransactionState)
            Me.SaveTransactionAsync(UserName, Password, Transaction, SaveState, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveTransactionAsync(ByVal UserName As String, ByVal Password As String, ByVal Transaction As Transaction, ByVal SaveState As eTransactionState, ByVal userState As Object)
            If (Me.SaveTransactionOperationCompleted Is Nothing) Then
                Me.SaveTransactionOperationCompleted = AddressOf Me.OnSaveTransactionOperationCompleted
            End If
            Me.InvokeAsync("SaveTransaction", New Object() {UserName, Password, Transaction, SaveState}, Me.SaveTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveTransactionCompleted(Me, New SaveTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/DeleteTransaction", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteTransaction(ByVal UserName As String, ByVal Password As String, ByVal Transaction As Transaction) As TransactionResult
            Dim results() As Object = Me.Invoke("DeleteTransaction", New Object() {UserName, Password, Transaction})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteTransactionAsync(ByVal UserName As String, ByVal Password As String, ByVal Transaction As Transaction)
            Me.DeleteTransactionAsync(UserName, Password, Transaction, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteTransactionAsync(ByVal UserName As String, ByVal Password As String, ByVal Transaction As Transaction, ByVal userState As Object)
            If (Me.DeleteTransactionOperationCompleted Is Nothing) Then
                Me.DeleteTransactionOperationCompleted = AddressOf Me.OnDeleteTransactionOperationCompleted
            End If
            Me.InvokeAsync("DeleteTransaction", New Object() {UserName, Password, Transaction}, Me.DeleteTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteTransactionCompleted(Me, New DeleteTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/GenerateCreditAgreement", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerateCreditAgreement(ByVal business As NewBusiness) As TransactionResult
            Dim results() As Object = Me.Invoke("GenerateCreditAgreement", New Object() {business})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerateCreditAgreementAsync(ByVal business As NewBusiness)
            Me.GenerateCreditAgreementAsync(business, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerateCreditAgreementAsync(ByVal business As NewBusiness, ByVal userState As Object)
            If (Me.GenerateCreditAgreementOperationCompleted Is Nothing) Then
                Me.GenerateCreditAgreementOperationCompleted = AddressOf Me.OnGenerateCreditAgreementOperationCompleted
            End If
            Me.InvokeAsync("GenerateCreditAgreement", New Object() {business}, Me.GenerateCreditAgreementOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerateCreditAgreementOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerateCreditAgreementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerateCreditAgreementCompleted(Me, New GenerateCreditAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateNewBusiness", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateNewBusiness(ByVal UserName As String, ByVal Password As String, ByVal Business As NewBusiness) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateNewBusiness", New Object() {UserName, Password, Business})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateNewBusinessAsync(ByVal UserName As String, ByVal Password As String, ByVal Business As NewBusiness)
            Me.CreateNewBusinessAsync(UserName, Password, Business, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateNewBusinessAsync(ByVal UserName As String, ByVal Password As String, ByVal Business As NewBusiness, ByVal userState As Object)
            If (Me.CreateNewBusinessOperationCompleted Is Nothing) Then
                Me.CreateNewBusinessOperationCompleted = AddressOf Me.OnCreateNewBusinessOperationCompleted
            End If
            Me.InvokeAsync("CreateNewBusiness", New Object() {UserName, Password, Business}, Me.CreateNewBusinessOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateNewBusinessOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateNewBusinessCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateNewBusinessCompleted(Me, New CreateNewBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateRenewal", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateRenewal(ByVal UserName As String, ByVal Password As String, ByVal renewal As Renewal) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateRenewal", New Object() {UserName, Password, renewal})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateRenewalAsync(ByVal UserName As String, ByVal Password As String, ByVal renewal As Renewal)
            Me.CreateRenewalAsync(UserName, Password, renewal, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateRenewalAsync(ByVal UserName As String, ByVal Password As String, ByVal renewal As Renewal, ByVal userState As Object)
            If (Me.CreateRenewalOperationCompleted Is Nothing) Then
                Me.CreateRenewalOperationCompleted = AddressOf Me.OnCreateRenewalOperationCompleted
            End If
            Me.InvokeAsync("CreateRenewal", New Object() {UserName, Password, renewal}, Me.CreateRenewalOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateRenewalOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateRenewalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateRenewalCompleted(Me, New CreateRenewalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateMidTermAdjustment", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateMidTermAdjustment(ByVal UserName As String, ByVal Password As String, ByVal Adjustment As MidTermAdjustment) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateMidTermAdjustment", New Object() {UserName, Password, Adjustment})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateMidTermAdjustmentAsync(ByVal UserName As String, ByVal Password As String, ByVal Adjustment As MidTermAdjustment)
            Me.CreateMidTermAdjustmentAsync(UserName, Password, Adjustment, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateMidTermAdjustmentAsync(ByVal UserName As String, ByVal Password As String, ByVal Adjustment As MidTermAdjustment, ByVal userState As Object)
            If (Me.CreateMidTermAdjustmentOperationCompleted Is Nothing) Then
                Me.CreateMidTermAdjustmentOperationCompleted = AddressOf Me.OnCreateMidTermAdjustmentOperationCompleted
            End If
            Me.InvokeAsync("CreateMidTermAdjustment", New Object() {UserName, Password, Adjustment}, Me.CreateMidTermAdjustmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateMidTermAdjustmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateMidTermAdjustmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateMidTermAdjustmentCompleted(Me, New CreateMidTermAdjustmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateCancellation", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateCancellation(ByVal UserName As String, ByVal Password As String, ByVal cancellation As Cancellation) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateCancellation", New Object() {UserName, Password, cancellation})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateCancellationAsync(ByVal UserName As String, ByVal Password As String, ByVal cancellation As Cancellation)
            Me.CreateCancellationAsync(UserName, Password, cancellation, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateCancellationAsync(ByVal UserName As String, ByVal Password As String, ByVal cancellation As Cancellation, ByVal userState As Object)
            If (Me.CreateCancellationOperationCompleted Is Nothing) Then
                Me.CreateCancellationOperationCompleted = AddressOf Me.OnCreateCancellationOperationCompleted
            End If
            Me.InvokeAsync("CreateCancellation", New Object() {UserName, Password, cancellation}, Me.CreateCancellationOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateCancellationOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCancellationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCancellationCompleted(Me, New CreateCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateMidTermTransfer", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateMidTermTransfer(ByVal UserName As String, ByVal Password As String, ByVal Transfer As MidTermTransfer) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateMidTermTransfer", New Object() {UserName, Password, Transfer})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateMidTermTransferAsync(ByVal UserName As String, ByVal Password As String, ByVal Transfer As MidTermTransfer)
            Me.CreateMidTermTransferAsync(UserName, Password, Transfer, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateMidTermTransferAsync(ByVal UserName As String, ByVal Password As String, ByVal Transfer As MidTermTransfer, ByVal userState As Object)
            If (Me.CreateMidTermTransferOperationCompleted Is Nothing) Then
                Me.CreateMidTermTransferOperationCompleted = AddressOf Me.OnCreateMidTermTransferOperationCompleted
            End If
            Me.InvokeAsync("CreateMidTermTransfer", New Object() {UserName, Password, Transfer}, Me.CreateMidTermTransferOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateMidTermTransferOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateMidTermTransferCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateMidTermTransferCompleted(Me, New CreateMidTermTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateChangeOfClientReference", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateChangeOfClientReference(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfClientReference) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateChangeOfClientReference", New Object() {UserName, Password, Change})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfClientReferenceAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfClientReference)
            Me.CreateChangeOfClientReferenceAsync(UserName, Password, Change, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfClientReferenceAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfClientReference, ByVal userState As Object)
            If (Me.CreateChangeOfClientReferenceOperationCompleted Is Nothing) Then
                Me.CreateChangeOfClientReferenceOperationCompleted = AddressOf Me.OnCreateChangeOfClientReferenceOperationCompleted
            End If
            Me.InvokeAsync("CreateChangeOfClientReference", New Object() {UserName, Password, Change}, Me.CreateChangeOfClientReferenceOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateChangeOfClientReferenceOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateChangeOfClientReferenceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateChangeOfClientReferenceCompleted(Me, New CreateChangeOfClientReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateChangeOfAdditionalCover", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateChangeOfAdditionalCover(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfAdditionalCover) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateChangeOfAdditionalCover", New Object() {UserName, Password, Change})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfAdditionalCoverAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfAdditionalCover)
            Me.CreateChangeOfAdditionalCoverAsync(UserName, Password, Change, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfAdditionalCoverAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfAdditionalCover, ByVal userState As Object)
            If (Me.CreateChangeOfAdditionalCoverOperationCompleted Is Nothing) Then
                Me.CreateChangeOfAdditionalCoverOperationCompleted = AddressOf Me.OnCreateChangeOfAdditionalCoverOperationCompleted
            End If
            Me.InvokeAsync("CreateChangeOfAdditionalCover", New Object() {UserName, Password, Change}, Me.CreateChangeOfAdditionalCoverOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateChangeOfAdditionalCoverOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateChangeOfAdditionalCoverCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateChangeOfAdditionalCoverCompleted(Me, New CreateChangeOfAdditionalCoverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateChangeOfAddress", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateChangeOfAddress(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfAddress) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateChangeOfAddress", New Object() {UserName, Password, Change})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfAddressAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfAddress)
            Me.CreateChangeOfAddressAsync(UserName, Password, Change, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfAddressAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfAddress, ByVal userState As Object)
            If (Me.CreateChangeOfAddressOperationCompleted Is Nothing) Then
                Me.CreateChangeOfAddressOperationCompleted = AddressOf Me.OnCreateChangeOfAddressOperationCompleted
            End If
            Me.InvokeAsync("CreateChangeOfAddress", New Object() {UserName, Password, Change}, Me.CreateChangeOfAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateChangeOfAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateChangeOfAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateChangeOfAddressCompleted(Me, New CreateChangeOfAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateReinstatement", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateReinstatement(ByVal UserName As String, ByVal Password As String, ByVal reInstatement As Reinstatement) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateReinstatement", New Object() {UserName, Password, reInstatement})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateReinstatementAsync(ByVal UserName As String, ByVal Password As String, ByVal reInstatement As Reinstatement)
            Me.CreateReinstatementAsync(UserName, Password, reInstatement, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateReinstatementAsync(ByVal UserName As String, ByVal Password As String, ByVal reInstatement As Reinstatement, ByVal userState As Object)
            If (Me.CreateReinstatementOperationCompleted Is Nothing) Then
                Me.CreateReinstatementOperationCompleted = AddressOf Me.OnCreateReinstatementOperationCompleted
            End If
            Me.InvokeAsync("CreateReinstatement", New Object() {UserName, Password, reInstatement}, Me.CreateReinstatementOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateReinstatementOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateReinstatementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateReinstatementCompleted(Me, New CreateReinstatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateChangeOfBankDetails", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateChangeOfBankDetails(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfBankDetails) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateChangeOfBankDetails", New Object() {UserName, Password, Change})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfBankDetailsAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfBankDetails)
            Me.CreateChangeOfBankDetailsAsync(UserName, Password, Change, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfBankDetailsAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfBankDetails, ByVal userState As Object)
            If (Me.CreateChangeOfBankDetailsOperationCompleted Is Nothing) Then
                Me.CreateChangeOfBankDetailsOperationCompleted = AddressOf Me.OnCreateChangeOfBankDetailsOperationCompleted
            End If
            Me.InvokeAsync("CreateChangeOfBankDetails", New Object() {UserName, Password, Change}, Me.CreateChangeOfBankDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateChangeOfBankDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateChangeOfBankDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateChangeOfBankDetailsCompleted(Me, New CreateChangeOfBankDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateChangeOfContractInceptio"& _ 
            "nDate", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateChangeOfContractInceptionDate(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfContractInceptionDate) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateChangeOfContractInceptionDate", New Object() {UserName, Password, Change})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfContractInceptionDateAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfContractInceptionDate)
            Me.CreateChangeOfContractInceptionDateAsync(UserName, Password, Change, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfContractInceptionDateAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfContractInceptionDate, ByVal userState As Object)
            If (Me.CreateChangeOfContractInceptionDateOperationCompleted Is Nothing) Then
                Me.CreateChangeOfContractInceptionDateOperationCompleted = AddressOf Me.OnCreateChangeOfContractInceptionDateOperationCompleted
            End If
            Me.InvokeAsync("CreateChangeOfContractInceptionDate", New Object() {UserName, Password, Change}, Me.CreateChangeOfContractInceptionDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateChangeOfContractInceptionDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateChangeOfContractInceptionDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateChangeOfContractInceptionDateCompleted(Me, New CreateChangeOfContractInceptionDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/CreateChangeOfCollectionDate", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateChangeOfCollectionDate(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfCollectionDate) As TransactionResult
            Dim results() As Object = Me.Invoke("CreateChangeOfCollectionDate", New Object() {UserName, Password, Change})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfCollectionDateAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfCollectionDate)
            Me.CreateChangeOfCollectionDateAsync(UserName, Password, Change, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateChangeOfCollectionDateAsync(ByVal UserName As String, ByVal Password As String, ByVal Change As ChangeOfCollectionDate, ByVal userState As Object)
            If (Me.CreateChangeOfCollectionDateOperationCompleted Is Nothing) Then
                Me.CreateChangeOfCollectionDateOperationCompleted = AddressOf Me.OnCreateChangeOfCollectionDateOperationCompleted
            End If
            Me.InvokeAsync("CreateChangeOfCollectionDate", New Object() {UserName, Password, Change}, Me.CreateChangeOfCollectionDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateChangeOfCollectionDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateChangeOfCollectionDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateChangeOfCollectionDateCompleted(Me, New CreateChangeOfCollectionDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/GetNextTransactionID", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNextTransactionID(ByVal UserName As String, ByVal Password As String, ByVal TransactionType As eTransactionType) As Integer
            Dim results() As Object = Me.Invoke("GetNextTransactionID", New Object() {UserName, Password, TransactionType})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNextTransactionIDAsync(ByVal UserName As String, ByVal Password As String, ByVal TransactionType As eTransactionType)
            Me.GetNextTransactionIDAsync(UserName, Password, TransactionType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNextTransactionIDAsync(ByVal UserName As String, ByVal Password As String, ByVal TransactionType As eTransactionType, ByVal userState As Object)
            If (Me.GetNextTransactionIDOperationCompleted Is Nothing) Then
                Me.GetNextTransactionIDOperationCompleted = AddressOf Me.OnGetNextTransactionIDOperationCompleted
            End If
            Me.InvokeAsync("GetNextTransactionID", New Object() {UserName, Password, TransactionType}, Me.GetNextTransactionIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNextTransactionIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNextTransactionIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNextTransactionIDCompleted(Me, New GetNextTransactionIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/GetVersion", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetVersion() As String
            Dim results() As Object = Me.Invoke("GetVersion", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetVersionAsync()
            Me.GetVersionAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetVersionAsync(ByVal userState As Object)
            If (Me.GetVersionOperationCompleted Is Nothing) Then
                Me.GetVersionOperationCompleted = AddressOf Me.OnGetVersionOperationCompleted
            End If
            Me.InvokeAsync("GetVersion", New Object(-1) {}, Me.GetVersionOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetVersionOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetVersionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetVersionCompleted(Me, New GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/GetStatement", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetStatement(ByVal UserName As String, ByVal Password As String, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal CurrencyType As eCurrencyType) As Statement
            Dim results() As Object = Me.Invoke("GetStatement", New Object() {UserName, Password, DateFrom, DateTo, CurrencyType})
            Return CType(results(0),Statement)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetStatementAsync(ByVal UserName As String, ByVal Password As String, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal CurrencyType As eCurrencyType)
            Me.GetStatementAsync(UserName, Password, DateFrom, DateTo, CurrencyType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetStatementAsync(ByVal UserName As String, ByVal Password As String, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal CurrencyType As eCurrencyType, ByVal userState As Object)
            If (Me.GetStatementOperationCompleted Is Nothing) Then
                Me.GetStatementOperationCompleted = AddressOf Me.OnGetStatementOperationCompleted
            End If
            Me.InvokeAsync("GetStatement", New Object() {UserName, Password, DateFrom, DateTo, CurrencyType}, Me.GetStatementOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetStatementOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetStatementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetStatementCompleted(Me, New GetStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/GetBlankCreditAgreement", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBlankCreditAgreement(ByVal UserName As String, ByVal Password As String, ByVal SchemeCode As String) As TransactionResult
            Dim results() As Object = Me.Invoke("GetBlankCreditAgreement", New Object() {UserName, Password, SchemeCode})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBlankCreditAgreementAsync(ByVal UserName As String, ByVal Password As String, ByVal SchemeCode As String)
            Me.GetBlankCreditAgreementAsync(UserName, Password, SchemeCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBlankCreditAgreementAsync(ByVal UserName As String, ByVal Password As String, ByVal SchemeCode As String, ByVal userState As Object)
            If (Me.GetBlankCreditAgreementOperationCompleted Is Nothing) Then
                Me.GetBlankCreditAgreementOperationCompleted = AddressOf Me.OnGetBlankCreditAgreementOperationCompleted
            End If
            Me.InvokeAsync("GetBlankCreditAgreement", New Object() {UserName, Password, SchemeCode}, Me.GetBlankCreditAgreementOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBlankCreditAgreementOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBlankCreditAgreementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBlankCreditAgreementCompleted(Me, New GetBlankCreditAgreementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/ValidateBankDetails", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateBankDetails(ByVal UserName As String, ByVal Password As String, ByVal SortCode As String, ByVal AccountNumber As String) As TransactionResult
            Dim results() As Object = Me.Invoke("ValidateBankDetails", New Object() {UserName, Password, SortCode, AccountNumber})
            Return CType(results(0),TransactionResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidateBankDetailsAsync(ByVal UserName As String, ByVal Password As String, ByVal SortCode As String, ByVal AccountNumber As String)
            Me.ValidateBankDetailsAsync(UserName, Password, SortCode, AccountNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidateBankDetailsAsync(ByVal UserName As String, ByVal Password As String, ByVal SortCode As String, ByVal AccountNumber As String, ByVal userState As Object)
            If (Me.ValidateBankDetailsOperationCompleted Is Nothing) Then
                Me.ValidateBankDetailsOperationCompleted = AddressOf Me.OnValidateBankDetailsOperationCompleted
            End If
            Me.InvokeAsync("ValidateBankDetails", New Object() {UserName, Password, SortCode, AccountNumber}, Me.ValidateBankDetailsOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidateBankDetailsOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidateBankDetailsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidateBankDetailsCompleted(Me, New ValidateBankDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("www.PCL.co.uk/XMLTransferService/XMLTransferEngine/FindTransaction", RequestNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", ResponseNamespace:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindTransaction(ByVal UserName As String, ByVal Password As String, ByVal Transaction As Transaction) As Transaction()
            Dim results() As Object = Me.Invoke("FindTransaction", New Object() {UserName, Password, Transaction})
            Return CType(results(0),Transaction())
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindTransactionAsync(ByVal UserName As String, ByVal Password As String, ByVal Transaction As Transaction)
            Me.FindTransactionAsync(UserName, Password, Transaction, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindTransactionAsync(ByVal UserName As String, ByVal Password As String, ByVal Transaction As Transaction, ByVal userState As Object)
            If (Me.FindTransactionOperationCompleted Is Nothing) Then
                Me.FindTransactionOperationCompleted = AddressOf Me.OnFindTransactionOperationCompleted
            End If
            Me.InvokeAsync("FindTransaction", New Object() {UserName, Password, Transaction}, Me.FindTransactionOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindTransactionOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindTransactionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindTransactionCompleted(Me, New FindTransactionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Public Enum eTransactionType
        
        '''<remarks/>
        NewBusiness
        
        '''<remarks/>
        Renewal
        
        '''<remarks/>
        Cancellation
        
        '''<remarks/>
        MidTermAdjustment
        
        '''<remarks/>
        MidTermTransfer
        
        '''<remarks/>
        ChangeOfAddress
        
        '''<remarks/>
        ChangeOfAdditionalCover
        
        '''<remarks/>
        ChangeOfBankDetails
        
        '''<remarks/>
        ChangeOfClientReference
        
        '''<remarks/>
        ChangeOfCollectionDate
        
        '''<remarks/>
        ChangeOfContractInceptionDate
        
        '''<remarks/>
        Reinstatement
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class Quotation
        
        Private resultField As TransactionResult
        
        Private premiumField As Decimal
        
        Private transactionTypeField As eTransactionType
        
        Private pPICodeField As String
        
        Private schemesAvailableField As Integer
        
        Private schemeQuotesField() As SchemeQuote
        
        Private requiredRateField As Decimal
        
        Private overrideRateField As Boolean
        
        '''<remarks/>
        Public Property Result() As TransactionResult
            Get
                Return Me.resultField
            End Get
            Set
                Me.resultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Premium() As Decimal
            Get
                Return Me.premiumField
            End Get
            Set
                Me.premiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionType() As eTransactionType
            Get
                Return Me.transactionTypeField
            End Get
            Set
                Me.transactionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PPICode() As String
            Get
                Return Me.pPICodeField
            End Get
            Set
                Me.pPICodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemesAvailable() As Integer
            Get
                Return Me.schemesAvailableField
            End Get
            Set
                Me.schemesAvailableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemeQuotes() As SchemeQuote()
            Get
                Return Me.schemeQuotesField
            End Get
            Set
                Me.schemeQuotesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequiredRate() As Decimal
            Get
                Return Me.requiredRateField
            End Get
            Set
                Me.requiredRateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OverrideRate() As Boolean
            Get
                Return Me.overrideRateField
            End Get
            Set
                Me.overrideRateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class TransactionResult
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorCodeField As eErrorCode
        
        Private creditAgreementNeededField As Boolean
        
        Private creditAgreementField() As Byte
        
        Private saveStateField As eTransactionState
        
        Private resultsField() As Object
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorCode() As eErrorCode
            Get
                Return Me.errorCodeField
            End Get
            Set
                Me.errorCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreditAgreementNeeded() As Boolean
            Get
                Return Me.creditAgreementNeededField
            End Get
            Set
                Me.creditAgreementNeededField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property CreditAgreement() As Byte()
            Get
                Return Me.creditAgreementField
            End Get
            Set
                Me.creditAgreementField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SaveState() As eTransactionState
            Get
                Return Me.saveStateField
            End Get
            Set
                Me.saveStateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Results() As Object()
            Get
                Return Me.resultsField
            End Get
            Set
                Me.resultsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Public Enum eErrorCode
        
        '''<remarks/>
        NotSet
        
        '''<remarks/>
        TransactionSuccesful
        
        '''<remarks/>
        LoginFailed
        
        '''<remarks/>
        InternalError
        
        '''<remarks/>
        FieldLengthError
        
        '''<remarks/>
        TransIDAlreadyInUse
        
        '''<remarks/>
        ValidationFailed
        
        '''<remarks/>
        SchemeCodeValidationFailed
        
        '''<remarks/>
        PolicyClientReferenceValidationFailed
        
        '''<remarks/>
        CustNameValidationFailed
        
        '''<remarks/>
        CorpNameAddressValidationFailed
        
        '''<remarks/>
        CustSurnameValidationFailed
        
        '''<remarks/>
        CustAddress1ValidationFailed
        
        '''<remarks/>
        CustAddress2ValidationFailed
        
        '''<remarks/>
        BankSortCodeValidationFailed
        
        '''<remarks/>
        BankAccountNumberValidationFailed
        
        '''<remarks/>
        BankAccountNameValidationFailed
        
        '''<remarks/>
        BusinessTypeValidationFailed
        
        '''<remarks/>
        ClientPremiumValidationFailed
        
        '''<remarks/>
        NumInstalmentsValidationFailed
        
        '''<remarks/>
        InstalmentAmountValidationFailed
        
        '''<remarks/>
        DepositAmountvalidationFailed
        
        '''<remarks/>
        EntryTypeValidationFailed
        
        '''<remarks/>
        PrefPaymentDateValidationFailed
        
        '''<remarks/>
        ChargePercentageValidationFailed
        
        '''<remarks/>
        CancellationRuleValidationFailed
        
        '''<remarks/>
        TransTypeValidationFailed
        
        '''<remarks/>
        DateValidationFailed
        
        '''<remarks/>
        AddressNotFound
        
        '''<remarks/>
        AddressValidationFailed
        
        '''<remarks/>
        PostCodeValidationFailed
        
        '''<remarks/>
        BankDetailValidationFailed
        
        '''<remarks/>
        TransactionDoesNotExist
        
        '''<remarks/>
        TransactionCanNotBeEdited
        
        '''<remarks/>
        NoTransactionSpecified
        
        '''<remarks/>
        RelatedTransactionInQueue
        
        '''<remarks/>
        RealtimeValidationFailed
        
        '''<remarks/>
        BranchCodeRequired
        
        '''<remarks/>
        RecordLocked
        
        '''<remarks/>
        MobileNumberValidationFailed
        
        '''<remarks/>
        EmailAddressValidationFailed
        
        '''<remarks/>
        DOBValidationFailed
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Public Enum eTransactionState
        
        '''<remarks/>
        Pending
        
        '''<remarks/>
        Held
        
        '''<remarks/>
        Saved
        
        '''<remarks/>
        Incomplete
        
        '''<remarks/>
        Processed
        
        '''<remarks/>
        Deleted
        
        '''<remarks/>
        PCLAttentionRequired
        
        '''<remarks/>
        UserAttentionRequired
        
        '''<remarks/>
        None
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class StatementLine
        
        Private processedDateField As Date
        
        Private branchField As String
        
        Private subAgentField As String
        
        Private clientNameField As String
        
        Private pCLReferenceField As String
        
        Private clientReferenceField As String
        
        Private transactionTypeField As String
        
        Private amountField As Decimal
        
        Private premiumBasisField As String
        
        Private settlementDateField As Date
        
        '''<remarks/>
        Public Property ProcessedDate() As Date
            Get
                Return Me.processedDateField
            End Get
            Set
                Me.processedDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Branch() As String
            Get
                Return Me.branchField
            End Get
            Set
                Me.branchField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SubAgent() As String
            Get
                Return Me.subAgentField
            End Get
            Set
                Me.subAgentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientName() As String
            Get
                Return Me.clientNameField
            End Get
            Set
                Me.clientNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PCLReference() As String
            Get
                Return Me.pCLReferenceField
            End Get
            Set
                Me.pCLReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientReference() As String
            Get
                Return Me.clientReferenceField
            End Get
            Set
                Me.clientReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionType() As String
            Get
                Return Me.transactionTypeField
            End Get
            Set
                Me.transactionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Amount() As Decimal
            Get
                Return Me.amountField
            End Get
            Set
                Me.amountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PremiumBasis() As String
            Get
                Return Me.premiumBasisField
            End Get
            Set
                Me.premiumBasisField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SettlementDate() As Date
            Get
                Return Me.settlementDateField
            End Get
            Set
                Me.settlementDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class SchemeStatement
        
        Private schemeCodeField As String
        
        Private schemeNameField As String
        
        Private linesField As Integer
        
        Private statementLinesField() As StatementLine
        
        '''<remarks/>
        Public Property SchemeCode() As String
            Get
                Return Me.schemeCodeField
            End Get
            Set
                Me.schemeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemeName() As String
            Get
                Return Me.schemeNameField
            End Get
            Set
                Me.schemeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Lines() As Integer
            Get
                Return Me.linesField
            End Get
            Set
                Me.linesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StatementLines() As StatementLine()
            Get
                Return Me.statementLinesField
            End Get
            Set
                Me.statementLinesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class Statement
        
        Private resultField As TransactionResult
        
        Private schemesField As Integer
        
        Private schemeStatementsField() As SchemeStatement
        
        '''<remarks/>
        Public Property Result() As TransactionResult
            Get
                Return Me.resultField
            End Get
            Set
                Me.resultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Schemes() As Integer
            Get
                Return Me.schemesField
            End Get
            Set
                Me.schemesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemeStatements() As SchemeStatement()
            Get
                Return Me.schemeStatementsField
            End Get
            Set
                Me.schemeStatementsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(ChangeOfCollectionDate)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ChangeOfContractInceptionDate)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ChangeOfBankDetails)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Reinstatement)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ChangeOfAddress)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ChangeOfAdditionalCover)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(ChangeOfClientReference)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(MidTermTransfer)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Cancellation)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(MidTermAdjustment)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(Renewal)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(NewBusiness)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public MustInherit Class Transaction
        
        Private idField As Integer
        
        Private transIDField As Integer
        
        Private pCLReferenceField As String
        
        Private schemeCodeField As String
        
        Private policyClientReferenceField As String
        
        Private schemeBranchField As String
        
        Private schemeBrokerNoField As String
        
        Private saveStateField As eTransactionState
        
        '''<remarks/>
        Public Property ID() As Integer
            Get
                Return Me.idField
            End Get
            Set
                Me.idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransID() As Integer
            Get
                Return Me.transIDField
            End Get
            Set
                Me.transIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PCLReference() As String
            Get
                Return Me.pCLReferenceField
            End Get
            Set
                Me.pCLReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemeCode() As String
            Get
                Return Me.schemeCodeField
            End Get
            Set
                Me.schemeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyClientReference() As String
            Get
                Return Me.policyClientReferenceField
            End Get
            Set
                Me.policyClientReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemeBranch() As String
            Get
                Return Me.schemeBranchField
            End Get
            Set
                Me.schemeBranchField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemeBrokerNo() As String
            Get
                Return Me.schemeBrokerNoField
            End Get
            Set
                Me.schemeBrokerNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SaveState() As eTransactionState
            Get
                Return Me.saveStateField
            End Get
            Set
                Me.saveStateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class ChangeOfCollectionDate
        Inherits Transaction
        
        Private prefPaymentDateField As Integer
        
        '''<remarks/>
        Public Property PrefPaymentDate() As Integer
            Get
                Return Me.prefPaymentDateField
            End Get
            Set
                Me.prefPaymentDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class ChangeOfContractInceptionDate
        Inherits Transaction
        
        Private contractInceptionDateField As Date
        
        Private effectiveDateField As Date
        
        '''<remarks/>
        Public Property ContractInceptionDate() As Date
            Get
                Return Me.contractInceptionDateField
            End Get
            Set
                Me.contractInceptionDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EffectiveDate() As Date
            Get
                Return Me.effectiveDateField
            End Get
            Set
                Me.effectiveDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class ChangeOfBankDetails
        Inherits Transaction
        
        Private bankSortCodeField As String
        
        Private bankAccountNumberField As String
        
        Private bankAccountNameField As String
        
        Private changeTypeField As Char
        
        '''<remarks/>
        Public Property BankSortCode() As String
            Get
                Return Me.bankSortCodeField
            End Get
            Set
                Me.bankSortCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankAccountNumber() As String
            Get
                Return Me.bankAccountNumberField
            End Get
            Set
                Me.bankAccountNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankAccountName() As String
            Get
                Return Me.bankAccountNameField
            End Get
            Set
                Me.bankAccountNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChangeType() As Char
            Get
                Return Me.changeTypeField
            End Get
            Set
                Me.changeTypeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class Reinstatement
        Inherits Transaction
        
        Private reinstatementTypeField As String
        
        Private custTitleField As String
        
        Private custForeNamesField As String
        
        Private custSurnameField As String
        
        Private custAddress1Field As String
        
        Private custAddress2Field As String
        
        Private custAddress3Field As String
        
        Private custAddress4Field As String
        
        Private custAddress5Field As String
        
        Private custPostCodeField As String
        
        Private bankSortCodeField As String
        
        Private bankAccountNumberField As String
        
        Private bankAccountNameField As String
        
        Private creditAgreementDateField As Date
        
        Private creditRenewalDateField As Date
        
        Private totalCollectedFromCustomerField As Integer
        
        Private prefPaymentDateField As Integer
        
        Private cancellationFigureField As Integer
        
        Private defaultChargeIncludedField As Boolean
        
        Private newPolicyClientReferenceField As String
        
        '''<remarks/>
        Public Property ReinstatementType() As String
            Get
                Return Me.reinstatementTypeField
            End Get
            Set
                Me.reinstatementTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustTitle() As String
            Get
                Return Me.custTitleField
            End Get
            Set
                Me.custTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustForeNames() As String
            Get
                Return Me.custForeNamesField
            End Get
            Set
                Me.custForeNamesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustSurname() As String
            Get
                Return Me.custSurnameField
            End Get
            Set
                Me.custSurnameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress1() As String
            Get
                Return Me.custAddress1Field
            End Get
            Set
                Me.custAddress1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress2() As String
            Get
                Return Me.custAddress2Field
            End Get
            Set
                Me.custAddress2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress3() As String
            Get
                Return Me.custAddress3Field
            End Get
            Set
                Me.custAddress3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress4() As String
            Get
                Return Me.custAddress4Field
            End Get
            Set
                Me.custAddress4Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress5() As String
            Get
                Return Me.custAddress5Field
            End Get
            Set
                Me.custAddress5Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustPostCode() As String
            Get
                Return Me.custPostCodeField
            End Get
            Set
                Me.custPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankSortCode() As String
            Get
                Return Me.bankSortCodeField
            End Get
            Set
                Me.bankSortCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankAccountNumber() As String
            Get
                Return Me.bankAccountNumberField
            End Get
            Set
                Me.bankAccountNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankAccountName() As String
            Get
                Return Me.bankAccountNameField
            End Get
            Set
                Me.bankAccountNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreditAgreementDate() As Date
            Get
                Return Me.creditAgreementDateField
            End Get
            Set
                Me.creditAgreementDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreditRenewalDate() As Date
            Get
                Return Me.creditRenewalDateField
            End Get
            Set
                Me.creditRenewalDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalCollectedFromCustomer() As Integer
            Get
                Return Me.totalCollectedFromCustomerField
            End Get
            Set
                Me.totalCollectedFromCustomerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrefPaymentDate() As Integer
            Get
                Return Me.prefPaymentDateField
            End Get
            Set
                Me.prefPaymentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CancellationFigure() As Integer
            Get
                Return Me.cancellationFigureField
            End Get
            Set
                Me.cancellationFigureField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultChargeIncluded() As Boolean
            Get
                Return Me.defaultChargeIncludedField
            End Get
            Set
                Me.defaultChargeIncludedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NewPolicyClientReference() As String
            Get
                Return Me.newPolicyClientReferenceField
            End Get
            Set
                Me.newPolicyClientReferenceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class ChangeOfAddress
        Inherits Transaction
        
        Private custTitleField As String
        
        Private custForeNamesField As String
        
        Private custSurnameField As String
        
        Private custAddress1Field As String
        
        Private custAddress2Field As String
        
        Private custAddress3Field As String
        
        Private custAddress4Field As String
        
        Private custAddress5Field As String
        
        Private custPostCodeField As String
        
        '''<remarks/>
        Public Property CustTitle() As String
            Get
                Return Me.custTitleField
            End Get
            Set
                Me.custTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustForeNames() As String
            Get
                Return Me.custForeNamesField
            End Get
            Set
                Me.custForeNamesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustSurname() As String
            Get
                Return Me.custSurnameField
            End Get
            Set
                Me.custSurnameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress1() As String
            Get
                Return Me.custAddress1Field
            End Get
            Set
                Me.custAddress1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress2() As String
            Get
                Return Me.custAddress2Field
            End Get
            Set
                Me.custAddress2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress3() As String
            Get
                Return Me.custAddress3Field
            End Get
            Set
                Me.custAddress3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress4() As String
            Get
                Return Me.custAddress4Field
            End Get
            Set
                Me.custAddress4Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress5() As String
            Get
                Return Me.custAddress5Field
            End Get
            Set
                Me.custAddress5Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustPostCode() As String
            Get
                Return Me.custPostCodeField
            End Get
            Set
                Me.custPostCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class ChangeOfAdditionalCover
        Inherits Transaction
        
        Private addCoverCodeField As String
        
        '''<remarks/>
        Public Property AddCoverCode() As String
            Get
                Return Me.addCoverCodeField
            End Get
            Set
                Me.addCoverCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class ChangeOfClientReference
        Inherits Transaction
        
        Private newPolicyClientReferenceField As String
        
        '''<remarks/>
        Public Property NewPolicyClientReference() As String
            Get
                Return Me.newPolicyClientReferenceField
            End Get
            Set
                Me.newPolicyClientReferenceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class MidTermTransfer
        Inherits Transaction
        
        Private newPolicyClientReferenceField As String
        
        Private adjClientPremiumField As Integer
        
        Private transTypeField As String
        
        Private newSchemeCodeField As String
        
        Private addCoverCodeField As String
        
        Private businessTypeField As Char
        
        Private creditAgreementDateField As Date
        
        Private creditRenewalDateField As Date
        
        Private numInstalmentsField As Integer
        
        Private entryTypeField As Char
        
        Private prefPaymentDateField As Integer
        
        '''<remarks/>
        Public Property NewPolicyClientReference() As String
            Get
                Return Me.newPolicyClientReferenceField
            End Get
            Set
                Me.newPolicyClientReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AdjClientPremium() As Integer
            Get
                Return Me.adjClientPremiumField
            End Get
            Set
                Me.adjClientPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransType() As String
            Get
                Return Me.transTypeField
            End Get
            Set
                Me.transTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NewSchemeCode() As String
            Get
                Return Me.newSchemeCodeField
            End Get
            Set
                Me.newSchemeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddCoverCode() As String
            Get
                Return Me.addCoverCodeField
            End Get
            Set
                Me.addCoverCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessType() As Char
            Get
                Return Me.businessTypeField
            End Get
            Set
                Me.businessTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreditAgreementDate() As Date
            Get
                Return Me.creditAgreementDateField
            End Get
            Set
                Me.creditAgreementDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreditRenewalDate() As Date
            Get
                Return Me.creditRenewalDateField
            End Get
            Set
                Me.creditRenewalDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumInstalments() As Integer
            Get
                Return Me.numInstalmentsField
            End Get
            Set
                Me.numInstalmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntryType() As Char
            Get
                Return Me.entryTypeField
            End Get
            Set
                Me.entryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrefPaymentDate() As Integer
            Get
                Return Me.prefPaymentDateField
            End Get
            Set
                Me.prefPaymentDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class Cancellation
        Inherits Transaction
        
        Private cancellationRuleField As Char
        
        Private effectiveDateField As Date
        
        '''<remarks/>
        Public Property CancellationRule() As Char
            Get
                Return Me.cancellationRuleField
            End Get
            Set
                Me.cancellationRuleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EffectiveDate() As Date
            Get
                Return Me.effectiveDateField
            End Get
            Set
                Me.effectiveDateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class MidTermAdjustment
        Inherits Transaction
        
        Private clientPremiumField As Integer
        
        Private transTypeField As String
        
        Private effectiveDateField As Date
        
        Private collectionFlagField As Char
        
        Private entryTypeField As Char
        
        Private newPolicyClientReferenceField As String
        
        '''<remarks/>
        Public Property ClientPremium() As Integer
            Get
                Return Me.clientPremiumField
            End Get
            Set
                Me.clientPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransType() As String
            Get
                Return Me.transTypeField
            End Get
            Set
                Me.transTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EffectiveDate() As Date
            Get
                Return Me.effectiveDateField
            End Get
            Set
                Me.effectiveDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CollectionFlag() As Char
            Get
                Return Me.collectionFlagField
            End Get
            Set
                Me.collectionFlagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntryType() As Char
            Get
                Return Me.entryTypeField
            End Get
            Set
                Me.entryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NewPolicyClientReference() As String
            Get
                Return Me.newPolicyClientReferenceField
            End Get
            Set
                Me.newPolicyClientReferenceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class Renewal
        Inherits Transaction
        
        Private renewalSchemeCodeField As String
        
        Private oldPolicyClientReferenceField As String
        
        Private addCoverCodeField As String
        
        Private creditAgreementDateField As Date
        
        Private creditRenewalDateField As Date
        
        Private clientPremiumField As Integer
        
        Private entryTypeField As Char
        
        Private prefPaymentDateField As Integer
        
        Private chargePercentageField As Integer
        
        Private mobileNumberField As String
        
        Private emailAddressField As String
        
        Private dOBField As Date
        
        '''<remarks/>
        Public Property RenewalSchemeCode() As String
            Get
                Return Me.renewalSchemeCodeField
            End Get
            Set
                Me.renewalSchemeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OldPolicyClientReference() As String
            Get
                Return Me.oldPolicyClientReferenceField
            End Get
            Set
                Me.oldPolicyClientReferenceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddCoverCode() As String
            Get
                Return Me.addCoverCodeField
            End Get
            Set
                Me.addCoverCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreditAgreementDate() As Date
            Get
                Return Me.creditAgreementDateField
            End Get
            Set
                Me.creditAgreementDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreditRenewalDate() As Date
            Get
                Return Me.creditRenewalDateField
            End Get
            Set
                Me.creditRenewalDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientPremium() As Integer
            Get
                Return Me.clientPremiumField
            End Get
            Set
                Me.clientPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntryType() As Char
            Get
                Return Me.entryTypeField
            End Get
            Set
                Me.entryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrefPaymentDate() As Integer
            Get
                Return Me.prefPaymentDateField
            End Get
            Set
                Me.prefPaymentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChargePercentage() As Integer
            Get
                Return Me.chargePercentageField
            End Get
            Set
                Me.chargePercentageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobileNumber() As String
            Get
                Return Me.mobileNumberField
            End Get
            Set
                Me.mobileNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailAddress() As String
            Get
                Return Me.emailAddressField
            End Get
            Set
                Me.emailAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DOB() As Date
            Get
                Return Me.dOBField
            End Get
            Set
                Me.dOBField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class NewBusiness
        Inherits Transaction
        
        Private custTitleField As String
        
        Private custForeNamesField As String
        
        Private custSurnameField As String
        
        Private custAddress1Field As String
        
        Private custAddress2Field As String
        
        Private custAddress3Field As String
        
        Private custAddress4Field As String
        
        Private custAddress5Field As String
        
        Private custPostCodeField As String
        
        Private custHomeTelField As String
        
        Private custWorkTelField As String
        
        Private addCoverCodeField As String
        
        Private bankSortCodeField As String
        
        Private bankAccountNumberField As String
        
        Private bankAccountNameField As String
        
        Private businessTypeField As Char
        
        Private creditAgreementDateField As Date
        
        Private creditRenewalDateField As Date
        
        Private clientPremiumField As Integer
        
        Private numInstalmentsField As Integer
        
        Private instalmentAmtField As Integer
        
        Private depositAmtField As Integer
        
        Private contractDateField As Date
        
        Private entryTypeField As Char
        
        Private prefPaymentDateField As Integer
        
        Private chargePercentageField As Integer
        
        Private mobileNumberField As String
        
        Private emailAddressField As String
        
        Private dOBField As Date
        
        '''<remarks/>
        Public Property CustTitle() As String
            Get
                Return Me.custTitleField
            End Get
            Set
                Me.custTitleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustForeNames() As String
            Get
                Return Me.custForeNamesField
            End Get
            Set
                Me.custForeNamesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustSurname() As String
            Get
                Return Me.custSurnameField
            End Get
            Set
                Me.custSurnameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress1() As String
            Get
                Return Me.custAddress1Field
            End Get
            Set
                Me.custAddress1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress2() As String
            Get
                Return Me.custAddress2Field
            End Get
            Set
                Me.custAddress2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress3() As String
            Get
                Return Me.custAddress3Field
            End Get
            Set
                Me.custAddress3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress4() As String
            Get
                Return Me.custAddress4Field
            End Get
            Set
                Me.custAddress4Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustAddress5() As String
            Get
                Return Me.custAddress5Field
            End Get
            Set
                Me.custAddress5Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustPostCode() As String
            Get
                Return Me.custPostCodeField
            End Get
            Set
                Me.custPostCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustHomeTel() As String
            Get
                Return Me.custHomeTelField
            End Get
            Set
                Me.custHomeTelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustWorkTel() As String
            Get
                Return Me.custWorkTelField
            End Get
            Set
                Me.custWorkTelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AddCoverCode() As String
            Get
                Return Me.addCoverCodeField
            End Get
            Set
                Me.addCoverCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankSortCode() As String
            Get
                Return Me.bankSortCodeField
            End Get
            Set
                Me.bankSortCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankAccountNumber() As String
            Get
                Return Me.bankAccountNumberField
            End Get
            Set
                Me.bankAccountNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BankAccountName() As String
            Get
                Return Me.bankAccountNameField
            End Get
            Set
                Me.bankAccountNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BusinessType() As Char
            Get
                Return Me.businessTypeField
            End Get
            Set
                Me.businessTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreditAgreementDate() As Date
            Get
                Return Me.creditAgreementDateField
            End Get
            Set
                Me.creditAgreementDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreditRenewalDate() As Date
            Get
                Return Me.creditRenewalDateField
            End Get
            Set
                Me.creditRenewalDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientPremium() As Integer
            Get
                Return Me.clientPremiumField
            End Get
            Set
                Me.clientPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumInstalments() As Integer
            Get
                Return Me.numInstalmentsField
            End Get
            Set
                Me.numInstalmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstalmentAmt() As Integer
            Get
                Return Me.instalmentAmtField
            End Get
            Set
                Me.instalmentAmtField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DepositAmt() As Integer
            Get
                Return Me.depositAmtField
            End Get
            Set
                Me.depositAmtField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContractDate() As Date
            Get
                Return Me.contractDateField
            End Get
            Set
                Me.contractDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EntryType() As Char
            Get
                Return Me.entryTypeField
            End Get
            Set
                Me.entryTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrefPaymentDate() As Integer
            Get
                Return Me.prefPaymentDateField
            End Get
            Set
                Me.prefPaymentDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChargePercentage() As Integer
            Get
                Return Me.chargePercentageField
            End Get
            Set
                Me.chargePercentageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MobileNumber() As String
            Get
                Return Me.mobileNumberField
            End Get
            Set
                Me.mobileNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailAddress() As String
            Get
                Return Me.emailAddressField
            End Get
            Set
                Me.emailAddressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DOB() As Date
            Get
                Return Me.dOBField
            End Get
            Set
                Me.dOBField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Partial Public Class SchemeQuote
        
        Private schemeCodeField As String
        
        Private schemeNameField As String
        
        Private transactionTypeField As eTransactionType
        
        Private premiumField As Decimal
        
        Private pPICodeField As String
        
        Private requiredRateField As Decimal
        
        Private overrideRateField As Boolean
        
        Private interestFreeField As Boolean
        
        Private totalPayableField As Decimal
        
        Private instalmentField As Decimal
        
        Private defaultPeriodField As Integer
        
        Private numInstalmentsField As Integer
        
        Private instalmentGapField As Integer
        
        Private instalmentHolidayField As Integer
        
        Private instalmentUnitField As String
        
        Private minimumServiceChargeField As Decimal
        
        Private serviceChargePercentageField As Decimal
        
        Private totalPayableWithPPIField As Decimal
        
        Private instalmentWithPPIField As Decimal
        
        Private aPRField As Decimal
        
        Private serviceChargePercentageNoMSCField As Decimal
        
        Private totalPayableNoMSCField As Decimal
        
        Private instalmentNoMSCField As Decimal
        
        Private aPRNoMSCField As Decimal
        
        Private basicServiceChargePercentageField As Decimal
        
        Private schemeTypeField As eSchemeType
        
        Private schemeMinimumServiceChargeField As Decimal
        
        Private cCASchemeField As Boolean
        
        Private plasmaMessagesField As String
        
        Private schemeDefaultDepositField As Integer
        
        '''<remarks/>
        Public Property SchemeCode() As String
            Get
                Return Me.schemeCodeField
            End Get
            Set
                Me.schemeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemeName() As String
            Get
                Return Me.schemeNameField
            End Get
            Set
                Me.schemeNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionType() As eTransactionType
            Get
                Return Me.transactionTypeField
            End Get
            Set
                Me.transactionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Premium() As Decimal
            Get
                Return Me.premiumField
            End Get
            Set
                Me.premiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PPICode() As String
            Get
                Return Me.pPICodeField
            End Get
            Set
                Me.pPICodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RequiredRate() As Decimal
            Get
                Return Me.requiredRateField
            End Get
            Set
                Me.requiredRateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OverrideRate() As Boolean
            Get
                Return Me.overrideRateField
            End Get
            Set
                Me.overrideRateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InterestFree() As Boolean
            Get
                Return Me.interestFreeField
            End Get
            Set
                Me.interestFreeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalPayable() As Decimal
            Get
                Return Me.totalPayableField
            End Get
            Set
                Me.totalPayableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Instalment() As Decimal
            Get
                Return Me.instalmentField
            End Get
            Set
                Me.instalmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultPeriod() As Integer
            Get
                Return Me.defaultPeriodField
            End Get
            Set
                Me.defaultPeriodField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumInstalments() As Integer
            Get
                Return Me.numInstalmentsField
            End Get
            Set
                Me.numInstalmentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstalmentGap() As Integer
            Get
                Return Me.instalmentGapField
            End Get
            Set
                Me.instalmentGapField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstalmentHoliday() As Integer
            Get
                Return Me.instalmentHolidayField
            End Get
            Set
                Me.instalmentHolidayField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstalmentUnit() As String
            Get
                Return Me.instalmentUnitField
            End Get
            Set
                Me.instalmentUnitField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MinimumServiceCharge() As Decimal
            Get
                Return Me.minimumServiceChargeField
            End Get
            Set
                Me.minimumServiceChargeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ServiceChargePercentage() As Decimal
            Get
                Return Me.serviceChargePercentageField
            End Get
            Set
                Me.serviceChargePercentageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalPayableWithPPI() As Decimal
            Get
                Return Me.totalPayableWithPPIField
            End Get
            Set
                Me.totalPayableWithPPIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstalmentWithPPI() As Decimal
            Get
                Return Me.instalmentWithPPIField
            End Get
            Set
                Me.instalmentWithPPIField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APR() As Decimal
            Get
                Return Me.aPRField
            End Get
            Set
                Me.aPRField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ServiceChargePercentageNoMSC() As Decimal
            Get
                Return Me.serviceChargePercentageNoMSCField
            End Get
            Set
                Me.serviceChargePercentageNoMSCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalPayableNoMSC() As Decimal
            Get
                Return Me.totalPayableNoMSCField
            End Get
            Set
                Me.totalPayableNoMSCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InstalmentNoMSC() As Decimal
            Get
                Return Me.instalmentNoMSCField
            End Get
            Set
                Me.instalmentNoMSCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APRNoMSC() As Decimal
            Get
                Return Me.aPRNoMSCField
            End Get
            Set
                Me.aPRNoMSCField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BasicServiceChargePercentage() As Decimal
            Get
                Return Me.basicServiceChargePercentageField
            End Get
            Set
                Me.basicServiceChargePercentageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemeType() As eSchemeType
            Get
                Return Me.schemeTypeField
            End Get
            Set
                Me.schemeTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemeMinimumServiceCharge() As Decimal
            Get
                Return Me.schemeMinimumServiceChargeField
            End Get
            Set
                Me.schemeMinimumServiceChargeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCAScheme() As Boolean
            Get
                Return Me.cCASchemeField
            End Get
            Set
                Me.cCASchemeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PlasmaMessages() As String
            Get
                Return Me.plasmaMessagesField
            End Get
            Set
                Me.plasmaMessagesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SchemeDefaultDeposit() As Integer
            Get
                Return Me.schemeDefaultDepositField
            End Get
            Set
                Me.schemeDefaultDepositField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Public Enum eSchemeType
        
        '''<remarks/>
        Unknown
        
        '''<remarks/>
        NetScheme
        
        '''<remarks/>
        MarkupScheme
        
        '''<remarks/>
        GrossScheme
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34209"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="www.PCL.co.uk/XMLTransferService/XMLTransferEngine")>  _
    Public Enum eCurrencyType
        
        '''<remarks/>
        All
        
        '''<remarks/>
        Sterling
        
        '''<remarks/>
        Euros
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetQuoteCompletedEventHandler(ByVal sender As Object, ByVal e As GetQuoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetQuoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Quotation
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Quotation)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub SaveTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As SaveTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub DeleteTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GenerateCreditAgreementCompletedEventHandler(ByVal sender As Object, ByVal e As GenerateCreditAgreementCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerateCreditAgreementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateNewBusinessCompletedEventHandler(ByVal sender As Object, ByVal e As CreateNewBusinessCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateNewBusinessCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateRenewalCompletedEventHandler(ByVal sender As Object, ByVal e As CreateRenewalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateRenewalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateMidTermAdjustmentCompletedEventHandler(ByVal sender As Object, ByVal e As CreateMidTermAdjustmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateMidTermAdjustmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateCancellationCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCancellationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCancellationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateMidTermTransferCompletedEventHandler(ByVal sender As Object, ByVal e As CreateMidTermTransferCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateMidTermTransferCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateChangeOfClientReferenceCompletedEventHandler(ByVal sender As Object, ByVal e As CreateChangeOfClientReferenceCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateChangeOfClientReferenceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateChangeOfAdditionalCoverCompletedEventHandler(ByVal sender As Object, ByVal e As CreateChangeOfAdditionalCoverCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateChangeOfAdditionalCoverCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateChangeOfAddressCompletedEventHandler(ByVal sender As Object, ByVal e As CreateChangeOfAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateChangeOfAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateReinstatementCompletedEventHandler(ByVal sender As Object, ByVal e As CreateReinstatementCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateReinstatementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateChangeOfBankDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As CreateChangeOfBankDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateChangeOfBankDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateChangeOfContractInceptionDateCompletedEventHandler(ByVal sender As Object, ByVal e As CreateChangeOfContractInceptionDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateChangeOfContractInceptionDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub CreateChangeOfCollectionDateCompletedEventHandler(ByVal sender As Object, ByVal e As CreateChangeOfCollectionDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateChangeOfCollectionDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetNextTransactionIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetNextTransactionIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNextTransactionIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetVersionCompletedEventHandler(ByVal sender As Object, ByVal e As GetVersionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetVersionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetStatementCompletedEventHandler(ByVal sender As Object, ByVal e As GetStatementCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetStatementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Statement
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Statement)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub GetBlankCreditAgreementCompletedEventHandler(ByVal sender As Object, ByVal e As GetBlankCreditAgreementCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBlankCreditAgreementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub ValidateBankDetailsCompletedEventHandler(ByVal sender As Object, ByVal e As ValidateBankDetailsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidateBankDetailsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As TransactionResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),TransactionResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")>  _
    Public Delegate Sub FindTransactionCompletedEventHandler(ByVal sender As Object, ByVal e As FindTransactionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindTransactionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Transaction()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Transaction())
            End Get
        End Property
    End Class
End Namespace
